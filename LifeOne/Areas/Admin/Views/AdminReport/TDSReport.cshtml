@model LifeOne.Models.AdminManagement.AEntity.MTDSReport
@{
    ViewBag.Title = "TDS Report";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



<div class="container-fluid">


        <div class="row page-titles">
            <div class="ptitle">
                <h4 class="mb-1 mt-0">TDS Report</h4>
                @*<nav aria-label="breadcrumb" class="float-left">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/Admin-Dashboard">Dashboard</a></li>
                            <li class="breadcrumb-item"><a href="#-">Accounts</a></li>
                            <li class="breadcrumb-item active" aria-current="page">TDS Report</li>
                        </ol>
                    </nav>*@
            </div>
            <div class="pbutton">
                <div class="right text-right">
                    @*<span>
                            <a class="advance-search" title="Click here for search" data-toggle="tooltip" data-placement="bottom" href="#-">Search</a>
                        </span>*@
                    <span>
                        <a href="#" onclick="fCallPaging(1,1)" class="btn btn-success btn-rounded btngreen"><i class="fa fa-file-excel-o" data-toggle="tooltip" data-placement="top" title="Download Excel"></i></a>
                        @*<button class="btn btn-success btn-rounded btnprint" onclick="printDiv('customers')" title="Print"><i class="fa fa-print"></i></button>*@
                        <button class="btn btn-success btn-rounded btnPdf" id="btnpdf" data-toggle="tooltip" data-placement="top" title="Download PDF"><i class="fa fa-file-pdf-o"></i></button>
                    </span>

                </div>
            </div>
        </div>

        <div id="no-more-tables">
            <div class="row">
                <div class="col-lg-12">
                    <div class="box">

                        @using (Html.BeginForm("TDSReport", "AdminReport", FormMethod.Post, new {@style="height:0;"}))
                        {
                            <div class="box-body">

                                <div class="row" id="advance-search" style="display:none;">
                                    <div class="col-md-12">
                                        <div class="alert alert-warning" style="color:#727272 !important">
                                            <div class="row">

                                                @Html.HiddenFor(m => m.Page)
                                                @Html.HiddenFor(m => m.IsExport)
                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label>Login Id</label>
                                                        <input type="text" name="LoginID" id="LoginID" placeholder="Enter Login Id" class="form-control" value="@ViewBag.LoginId">
                                                    </div>
                                                </div>
                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label>Payout No</label>
                                                        <input type="text" name="PayoutNo" id="PayoutNo" placeholder="Enter Payout No" class="form-control" value="@ViewBag.PayoutNo">
                                                    </div>
                                                </div>


                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label>Month</label>

                                                        @Html.DropDownListFor(m => m.FinancealMonth, new SelectList(ViewBag.FinancealMonth, "Value", "Text"), new { @class = "form-control", @id = "FinancealMonth" })
                                                    </div>
                                                </div>
                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label>Year</label>

                                                        @Html.DropDownListFor(m => m.FinancealYear, new SelectList(ViewBag.FinancealYear, "Value", "Text"), new { @class = "form-control", @id = "FinancealYear" })
                                                    </div>
                                                </div>
                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label>From Date</label>
                                                        @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control", @name = "FromDate", @type = "date" })
                                                        @*<input type="date" name="FromDate" id="FromDate" placeholder="" class="form-control">*@
                                                    </div>
                                                </div>
                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label>To Date</label>
                                                        @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control", @name = "ToDate", @type = "date" })
                                                        @*<input type="date" name="ToDate" id="ToDate" placeholder="" class="form-control ">*@
                                                    </div>
                                                </div>
                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label>Payment From Date</label>
                                                        @Html.TextBoxFor(m => m.FromPaymentDate, new { @class = "form-control", @name = "From Payment Date", @type = "date" })
                                                        @*<input type="date" name="FromDate" id="FromDate" placeholder="" class="form-control">*@
                                                    </div>
                                                </div>
                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label> Payment To Date</label>
                                                        @Html.TextBoxFor(m => m.ToPaymentDate, new { @class = "form-control", @name = "To Payment Date", @type = "date" })
                                                        @*<input type="date" name="ToDate" id="ToDate" placeholder="" class="form-control ">*@
                                                    </div>
                                                </div>

                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label style="display:block;"></label>
                                                        <input type="submit" class="btn btn-success " style="margin-top: 1.5em; display: none;" value="Search" id="BtnSearch">
                                                        <input type="submit" class="btn btn-success " style="margin-top:1.5em;" value="Search" onclick="fCallPaging(1,0)">

                                                        <input type="button" class="btn btn-secondary" onClick="fclaer();" style="margin-top:1.5em;" value="Reset">
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="table-responsive fixTableHead " id="customers" style="height: 462px !important;">
                                    <table class="table table-striped mb-0" id="tblCustomers">
                                        <thead>
                                            <tr>
                                                <th>#Sn.</th>
                                                <th>Login Id</th>
                                                <th>Direct Seller</th>
                                                <th>Mobile No</th>
                                                <th>PAN Card No</th>
                                                <th>Payout No</th>
                                                <th>Payout Date</th>
                                                <th>Paid Date</th>
                                                <th>Gross Amount</th>
                                                <th>TDS Amount</th>
                                                <th>Net Amount</th>
                                            </tr>
                                        </thead>

                                        @if (Model.Objlist != null && Model.Objlist.Count > 0)
                                        {
                                            int i = 1;
                                            int page = Model.Pager.CurrentPage;
                                            page = (page - 1);
                                            i = ((page) * (Model.Pager.PageSize));


                                            foreach (var item in Model.Objlist)
                                            {
                                                <tbody>
                                                    <tr>
                                                        <td data-title="#SN:">@(i = i + 1)</td>
                                                        <td data-title="LoginId:">@item.LoginId</td>
                                                        <td data-title="MemberName:">@item.Name</td>
                                                        <td data-title="Mobile:">@item.Mobile</td>
                                                        <td data-title="Pancard:">@item.PanNo</td>
                                                        <td data-title="PayoutNo:">@item.PayoutNo1</td>
                                                        <td data-title="ClosingDate:">@item.ClosingDate</td>
                                                        <td data-title="PaymentDate:">@item.PaymentDate</td>
                                                        <td data-title="GrossAmount:">@item.GrossAmount</td>
                                                        <td data-title="TDS:">@item.TDS</td>
                                                        <td data-title="NetAmount:">@item.NetAmount</td>
                                                    </tr>
                                                </tbody>
                                            }
                                        }
                                        else
                                        {
                                            <tfoot>
                                                <tr>
                                                    <td style="text-align:center" colspan="12">No Record Found..</td>
                                                </tr>
                                            </tfoot>
                                        }
                                    </table>

                                </div>
                                <footer class="card-footer bg-white p-2">
                                    <div class="d-md-flex align-items-center justify-content-between">

                                        @if (Model != null)
                                        {
                                            if (Model.Pager != null)
                                            {
                                                if (Model.Pager.EndPage > 1)
                                                {
                                                    <div> <small class="text-muted inline">showing @Model.Objlist.Count  of @Model.Objlist[0].TotalRecords items</small> </div>
                                                    <div>
                                                        <ul class="pagination pagination-sm m-t-none m-b-none">
                                                            @if (Model.Pager.CurrentPage > 1)
                                                            {
                                                                <li class="page-item">
                                                                    <a class="page-link" onclick="fCallPaging(1,0)" href="#">First</a>

                                                                </li>
                                                                <li class="page-item">

                                                                    <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage - 1),0)" href="#">Previous</a>
                                                                </li>
                                                            }
                                                            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                                                            {
                                                                <li class="page-item @(page == Model.Pager.CurrentPage ? "active" : "")">


                                                                    <span><a class="page-link" onclick="fCallPaging(@page,0)" href="#">@page</a></span>
                                                                </li>
                                                            }
                                                            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                                                            {
                                                                <li class="page-item">

                                                                    <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage + 1),0)" href="#">Next</a>

                                                                </li>
                                                                <li class="page-item">

                                                                    <a class="page-link" onclick="fCallPaging(@(Model.Pager.TotalPages),0)" href="#">Last</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                }
                                            }

                                        }

                                    </div>
                                </footer>

                                <!-- /.box-body -->
                            </div>
                            <!-- /.box -->

                        }
                        </div>
                    <!-- /.col -->
                </div>
            </div>
        </div>



</div>
<div id="tblpdff" style="font-size:50px;">

</div>

<script>

   
    function fclaer() {
        $(".fclear").val('');
        $("#Page").val(1);
        $("#IsExport").val(0);
        window.location.reload();
    }

    function fCallPaging(val, IsExport) {
        debugger;
        if (val == undefined || val == NaN || val == null || val == "" || val == 0) {
            val = 1;
        }
        $("#IsExport").val(IsExport);
        $("#Page").val(val);
        $('#BtnSearch').trigger('click');

    }


    $('#btnpdf').click(function () {
        debugger;
        var col = [0]; // coloms to remove

        var tbl = $('#tblCustomers').clone();
        var tablenew = tbl.get(0);

        for (var c = 0; c < col.length; c++) {
            for (var i = 0; i < tablenew.rows.length; i++) {

                var tableRow = tablenew.rows[i];

                for (var j = 0; j < tableRow.cells.length; j++) {
                    if (j == col[c]) {
                        tableRow.cells[j].remove();

                    }
                }
            }
        }


        var table1 =
            tableToJson(tbl.get(0)),
            cellWidth = 28,
            rowCount = 0,
            cellContents,
            leftMargin = 2,
            topMargin = 12,
            topMarginTable = 55,
            headerRowHeight = 13,
            rowHeight = 9,

            l = {
                orientation: 'l',
                unit: 'mm',
                format: 'a4',
                compress: true,
                fontSize: 8,
                lineHeight: 1,
                autoSize: false,
                printHeaders: true
            };
        var doc = new jsPDF(l, '', '', '');
        doc.page = 1; // use this as a counter.

        function footer() {
            doc.text(150, 285, 'page ' + doc.page); //print number bottom right

            doc.page++;
        };

        doc.setProperties({
            title: 'TDS Report',
            subject: 'This is the subject',
            author: 'author',
            keywords: 'generated, javascript, web 2.0, ajax',
            creator: 'author'
        });

        doc.cellInitialize();

        $.each(table1, function (i, row) {

            rowCount++;

            $.each(row, function (j, cellContent) {

                if (rowCount == 1) {
                    doc.margins = 1;
                    doc.setFont("helvetica");
                    doc.setFontType("bold");
                    doc.setFontSize(9);

                    doc.cell(leftMargin, topMargin, cellWidth, headerRowHeight, cellContent, i)
                }
                else if (rowCount == 2) {
                    doc.margins = 1;
                    doc.setFont("times");
                    doc.setFontType("Times New Roman");  // or for normal font type use ------ doc.setFontType("normal");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);
                }
                else {

                    doc.margins = 1;
                    doc.setFont("courier ");
                    doc.setFontType("Times New Roman ");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);  // 1st=left margin    2nd parameter=top margin,     3rd=row cell width      4th=Row height
                }
            })
        })

        doc.text(150, 285, 'page ' + doc.page); //print number bottom right
        doc.setFontSize(25);
        doc.setFillColor('#DCDCDC');
        doc.rect(1, 0, 400, 10, "F");
        doc.setTextColor(0, 0, 0);
        doc.text(110, 8, "TDS Report");
        doc.page++;
        doc.save('TDS Report.pdf');

    });


    function tableToJson(table) {
        var data = [];

        // first row needs to be headers
        var headers = [];
        for (var i = 0; i < table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
        }


        // go through cells
        for (var i = 0; i < table.rows.length; i++) {

            var tableRow = table.rows[i];
            var rowData = {};

            for (var j = 0; j < tableRow.cells.length; j++) {

                rowData[headers[j]] = tableRow.cells[j].textContent.trim() == "" ? "-" : tableRow.cells[j].textContent.trim();

            }

            data.push(rowData);
        }

        return data;
    }

    // createPDF--------------
    function createPDF() {
        var sTable = document.getElementById('tblCustomers').innerHTML;

        var style = "<style>";
        style = style + "table {width: 100%;font: 17px Calibri;}";
        style = style + "table, th, td {border: solid 1px #DDD; border-collapse: collapse;";
        style = style + "padding: 2px 3px;text-align: center;}";
        style = style + "</style>";

        // CREATE A WINDOW OBJECT.
        var win = window.open('', '', 'height=700,width=700');

        win.document.write('<html><head>');
        win.document.write('<title>TDS Report</title>');   // <title> FOR PDF HEADER.
        win.document.write(style);          // ADD STYLE INSIDE THE HEAD TAG.
        win.document.write('</head>');
        win.document.write('<body>');
        win.document.write(sTable);         // THE TABLE CONTENTS INSIDE THE BODY TAG.
        win.document.write('</body></html>');

        win.document.close(); // CLOSE THE CURRENT WINDOW.

        win.print();    // PRINT THE CONTENTS.
    }

    // PRINT THE CONTENTS-----------------------------
    function printDiv(divName) {
        var printContents = document.getElementById(divName).innerHTML;
        var originalContents = document.body.innerHTML;
        document.body.innerHTML = printContents;
        window.print();
        document.body.innerHTML = originalContents;
    }
</script>