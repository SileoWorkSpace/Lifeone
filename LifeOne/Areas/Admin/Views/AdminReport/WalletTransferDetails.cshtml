@model LifeOne.Models.WalletTransfer

@{
    ViewBag.Title = "Wallet Transfer Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container-fluid">

    <div class="row page-titles">
        <div class="ptitle">
            <h4 class="mb-1 mt-0">Wallet Transfer Details</h4>
        </div>
    </div>
    <div id="no-more-tables">
        <form id="form1" method="post">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">

                            @using (Html.BeginForm("WalletTransferDetails", "AdminReport", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
                            {
                                <div class="row" id="advance-search" style="display:none;">
                                    <div class="col-md-12">
                                        <div class="alert alert-warning" style="color:#727272 !important">
                                            <div class="row">
                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label>From Login Id</label>
                                                        @Html.TextBoxFor(m => m.FromLoginId, new { @class = "form-control", @placeholder = "Enter From Login Id" })
                                                        @Html.HiddenFor(m => m.Page)

                                                    </div>
                                                </div>
                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label>To Login Id</label>
                                                        @Html.TextBoxFor(m => m.ToLoginId, new { @class = "form-control", @placeholder = "Enter To Login Id" })
                                                        @Html.HiddenFor(m => m.Page)

                                                    </div>
                                                </div>

                                                <div class="col-12 col-md-2">
                                                    <div class="form-group">
                                                        <label style="display:block;"></label>
                                                        <input type="submit" class="btn btn-success " style="margin-top:1.5em;" value="Search" id="BtnSearch">

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                             }
                            <div class="table-responsive" id="customers">
                                <table class="table mb-0" id="tblCustomers">
                                    <thead>
                                        <tr>
                                            <th>#Sn.</th>
                                            <th>From LoginId</th>
                                            <th>To LoginId</th>
                                            <th>Amount</th>
                                            <th>Transfer Date</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model != null && Model.getwalletdetails.Rows.Count > 0)
                                        {
                                            int j = 0;
                                            int page = Model.Page ?? 0;
                                            page = (page - 1);


                                            j = ((page) * (Model.Size));
                                            for (var i = 0; i <= Model.getwalletdetails.Rows.Count - 1; i++)
                                            {
                                                <tr>
                                                    <td>@(j+1)</td>
                                                    <td>@Model.getwalletdetails.Rows[i]["FromLoginId"].ToString()</td>
                                                    <td>@Model.getwalletdetails.Rows[i]["ToLoginId"].ToString()</td>
                                                    <td>@Model.getwalletdetails.Rows[i]["Amount"].ToString()</td>
                                                    <td>@Model.getwalletdetails.Rows[i]["TransferDate"].ToString()</td>
                                                </tr>
                                                j++;
                                            }
                                         }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <footer class="card-footer bg-white p-2">
                            <div class="d-md-flex align-items-center justify-content-between">

                                @if (Model != null)
                                {
                                    if (Model.Pager != null)
                                    {
                                        if (Model.Pager.EndPage > 1)
                                        {
                                            <div> <small class="text-muted inline">showing @Model.getwalletdetails.Rows.Count  of @Model.getwalletdetails.Rows[0]["TotalRecord"].ToString() items</small> </div>
                                            <div>
                                                <ul class="pagination pagination-sm m-t-none m-b-none">
                                                    @if (Model.Pager.CurrentPage > 1)
                                                    {
                                                        <li class="page-item">
                                                            <a class="page-link" onclick="fCallPaging(1)" href="#">First</a>
                                                        </li>
                                                        <li class="page-item">
                                                            <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage - 1))" href="#">Previous</a>
                                                        </li>
                                                    }
                                                    @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                                                    {
                                                        <li class="page-item @(page == Model.Pager.CurrentPage ? "active" : "")">

                                                            <span><a class="page-link" onclick="fCallPaging(@page)" href="#">@page</a></span>
                                                        </li>
                                                    }
                                                    @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                                                    {
                                                        <li class="page-item">
                                                            <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage + 1))" href="#">Next</a>

                                                        </li>
                                                        <li class="page-item">
                                                            <a class="page-link" onclick="fCallPaging(@(Model.Pager.TotalPages))" href="#">Last</a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        }
                                    }
                                 }
                            </div>
                        </footer>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->

                </div>
                <!-- /.col -->
            </div>

        </form>
    </div>
</div>
<script>
    $(document).ready(function () {
        if ($('#txtStatus').val() != '' && $('#txtStatus').val() != undefined) {
            $('#ddlStatus').val($('#txtStatus').val());
        }
    });
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;
    }
    function fCallPaging(val) {
        if (val == undefined || val == NaN || val == null || val == "" || val == 0) {
            val = 1;
        }
        $("#Page").val(val);
        $('#BtnSearch').trigger('click');
    }
</script>


