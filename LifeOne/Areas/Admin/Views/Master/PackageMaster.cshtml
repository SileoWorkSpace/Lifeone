@model LifeOne.Models.Reports
@using LifeOne.Models.Manager;
@{
    ViewBag.Title = "PackageMaster";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .card-body.em .row .col-md-6 {
        margin-bottom: 10px;
    }
    /* The container */
    .container2 {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 15px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default radio button */
        .container2 input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    /* Create a custom radio button */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
        border-radius: 50%;
    }

    /* On mouse-over, add a grey background color */
    .container2:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the radio button is checked, add a blue background */
    .container2 input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the indicator (the dot/circle - hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the indicator (dot/circle) when checked */
    .container2 input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the indicator (dot/circle) */
    .container2 .checkmark:after {
        top: 9px;
        left: 9px;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: white;
    }

    .dv_Orbit {
        display: none;
    }
</style>



@using (Html.BeginForm("PackageMaster", "Master", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="registration-form  ml-auto mr-auto no-float">
        <div class="container" style="background-color:#fff; padding:20px;border-radius:10px;">
            <div class="row">
                <div class="card">
                    <div class="card-body em">
                        <div class="col-md-12">
                            <div class="mb-30">
                                <h2 class="nonecase-font txt-grey">Combo Package Master</h2>
                            </div>
                            <hr />
                        </div>

                        <div class="col-md-12">

                            <div class="row">



                                <div class="col-md-3">
                                    <label>Package Name<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.PackageName, new { @class = "form-control" })
                                </div>

                                <div class="col-md-3">
                                    <label>Package Amount<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.PackageAmount, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })


                                </div>
                                <div class="col-md-3">
                                    <label>Price<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })

                                </div>


                                <div class="col-md-3 form-group" id="dv_PV">
                                    <label>CGST<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.CGST, new { @class = "form-control" })

                                </div>

                                <div class="col-md-3 form-group" id="dv_PV">
                                    <label>SGST<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.SGST, new { @class = "form-control" })

                                </div>

                                <div class="col-md-3 form-group" id="dv_PV">
                                    <label>IGST<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.IGST, new { @class = "form-control" })

                                </div>


                                <div class="col-md-3 form-group">
                                    <label>BV<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.BP, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>

                                <div class="col-md-3 form-group">
                                    <label>DP<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.DP, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>

                                <div class="col-md-4 form-group">
                                    <label>Rate<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.Rate, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>


                                <div class="col-md-4 form-group">
                                    <label>CappingPoints<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.CappingPoints, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>

                                <div class="col-md-4 form-group">
                                    <label>Minimum BV <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.MinBv, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                                <div class="col-md-2 form-group">
                                    @Html.CheckBoxFor(m => m.IsDiscount)
                                    <label>IsDiscount</label>
                                </div>
                                <div id="dis" class="col-md-10" style="display:none;">

                                    <div class="row">
                                        @*<div class="col-md-6 form-group">
                                            <label>Discount<span style="color:red;">*</span></label>
                                            @Html.TextBoxFor(m => m.Discount, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                        </div>*@
                                        <div class="col-md-6 form-group">

                                            <label>Percentage<span style="color:red;">*</span></label>
                                            @Html.TextBoxFor(m => m.Percentage, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-12 form-group">
                                    @Html.CheckBoxFor(m => m.IsFixed)
                                    <label>IsFixed</label>
                                </div>
                            </div>
                            <div class="row" style="display:none;" id="dvbIsFixed">
                                <div class="col-md-3 ">
                                    <label>Product<span style="color:red;">*</span></label>

                                    @Html.DropDownListFor(m => m.Pk_ProductId, new SelectList(ViewBag.ddlProduct, "Value", "Text"), new { @class = "form-control" })


                                </div>

                                <div class="col-md-3 form-group">
                                    <label>Product MRP<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.ProductMRP, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>

                                <div class="col-md-3 form-group">
                                    <label>Product BV <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.ProductBV, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>

                                <div class="col-md-3 form-group">
                                    <label>Sale Price <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.ProductDP, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                                <div class="col-md-3 form-group">
                                    <label>Product Qty <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.ProductQTY, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                                <div class="col-md-3" style="margin-top:30px;">
                                    <label></label>
                                    <button type="button" value="ADD" class="btn btn-primary" onclick="return Addvalidate();">ADD</button>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group label-floating is-empty">
                                        <table class="table " id="TmpProd">
                                            <thead>
                                                <tr>
                                                    <th>Sn</th>
                                                    <th>Product</th>
                                                    <th>Price(₹)</th>
                                                    <th>BV</th>
                                                    <th>Sale Price</th>
                                                    <th>Quantity</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>

                                            <tbody>
                                          
                                            </tbody>
                                           
                                        </table>

                                    </div>
                                </div>
                            </div>
                            <br />

                            <div class="row">
                                <div class="col-md-12" style="margin-top:10px">
                                    <div class="text-center" style="margin-left:50px">
                                        @{
                                            var Button = "";
                                            if (Model == null)
                                            {
                                                Button = "Save";
                                            }

                                            else if (Model != null)
                                            {

                                                if (Model.Pk_PackageID == 0)
                                                {
                                                    Button = "Save";
                                                }
                                                else
                                                {
                                                    Button = "Update";
                                                }
                                            }
                                            <button type="submit" value="@Button" class="btn btn-success" onclick="return validate();" name="@Button">@Button</button>

                                        }


                                        <a href="/PackageMasterList" class="btn btn-danger"> Cancel</a>
                                    </div>
                                </div>

                            </div>

                        </div>
                        <br />

                    </div>
                    @Html.HiddenFor(m => m.Pk_PackageID)

                </div>
            </div>
        </div>
    </div>
}
<script type="text/javascript">


    $(document).ready(function () {
        
        funcbindVarients()
        var IsFixed = $('#IsFixed').val();
        var IsFixed1 = $('#IsFixed').is(':checked');
        if ($('#IsFixed').is(':checked')) {

            $('#dvbIsFixed').show();
        }
        else {

            $('#dvbIsFixed').hide();
            $('#Pk_ProductId').val("0");
            $('#ProductMRP').val("");
            $('#ProductBV').val("");
            $('#ProductDP').val("");
            $('#ProductQTY').val("");
        }

        //for discount
        debugger
        //var Isdiscount = $('#IsDiscount').val();

        if ($('#IsDiscount').is(":checked") == true) {
            $('#dis').show();
        }
        else {
            $('#dis').hide();
            $('#Percentage').val("0");
        }
       

        
    });

    function validate() {
        var PackageName = $('#PackageName').val();
        var PackageAmount = $('#PackageAmount').val();
        var Price = $('#Price').val();
        var CGST = $('#CGST').val();
        var SGST = $('#SGST').val();
        var IGST = $('#IGST').val();
        var BP = $('#BP').val();
        var DP = $('#DP').val();
        var Rate = $('#Rate').val();
        var CappingPoints = $('#CappingPoints').val();
        var MinBv = $('#MinBv').val();


        if (PackageName == null || PackageName == "") {
            alert("Please Add Package Name");
            return false;
        }
        else if (PackageAmount == null || PackageAmount == "") {
            alert("Please Add Package Amount");
            return false;

        }

        else if (Price == null || Price == "") {
            alert("Please Add Price ");
            return false;
        }
        else if (CGST == null || CGST == "") {
            alert("Please Add CGST");
            return false;
        }
        else if (IGST == null || IGST == "") {
            alert("Please Add IGST");
            return false;
        }
        else if (SGST == null || SGST == "") {
            alert("Please Add SGST");
            return false;
        }
        else if (BP == null || BP == "") {
            alert("Please Add BP");
            return false;
        }
        else if (DP == null || DP == "") {
            alert("Please Add Sale Price");
            return false;
        }
        else if (Rate == null || Rate == "") {
            alert("Please Add Rate");
            return false;
        }
        else if (CappingPoints == null || CappingPoints == "") {
            alert("Please Add Capping Points");
            return false;
        } else if (MinBv == null || MinBv == "")
        {
            alert("Please Add Minimum BV");
            return false;
        }
        else if ($('#IsFixed').is(':checked')) {
            var rowCount = $("#TmpProd tbody tr").length;
            if (rowCount <= 0) {
                alert('Please Add Atleast One item!');
                return false;
            }

        }
        else {
            $('#idfinalsubmit').click();
        }

    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;
    }
    $("#IsFixed").change(function () {
        
        if (this.checked) {
            $('#dvbIsFixed').show();

        } else {
            $('#dvbIsFixed').hide();
            $('#Pk_ProductId').val("0");
            $('#ProductMRP').val("");
            $('#ProductBV').val("");
            $('#ProductDP').val("");
            $('#ProductQTY').val("");

        }
    });

    //for Isdiscount
    $('#IsDiscount').change(function () {

        debugger;
        if (this.checked) {
            $('#dis').show();
        }
        else {
            $('#dis').hide();
            $('#Percentage').val("0");
        }


    });
    function funcbindVarients() {+

        //  if ($('#Pk_ProductId').val() != '' && $('#Pk_ProductId').val() != null) {
        $.ajax({
            url: "/Master/GetTempPackageProduct",
            type: "POST",
            data: { Pk_PackageID: $("#Pk_PackageID").val()},
            success: function (response) {
                var srno = 1;
                var str = "";
              
                $("#TmpProd tbody").html('');

                for (var i = 0; i < response.length; i++) {
                    let Deletefunc = 'DeleteVarient(' + response[i].Pk_PackageProductId + ')';
                
                    str += "<tr><td>" + srno + "</td><td>" + response[i].ProductName + "</td><td>" + response[i].ProductMRP + "</td><td>" + response[i].ProductBV + "</td><td>" + response[i].ProductDP + "</td><td>" + response[i].ProductQTY + "</td><td><a href='javascript:void(0)' class='text-danger'  title='Delete' onclick='return " + Deletefunc + "'><i class='fa fa-trash'></i></a></td></tr>";
                    
                    
                    //< td > <img src=" + response.varientList[i].secondaryImage + " class='imgtemp' /> </td>
                    srno = srno + 1;

                    $("#TmpProd tbody").html(str);
                }
                //if ($('#SubCategoryId').val() != '0') {
                //    fbindsubcategory();
                //}
            }
        })
        //  }
    }
    function Addvalidate() {
        if ($('#Pk_ProductId').val() == "0") {
            alert("Please Select Product");
            return false;
        }
        else if ($('#ProductMRP').val() == "" || $('#ProductMRP').val() == "0") {
            alert("Please Add Product MRP");
            return false;

        }

        else if ($('#ProductBV').val() == "" || $('#ProductBV').val() == "0") {
            alert("Please Add Product BV ");
            return false;
        }
        else if ($('#ProductDP').val() == "" || $('#ProductDP').val() == "0") {
            alert("Please Add Product DP");
            return false;
        }
        else if ($('#ProductQTY').val() == "" || $('#ProductQTY').val() == "0") {
            alert("Please Add Product Quantity");
            return false;
        }
        else {
            var data = new FormData();

            data.append("Pk_ProductId", $('#Pk_ProductId').val());
            data.append("ProductMRP", $('#ProductMRP').val());
            data.append("ProductBV", $('#ProductBV').val());
            data.append("ProductDP", $('#ProductDP').val());
            data.append("ProductQTY", $('#ProductQTY').val());
            data.append("Pk_PackageID", $('#Pk_PackageID').val());

            $.ajax({
                url: "/Master/AddPackageTemp",
                type: "POST",
                processData: false,
                contentType: false,
                data: data,
                success: function (response) {
                    if (response != null) {
                        if (response.Code == '1') {

                            $('#Pk_ProductId').val("0");
                            $('#ProductMRP').val("");
                            $('#ProductBV').val("");
                            $('#ProductDP').val("");
                            $('#ProductQTY').val("");

                            funcbindVarients();
                        }
                        else {
                            alert(response.Msg);
                        }
                    }
                },
                error: function (er) {

                }
            });



        }
       

    }
    function DeleteVarient(txtPk_ProductDetailId) {
        
        var result = confirm("Are you sure delete this product?")
        if (result == true) {
            $.ajax({
                url: '/Master/DeletePackageProductTemp',
                type: 'Post',
                data: { Pk_PackageProductId: txtPk_ProductDetailId },
                success: function (response) {
                    if (response != null) {

                        if (response.Code == '1') {

                            $('#Pk_ProductId').val("0");
                            $('#ProductMRP').val("");
                            $('#ProductBV').val("");
                            $('#ProductDP').val("");
                            $('#ProductQTY').val("");
                            funcbindVarients();
                        }
                        else {
                            alert(response.Msg);
                        }
                    }
                    else {
                        alert("Something went wrong!");
                    }

                },
                error: function (er) {

                }
            });
        }
    }
    $("#Percentage").blur(function (e) {
        let txtInput = parseInt(this.value);
        if (txtInput < 1 || txtInput > 100) {
            alert('CLP Percentage should be grater than 0 and less than 100');
            return false;
        }


    });
</script>
