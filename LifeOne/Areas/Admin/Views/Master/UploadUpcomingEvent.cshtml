@model LifeOne.Models.AdminManagement.AEntity.MUpcomingEvent
@{ 
    ViewBag.Title = "UploadUpcomingEvent";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{
    string msg = Convert.ToString(TempData["msg"]);
    string code = Convert.ToString(TempData["code"]);
    if (msg != "")
    {
        if (code.Equals("1"))
        {
            <div class="alert alert-success m-t-30" id="divsuccess">
                <i class="mdi mdi-checkbox-multiple-marked-outline"></i> <strong>Success!</strong> @msg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">×</span> </button>
            </div>

        }
        else
        {
            <div class="alert alert-danger m-t-30" id="divUpdate">
                <i class="mdi mdi-checkbox-multiple-marked-outline"></i>  <strong>Error!</strong> @msg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">×</span> </button>
            </div>
        }
    }
}
<!-- Start Content-->
<div class="container-fluid">
    <div class="row page-titles">
        <div class="ptitle">
            <h4 class="mb-1 mt-0">Upcoming Events</h4>
           
        </div>
        <div class="pbutton">
            <div class="right text-right">
                <a href="" id="btnAdd" class="btn btn-success btn-sm" onclick="return ResetPopup();" data-toggle="modal" title="Add New" Target="_blank" data-rel="tooltips" ToolTip="Edit" data-target="#myModal4">
                    <i class="fa fa-plus" aria-hidden="true"></i>Add New
                </a>
            </div>
        </div>

    </div>

    <div id="no-more-tables">
        <div class="row">

            <div class="col-lg-12">
                <div class="box">
                    <div class="box-body">


                        <div class="table-responsive">
                            <table class="table table-striped mb-0">
                                <thead>
                                    <tr>
                                        <th>#Sn.</th>
                                        <th>Upcoming Event</th>
                                        <th class="text-right">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.lstData != null)
                                    {
                                        int Sno = 0;
                                        foreach (var item in Model.lstData)
                                        {
                                            <tr>
                                                <td>@(++Sno)</td>
                                                <td><img src="@item.ImageUrl" height="100px" width="100px" /></td>

                                                <td>
                                                    <a href="/Admin/Master/DeleteUpcomingEvent?Id=@item.Id" onclick="return confirm ('Are you sure want to delete?');"  class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></a>                                                 
                                                </td>
                                            </tr>

                                        }

                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->

            </div>
            <!-- /.col -->
        </div>
    </div>

</div>


@using (Html.BeginForm("UploadUpcomingEvent", "Master", new { area = "Admin" }, FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="modal fade in" id="myModal4" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Upcoming Events</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <div class="row">
                            @Html.HiddenFor(m => m.Id, new { @id = "Id" })
                            <div class="row">
                                @Html.HiddenFor(m => m.Id, new { @id = "Id" })
                                <div class="col-md-3 form-group">
                                    <img src="@Model.ImageUrl" id="imagePreview" class="mt-3 ml-4 img-thumbnail avatar-xl" style="height:120px;width:120px;">
                                    @Html.TextBoxFor(m => m.ImageUrl_Doc, new { @type = "file", @id = "file", @onchange = "UploadFileAdd()" })
                                </div>

                            </div>
                        </div>

                    </form>
                </div>
                <div class="modal-footer">
                    <input type="submit" id="Save" name="Save" class="btn btn-primary" value="Save" onclick="return validate();" />

                    <a href="/Upload_UpcomingEvent" class="btn btn-danger"> Cancel</a>
                </div>
            </div>
        </div>
    </div>
}

<script>
    function ResetPopup() {
        $("#file").val("");
        $('#Save').val('Save');
        $("#Save").show();
    }
   
    function UploadFileAdd() {
        debugger;
        var files = $("#file").get(0).files;

      
        if (files.length == 0) {
            alert("Please select an image to upload.");
            return false;
        }

        var file = files[0];
        var extension = file.name.split('.').pop().toUpperCase();

        
        if (extension != "PNG" && extension != "JPG" && extension != "JPEG") {
            alert("Invalid image file format. Only jpg, jpeg, and png files are allowed.");
            return false;
        }

       
        var fileSize = file.size / 1024 / 1024; 
        if (fileSize > 3) { 
            alert("File size exceeds the 3 MB limit.");
            return false;
        }

      
        ShowImagePreview($("#file")[0]);
        return true;
    }
        
    function ShowImagePreview(input) {
        debugger;
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#imagePreview').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]); 
        }
    }

    
    function validate() {
        if ($('#file').val() == '' || $('#file').val() == null || $('#file').val() == undefined) {
            alert('Please upload an image');
            $('#file').focus();
            return false;
        }
        var extension = $("#file").val().split('.').pop().toUpperCase();
        if (extension != "PNG" && extension != "JPG" && extension != "JPEG") {
            alert("Invalid image file format. Only jpg, jpeg, and png files are allowed.");
            return false;
        }

        var files = $("#file").get(0).files;
        var maxSize = 3 * 1024 * 1024; 

        if (files.length > 0 && files[0].size > maxSize) {
            alert("Please upload an image smaller than 3 MB.");
            $("#file").val(''); 
            return false;
        }
    }
</script>


