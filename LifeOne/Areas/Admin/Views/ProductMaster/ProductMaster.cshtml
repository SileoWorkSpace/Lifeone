@model LifeOne.Models.AdminManagement.AEntity.MAdminProductMaster

@{
    ViewBag.Title = "ProductMaster";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .card-body.em .row .col-md-6 {
        margin-bottom: 10px;
    }
    /* The container */
    .container2 {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 15px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default radio button */
        .container2 input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    /* Create a custom radio button */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
        border-radius: 50%;
    }

    /* On mouse-over, add a grey background color */
    .container2:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the radio button is checked, add a blue background */
    .container2 input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the indicator (the dot/circle - hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the indicator (dot/circle) when checked */
    .container2 input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the indicator (dot/circle) */
    .container2 .checkmark:after {
        top: 9px;
        left: 9px;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: white;
    }

    .dv_Orbit {
        display: none;
    }
</style>
<link href="~/Content/dist/css/sweetalert.css" rel="stylesheet" />
@{
    string msg = (string)TempData["msg"];
    string code = (string)TempData["code"];
    if (msg != null)
    {
        if (code.Equals("1"))
        {
            <div class="alert alert-success m-t-30 msgdiv" id="divsuccess">
                <i class="mdi mdi-checkbox-multiple-marked-outline"></i> <strong>Success!</strong> @msg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">×</span> </button>
            </div>

        }
        else
        {
            <div class="alert alert-success m-t-30 msgdiv" id="divUpdate">
                <i class="mdi mdi-checkbox-multiple-marked-outline"></i>  <strong>Error!</strong> @msg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">×</span> </button>
            </div>




        }
    }
}
<br />

@using (Html.BeginForm("ProductMaster", "ProductMaster", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="registration-form  ml-auto mr-auto no-float">
        <div class="container" style="background-color:#fff; padding:20px;border-radius:10px;">
            <div class="row">
                <div class="card">
                    <div class="card-body em">
                        <div class="col-md-12">
                            <div class="mb-30">
                                <h2 class="nonecase-font txt-grey">Product Master</h2>
                            </div>
                            <hr />
                        </div>

                        <div class="col-md-12">

                            <div class="row">

                                @*<div class="col-md-3">
            <label>Box Type<span style="color:red;">*</span></label><br/>
            <label for="S">
                @Html.RadioButtonFor(m => m.BoxType, "Single", new { @onchange = "rdbBoxTypeChecked(this)", @checked = "checked" }) Single &nbsp;
            </label>
            <label for="B">
                @Html.RadioButtonFor(m => m.BoxType, "Box", new { @onchange = "rdbBoxTypeChecked(this)" }) Box &nbsp;
            </label>
        </div>*@
                                <div class="col-md-3 form-group">
                                    <label>Vendor Name</label>
                                    @Html.DropDownListFor(m => m.Fk_SupplierId, new SelectList(ViewBag.SupplierName, "Value", "Text"), new { @class = "form-control" })

                                </div>
                                <div class="col-md-3 form-group">
                                    <label>Product Type<span style="color:red;">*</span></label>
                                    @Html.DropDownListFor(m => m.Fk_ProductTypeId, new SelectList(ViewBag.ddProductType, "Value", "Text"), new { @class = "form-control" })

                                </div>

                                <div class="col-md-3">
                                    <label>Product Name<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control", @id = "ProductName" })
                                </div>

                                <div class="col-md-3">
                                    <label>MRP<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.MRP, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                </div>
                                <div class="col-md-3">
                                    <label>Sale Price<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.SalesPrice, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                </div>
                                <div class="col-md-3">
                                    <label>DP<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.DP, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                </div>

                                <div class="col-md-3 form-group" id="dv_PV">
                                    <label>BV<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.BV, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                </div>

                                <div class="col-md-3 form-group" id="dv_PV">
                                    <label>PV<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.PV, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                </div>
                                <div class="col-md-3  form-group">
                                    <label>Packing<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.Packing, new { @class = "form-control", @id = "Packing" })

                                </div>
                                <div class="col-md-3">
                                    <label>Unit<span style="color:red;">*</span></label>
                                    @Html.DropDownListFor(m => m.Fk_UnitId, new SelectList(ViewBag.ddUnit, "Value", "Text"), new { @class = "form-control" })

                                </div>

                                <div class="col-md-3 form-group">
                                    <label>HSN Code<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.HSNCode, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                </div>
                                <div class="col-md-3 form-group">                                 
                                <label>Offer Quantity<span style="color:red;">*</span></label>
                                @Html.TextBoxFor(m => m.OfferQuantity, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })                               
                            </div>

                                @*<div class="col-md-3 form-group">
            <label>Image<span style="color:red;">*</span></label>
            @Html.TextBoxFor(m => m.ProductImage, new { @type = "file", @onchange = "UploadFile(this,'ProductImage')" })
            @Html.HiddenFor(m => m.ProductImage, new { @Id = "HdnProductImage" })

        </div>*@

                                <div class="col-md-9  form-group">
                                    <label>Product Description<span style="color:red;">*</span></label>
                                    @Html.TextAreaFor(m => m.ProductDescription, new { @class = "form-control" })

                                </div>
                                <div class="col-md-12  form-group">
                                    <label>Direction Of Use</label>
                                    @Html.TextAreaFor(m => m.DirectionOfUse, new { @class = "form-control" })

                                </div>
                                <div class="col-md-12  form-group">
                                    <label>Dosage</label>
                                    @Html.TextAreaFor(m => m.Doses, new { @class = "form-control" })

                                </div>
                                <div class="col-md-12  form-group">
                                    <label>Avalibility</label>
                                    @Html.TextAreaFor(m => m.Avalibility, new { @class = "form-control" })

                                </div>
                                <div class="col-md-3 form-group">
                                    <label>CGST<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.CGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                </div>
                                <div class="col-md-3">
                                    <label>SGST<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.SGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                </div>
                                <div class="col-md-3">
                                    <label>IGST<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.IGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })

                                </div>


                                <div class="col-md-3">
                                    <label>Status<span style="color:red;">*</span></label>
                                    @Html.DropDownListFor(m => m.Fk_StatusId, new SelectList(ViewBag.ddStatus, "Value", "Text"), new { @class = "form-control" })
                                </div>
                                <div class="col-md-3 form-group">
                                    <label>Image<span style="color:red;">  (Size 300*400px .png file) *</span></label>
                                    <img src="@Model.ProductImage" id="imagePreview" class="mt-3 ml-4 img-thumbnail avatar-xl" style="height:120px;width:120px;">

                                    <!-- File Input -->
                                    @Html.TextBoxFor(m => m.file, new { @type = "file", @id = "file", @onchange = "UploadFile()" })


                                    @*<input type="Submit" value="Update" name="Update" class="btn btn-warning " onclick="return UploadFile() " id="BtnChangePassword">*@
                                    @*@Html.HiddenFor(m => m.file, new { @type = "file", @class = "input-text form-control", @onchange = "ShowImagePreview(this)" })*@
                                    @*<input type="file" onchange="ShowImagePreview(this)" hidden />*@

                                </div>
                            </div>
                            <br />

                            <div class="row">
                                <div class="col-md-12" style="margin-top:10px">
                                    <div class="text-center" style="margin-left:50px">
                                        @{
                                            var Button = "";
                                            if (Model == null)
                                            {
                                                Button = "Save";
                                            }

                                            else if (Model != null)
                                            {

                                                if (string.IsNullOrEmpty(Model.Pk_ProductId) || Model.Pk_ProductId == "0")
                                                {
                                                    Button = "Save";
                                                }
                                                else
                                                {
                                                    Button = "Update";
                                                }
                                            }
                                            <button type="button" value="@Button" class="btn btn-success" onclick="return validate();" name="@Button">@Button</button>
                                            @* < input type="submit" value="@Button" class="btn btn-success"   name="@Button" />*@

                                        }

                                        <input type="submit" class="btn btn-success" id="idfinalsubmit" name="Save" style="display:none" />
                                        <a href="/ProductMasterList" class="btn btn-danger"> Cancel</a>
                                    </div>
                                </div>

                            </div>

                        </div>
                        <br />

                    </div>
                    @Html.HiddenFor(m => m.Pk_ProductId)

                </div>
            </div>
        </div>
    
}
<script type="text/javascript">
    @{
        string Pk_PrdId = Model.Pk_ProductId;
        long OrbitId = Model.FK_OrbitType;
        bool IsBox = Model.IsBox;
    }
    window.onload = function () {
        var _PrdId = '@Pk_PrdId'
        var isBox='@IsBox'
        if (_PrdId != "" && _PrdId != "0")
        {
            if (isBox != "" && isBox=="True")
            {
                $('input[type=radio]').prop('checked', 'checked')
                 rdbBoxTypeChecked()
            }

        }
            BindOrbit();
    }

  function rdbBoxTypeChecked()
    {
        $('.dv_Orbit').css('display','none');
      if ($('input[type=radio]:checked').val() == "Box") {
          $('#dv_PV').css('display', 'none');
          $('.dv_Orbit').css('display', 'block');
          BindOrbit();

      }
    }

    function BindOrbit()
    {
            $('.dv_Orbit').css('display','block');
            $('#FK_OrbitType').html('');
            $.ajax({
                url: "../Admin/ManageAssociateOrdered/BindOrbit",
                type: "POST",
                dataType: 'json',
                contentType: "application/json",
                success: function (result) {
                    if (result != null) {
                        var htmlText = "";
                        for (var i = 0; i < result.length; i++) {
                            htmlText += "<option value=" + result[i].Value + ">" + result[i].Text + "</option>"
                        }
                        $('#FK_OrbitType').html(htmlText);
                        var _OrbitId = '@OrbitId'
                        if (_OrbitId != "" && _OrbitId != "0")
                        {
                            $('#FK_OrbitType').val(_OrbitId);
                        }
                    }

                },
                error: function (err)
                {
                    showSnazzyErrorMessage(err.statusText);
                    return false;
                }
            });
    }

    function validate()
    {
        debugger
        var ProductName = $('#ProductName').val();
        var Fk_ProductTypeId = $('#Fk_ProductTypeId').val();
        var MRP = $('#MRP').val();
        var SalesPrice = $('#SalesPrice').val();
        var PV = $('#PV').val();
        var CGST = $('#CGST').val();
        var IGST = $('#IGST').val();
        var SGST = $('#SGST').val();
        var Fk_UnitId = $('#Fk_UnitId').val();
        var Fk_StatusId = $('#Fk_StatusId').val();
        var ProductDescription = $('#ProductDescription').val();
        var ProductType = $('input[type=radio]:checked').val();
        var OrbitType = $('#FK_OrbitType').val();
        var BoxQty = $('#BoxQty').val();
        var BoxPV = $('#BoxPV').val();
        var HSNCode = $('#HSNCode').val();
        var OfferQuantity = $('#OfferQuantity').val();
        var Packing = $('#Packing').val();
        var file = $('#file').val();
        var ProductID = $('#Pk_ProductId').val()
        //UploadFile();
        if (ProductType == "Box")
        {
            if (OrbitType == "0" || OrbitType == "") {
                alert("Please select Orbit type");
                return false;
            }
            else if (BoxQty == "" || BoxQty == "0") {
                alert("Please enter Box Quantity");
                return false;
            }
             else if (BoxPV == "" || BoxPV == "0") {
                alert("Please enter Box PV");
                return false;
            }
        }
        if (Fk_ProductTypeId == null || Fk_ProductTypeId == 0) {
            alert("Please Add Product Type");
            return false;

        }
        else if (ProductName == null || ProductName == "") {
            alert("Please Add Product Name");
            return false;
        }
        else if (MRP == null || MRP == 0) {
            alert("Please Add MRP");
            return false;

        } else if (SalesPrice == null || SalesPrice == 0) {
            alert("Please Add Sales Price");
            return false;

        }
        //else if (SalesPrice> MRP) {
        //alert("Sales Price Should be less than MRP");
        //return false;
        //}
        else if ((PV == null || PV == '') && ProductType != "Box") {
            alert("Please Add Point Value");
            return false;

        }
        else if (Fk_UnitId == null || Fk_UnitId == 0) {
            alert("Please Add Unit");
            return false;

        }
        else if ((HSNCode == null || HSNCode == 0)) {
            alert("Please Add HSN Code");
            return false;

        }
        else if ((OfferQuantity == null || OfferQuantity == 0)) {
            alert("Please Add Offer Quantity");
            return false;

        }
        else if (ProductDescription == null || ProductDescription == "") {
            alert("Please Add Product Description");
            return false;
        }
        else if (CGST == null || CGST == 0) {
            alert("Please Add CGST");
            return false;

        }
        else if (IGST == null || IGST == 0) {
            alert("Please Add IGST");
            return false;

        }
          else if (SGST == null || SGST == 0) {
            alert("Please Add SGST");
            return false;

        }

         else if (Fk_StatusId == null || Fk_StatusId == 0) {
            alert("Please Add Status");
            return false;

        }
        else if (Packing==null || Packing =="") {
            alert("Please Add Packing");
            return false;
        }
        if (ProductID == "" || ProductID == "0" || ProductID == null) { // Check only for new products
            if (file == null || file == "") {
                alert("Please select the Image");
                return false;
            }
        }

        // Submit the form if all validations pass
        $('#idfinalsubmit').click();
        //else if (ProductID == 0 || ProductID == "0" || ProductID == null) {
        //    if (file == null || file == "") {
        //        alert("Please select the Image");
        //        return false;
        //    }
           
        //}

        //else {
        //    $('#idfinalsubmit').click();
        //}
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;
    }
    //function UploadFile() {
    //    debugger;
    ///*    var Id = $(obj).attr("Id");*/
    //    var data = new FormData();
    //   // var Change = $('[name="file"]').val();
    //    var files = $("#file").get(0).files;
    //    if (files.length == 0) {
    //        /*       data.append("subdir", subdir);*/

    //        alert("Please select Image to upload.");
    //        return false;
    //    }
    //    else {

    //    }
    //    var extension = $("#file").val().split('.').pop().toUpperCase();
    //    if (extension != "PNG" && extension != "JPG" && extension != "JPEG" && extension != "BMP") {
    //        alert("Invalid image file format.Only jpg,jpeg,png,bmp files are allow");
    //        return false;
    //    }
    //    //var fullPath = document.getElementById("imagePreview").src;
    //    //var filename = fullPath.replace(/^.*[\\\/]/, '');
    //    //document.getElementById("file").value = filename;
    //    //$.ajax({
    //    //    url: '/Admin/ProductMaster/Uploadfile',
    //    //    type: "POST",
    //    //    processData: false,
    //    //    data: data,
    //    //    dataType: 'json',
    //    //    contentType: false,
    //    //    success: function (response) {
    //    //        debugger;
    //    //        if (response != null || response != '') {
    //    //            if (response.result == "success") {

    //    //                $("#" + Id + "Path").val("");
    //    //                if (Id == "ProductImage") {
    //    //                    $("#HdnProductImage").show();
    //    //                    $("#HdnProductImage").val(response.Path);

    //    //                }


    //    //            }

    //    //        }
    //    //    },
    //        //error: function (er) {
    //            //swal('', "An Error Occured.", 'error');
    //        //}
    //    //});
    //}
    //function ShowImagePreview(input) {

    //    if (input.files && input.files[0]) {
    //        var reader = new FileReader();
    //        reader.onload = function (e) {
    //            $('#imagePreview').prop('src', e.target.result);
    //        };
    //        reader.readAsDataURL(input.files[0]);
    //    }
    //}

    //document.getElementById('file').onchange = function () {
    //    var src = URL.createObjectURL(this.files[0])
    //    document.getElementById('imagePreview').src = src
    //}

    function UploadFile() {
        debugger;
        var files = $("#file").get(0).files;
        if (files.length == 0) {
            alert("Please select an image to upload.");
            return false;
        }
        var file = files[0];
        var extension = file.name.split('.').pop().toUpperCase();
        var allowedExtensions = ["PNG", "JPG", "JPEG", "BMP"];
        if (!allowedExtensions.includes(extension)) {
            alert("Invalid image file format. Only JPG, JPEG, PNG, and BMP files are allowed.");
            return false;
        }
        var maxSizeInBytes = 2 * 1024 * 1024;
        if (file.size > maxSizeInBytes) {
            alert("File size exceeds 2 MB. Please select a smaller file.");
            return false;
        }

        var reader = new FileReader();
        reader.onload = function (e) {
            $('#imagePreview').attr('src', e.target.result);
        }
        reader.readAsDataURL(file); 

        return true;
    }

    //function getImageName() {
    //    var fullPath = document.getElementById("imagePreview").src;
    //    var filename = fullPath.replace(/^.*[\\\/]/, '');
    //    document.getElementById("file").value = filename;
    //}
</script>
