@model LifeOne.Models.AssociateManagement.AssociateEntity.EwalletLedger
@{
    ViewBag.Title = "GetEwalletLedger";
    Layout = "~/Views/Shared/_AssociateLayout.cshtml";
}
<div class="content-wrapper-before"></div>
<div class="container-fluid">
    <div class="row page-titles">
        <div class="ptitle">
            <h4 class="mb-1 mt-0 text-white">Ewallet Ledger</h4>
            @*<nav aria-label="breadcrumb" class="float-left mt-1">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Associate-Dashboard">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="#">My Order</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Purchase History</li>
                    </ol>
                </nav>*@
        </div>

        <div class="pbutton">
            <div class="right text-right">

                <span>
                    <a class="advance-search" title="Click here for search" data-toggle="tooltip" data-placement="bottom" href="#-">Search</a>
                </span>
                <span>
                    <a href="#" class="btn btn-success btn-rounded btngreen" onclick="fCallPaging(1,1)"><i class="fa fa-file-excel-o" data-toggle="tooltip" data-placement="top" title="Download Excel"></i></a>
                </span>
            </div>
        </div>


    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body p-0">
                    @using (Html.BeginForm("GetEwalletLedger", "EWalletRequest", FormMethod.Post, new { @id = "form1" }))
                    {
                        @Html.HiddenFor(m => m.Page)
                        @Html.HiddenFor(m => m.IsExport)
                        <div class="row" id="advance-search" style="display:none;">
                            <div class="col-md-12">
                                <div class="alert" style="color:#727272 !important">
                                    <div class="row">

                                        <div class="col-12 col-md-2">
                                            <input type="date" name="FromDate" id="FromDate" placeholder="" class="form-control" value="@Model.FromDate">
                                        </div>
                                        <div class="col-12 col-md-2">
                                            <input type="date" name="ToDate" id="ToDate" placeholder="" class="form-control" value="@Model.ToDate">
                                        </div>
                                        <div class="col-12 col-md-2">
                                            <input type="submit" class="btn btn-success" value="Search" id="BtnSearch">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table id="myTable" class="table  table-hover">
                                <thead>

                                    <tr>
                                        <th>S. No.</th>
                                        <th>Transaction Date</th>
                                        <th>Narration </th>
                                        <th>Credit Amount</th>
                                        <th>Debit Amount</th>
                                        <th>Balance</th>
                                    </tr>
                                </thead>

                                <tbody>

                                    @if (Model != null)
                                    {
                                        if (Model.CashbackWallets != null && Model.CashbackWallets.Count > 0)
                                        {
                                            int i = 1;
                                            foreach (var item in Model.CashbackWallets)
                                            {

                                                <tr>
                                                    <td>@i</td>
                                                    <td>@Html.DisplayFor(m => item.TransactionDate)</td>
                                                    <td>@Html.DisplayFor(m => item.Narration)</td>
                                                    <td>@Html.DisplayFor(m => item.CrAmount)</td>
                                                    <td>@Html.DisplayFor(m => item.DrAmount)</td>
                                                    <td>@Html.DisplayFor(m => item.Balance)</td>
                                                </tr>

                                                i++;
                                            }
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>

                    }
                </div>
            </div>
            <footer class="card-footer bg-white p-2">
                <div class="d-md-flex align-items-center justify-content-between">

                    @if (Model != null)
                    {
                        if (Model.Pager != null)
                        {
                            if (Model.Pager.EndPage > 1)
                            {
                                <div> <small class="text-muted inline">showing @Model.DtDetails.Rows.Count  of @Model.DtDetails.Rows[0]["TotalRecord"].ToString() items</small> </div>
                                <div>
                                    <ul class="pagination pagination-sm m-t-none m-b-none">
                                        @if (Model.Pager.CurrentPage > 1)
                                        {
                                            <li class="page-item">
                                                <a class="page-link" onclick="fCallPaging(1,0)" href="#">First</a>

                                            </li>
                                            <li class="page-item">

                                                <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage - 1),0)" href="#">Previous</a>
                                            </li>
                                        }
                                        @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                                        {
                                            <li class="page-item @(page == Model.Pager.CurrentPage ? "active" : "")">


                                                <span><a class="page-link" onclick="fCallPaging(@page,0)" href="#">@page</a></span>
                                            </li>
                                        }
                                        @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                                        {
                                            <li class="page-item">

                                                <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage + 1),0)" href="#">Next</a>

                                            </li>
                                            <li class="page-item">

                                                <a class="page-link" onclick="fCallPaging(@(Model.Pager.TotalPages),0)" href="#">Last</a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                        }

                    }

                </div>
            </footer>
        </div>
    </div>
</div>
<script type="text/javascript">
    function fCallPaging(val, IsExport) {

        if (val == undefined || val == NaN || val == null || val == "" || val == 0) {
            val = 1;
        }
        $("#IsExport").val(IsExport);
        $("#Page").val(val);
        $('#BtnSearch').trigger('click');

    }
</script>

