@model LifeOne.Models.AssociateManagement.AssociateEntity.EwalletRequest


@{
    ViewBag.Title = "Wallet To Wallet Transfer";
    ViewBag.Controller = "EWalletRequest";
    ViewBag.HeaderTitle = "Wallet To Wallet Transfer";
    Layout = "~/Views/Shared/_AssociateLayout.cshtml";
}
@{
    string msg = (string)TempData["Message"];
    string code = Convert.ToString(TempData["Flag"]);
    if (msg != null)
    {
        if (code.Equals("1"))
        {
            <div class="alert alert-success m-t-30" id="divsuccess">
                <i class="mdi mdi-checkbox-multiple-marked-outline"></i> <strong>Success!</strong> @msg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">×</span> </button>
            </div>
        }
        else
        {
            <div class="alert alert-success m-t-30" id="divUpdate">
                <i class="mdi mdi-checkbox-multiple-marked-outline"></i>  <strong>Error!</strong> @msg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">×</span> </button>
            </div>
        }
    }
}

<div>
    @using (Html.BeginForm("WalletToWalletTransfer", "EWalletRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="content">
            <div class="content-wrapper-before"></div>
            <div class="row page-titles">
                <div class="ptitle">
                    <h4 class="mb-1 mt-0 text-white">Wallet To Wallet Transfer</h4>
                    
                </div>

            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="formtab">
                                <div class="row">

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Login Id</label>
                                            
                                            @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @id = "LoginId", @readonly = "readonly" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Name</label>
                                           
                                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @id = "Name", @readonly = "readonly" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Amount</label>
                                            
                                            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @id = "Amount", @readonly = "readonly" })

                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">To Login Id</label>
                                           
                                            @Html.TextBoxFor(m => m.ToLoginId, new { @class = "form-control", @onchange="return GetUserData()" })

                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">To Name</label>
                                           
                                            @Html.TextBoxFor(m => m.ToName, new { @class = "form-control", @readonly = "readonly" })

                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Amount</label>
                                           
                                            @Html.TextBoxFor(m => m.ToAmount, new {@type="number", @class = "form-control", @onchange= "return checkBalance()" })

                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="text-right">
                                            <br />
                                            <input type="submit" value="Submit" class="btn btn-success" onclick="return validate()" name="Save" id="Save" />
                                            @*<input type="submit" value="Save Request" name="Request" id="Request" class="btn btn-success" onclick="return validate();"/>*@

                                        </div>
                                    </div>

                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
</div>




<script>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function GetUserData() {
        debugger;
        var loginid = $('#ToLoginId').val();
        if (loginid != null || loginid != "" || loginid != undefined) {
            $.ajax({
                url: "/EWalletRequest/GetUserDetail",
                type: 'GET',
                data: { loginid: loginid },
                dataType: "json",
                contentType: "application/json; charset=utf-8",

                success: function (data) {
                    //console.log(data)
                    if (data.Flag == "1") {

                        $("#ToName").val(data.Name);

                    }
                    else {
                        alert("Invalid Login Id");
                        $('#ToLoginId').val('');
                        $('#ToName').val('');
                    }
                }
            });
        }
        else {
            alert("Please Enter the Login Id");
            $('#ToLoginId').val('');
            $('#ToName').val('');
        }
       
    }

    function checkBalance() {
        var fromamount = $('#Amount').val();
        var toamount = $('#ToAmount').val();
        if (toamount > fromamount) {
            alert('The transfer amount exceeds your wallet balance. Please check your wallet balance and try again.');
            $('#ToAmount').focus();
            return false;
        }

    }
    function validate() {
        if ($('#ToLoginId').val() == "" || $('#ToLoginId').val() == null) {
            alert('Enter the to Login Id');
            $('#ToLoginId').focus();
            return false;
        }
        if ($('#ToAmount').val() == "" || $('#ToAmount').val() == null) {
            alert('Enter the transfer amount');
            $('#ToAmount').focus();
            return false;
        }
    }
</script>



