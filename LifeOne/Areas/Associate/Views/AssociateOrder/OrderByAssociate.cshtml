@using LifeOne.Models.Manager;
@model LifeOne.Models.FranchiseManagement.FEntity.MFranchiseorderRequest

@{
    ViewBag.Title = "OrderByAssociate";
    Layout = "~/Views/Shared/_AssociateLayout.cshtml";
}

<link href="~/Content/admin-assets/libs/select2/select2.min.css" rel="stylesheet" />

<style>
    #alertBoxx {
        position: relative;
        z-index: 1;
    }
</style>
<script src="~/Content/plugins/jQuery/jQuery-2.1.4.min.js"></script>
<div class="content-wrapper-before"></div>
<div class="container-fluid">
    <div class="row page-titles">
        <div class="ptitle">
            <h4 class="mb-1 mt-0 text-white">Place Order</h4>

        </div>

    </div>
    <div id="no-more-tables">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-12 col-md-12 col-lg-12">

                        <div class="form-group">
                            <input type="radio" value="ByeGetOne" name="ShoppingType" onchange="return fBindProductDetails()" />
                            <label>By One Get One</label>
                            <input type="radio" value="Normal" name="ShoppingType" onchange="return fBindProductDetails()" />
                            <label>Normal</label>

                        </div>
                    </div>
                </div>
                <div class="row p-0">

                    <div class="col-sm-6 col-md-4 col-lg-2">

                        <div class="form-group">
                            <label>Product<span class="text-danger"></span></label>
                            <select class="form-control" name="PrdId" id="PrdId" onchange="GetProductDetails(this)"></select>
                            @*@Html.DropDownListFor(m => m.PrdId, (IEnumerable<SelectListItem>)ViewBag.Product, new { @class = "select form-control", @onchange = "GetProductDetails(this)" })<br />*@
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-4 col-lg-2">
                        <div class="form-group">
                            <label>Amount<span class="text-danger"></span></label>
                            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-4 col-lg-2">
                        <div class="form-group">
                            <label>Point Value<span class="text-danger"></span></label>
                            @Html.TextBoxFor(m => m.PointValue, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        @Html.HiddenFor(m => m.OfferQuantity)
                    </div>
                    <div class="col-sm-6 col-md-4 col-lg-2">
                        <div class="form-group">
                            <label>Quantity<span class="text-danger"></span></label>
                            @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control", @onchange = "UpdateSubTotal(this);", @onkeypress = "return isNumberKey(event)", @maxlength = "5" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-4 col-lg-2">
                        <div class="form-group">
                            <label>SubTotal<span class="text-danger"></span></label>
                            @Html.TextBoxFor(m => m.TotalAmt, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-4 col-lg-2">
                        <label style="visibility:hidden;">btn</label>
                        <div style="padding-left: 5%;">
                            <input type="button" value="Add Item" class="btn btn-success" onclick="AddItem()">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div class="row">
        <div class="col-md-12 p-0" id="replacetarget">
            <div class="card">
                <div class="card-body">
                    <div class="table table-responsive">
                        <table class="table table-striped table-hover table-sm" id="TmpProdgrd">
                            <thead>
                                <tr>
                                    <th>Sn</th>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Price(₹)</th>
                                    <th>PV</th>
                                    <th>Total PV</th>
                                    <th>Amount(₹)</th>
                                    <th>Action</th>
                                </tr>
                            </thead>

                            <tbody>
                            </tbody>
                            <tfoot>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <form action="" enctype="multipart/form-data" method="post">
                <div class="box box-warning">
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-3 form-group">
                                <label>Pin Code<span style="color:red;">*</span></label>
                                @*<input type="text" id="Pincode" onchange="GetDistrictCityStateDetailsByPincode()" name="PinCode" class="form-control" onkeypress="return isNumberKey(event)" />*@
                                @Html.TextBoxFor(m => m.PinCode, new { @class = "form-control", @id = "Pincode", @onkeypress = "return isNumberKey(event)", @onchange = "GetDistrictCityStateDetailsByPincode()", @MaxLength = "6" })
                            </div>

                            <div class="col-md-3  mb-2">
                                <label>City<span style="color:red;">*</span></label>
                                @Html.TextBoxFor(m => m.City, new { @class = "form-control", @readonly = "readonly" })
                                @*<select id="DistrictName" class="form-control city-name" name="City" onchange="BindDistrictDetail()"><option value="">--Select City--</option></select>*@
                                @Html.HiddenFor(m => m.DistrictId)
                            </div>
                            <div class="col-md-3 mb-2">
                                <label>State<span style="color:red;">*</span></label>
                                @Html.TextBoxFor(m => m.State, new { @class = "form-control", @readonly = "readonly" })
                                @Html.HiddenFor(m => m.StateId)

                            </div>
                            <div class="col-md-3 mb-2">
                                <div class="form-group">
                                    <label>Wallet Balance</label>
                                    <input type="text" value="@ViewBag.WalletBalance" class="form-control" readonly />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Address</label>
                                    @Html.TextAreaFor(m => m.CustomerAddress, new { @class = "form-control", @rows = "4", @col = "4" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <button class="btn btn-success btn-block waves-effect waves-light" type="button" onclick="return Validate1()" value="Submit Request">Place Order</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

</div>

<input type="hidden" id="TotalProductAmount" />

<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
<script>
    $(".select").select2({
        allowClear: false
    });

</script>

<script>
    $(document).ready(function ()
    {
        GetOrderTemp();
    })

    function ShowHideOrbit()
    {
        $('#dv_Ordit').css('display','none');
        if ($('input[type=radio]:checked').val() == "Box")
        {
            $('#dv_Ordit').css('display', 'block');
            BindOrbit();
        }
    }

    function BindOrbit()
    {
            $('#dv_Ordit').css('display','block');
            $('#Fk_OrbitId').html('');
            $.ajax({
                url: "/Associate/AssociateOrder/BindOrbit",
                type: "POST",
                dataType: 'json',
                contentType: "application/json",
                success: function (result) {
                    if (result != null) {
                        var htmlText = "";
                        for (var i = 0; i < result.length; i++) {
                            htmlText += "<option value=" + result[i].Value + ">" + result[i].Text + "</option>"
                        }
                        $('#Fk_OrbitId').html(htmlText)
                    }

                },
                error: function (err)
                {
                    showSnazzyErrorMessage(err.statusText);
                    return false;
                }
            });
    }

    function BindProduct()
    {
          var _catId = $('#CategoryId').val()
        if (_catId != undefined && _catId != "")
        {
                $.ajax({
                    url: "/Associate/AssociateOrder/BindProduct",
                    type: "POST",
                    dataType: 'json',
                    data: JSON.stringify({ CategoryId: _catId }),
                    contentType: "application/json",
                    success: function (result) {
                        if (result != null)
                        {
                            var htmlText = "";
                            for (var i = 0; i < result.length; i++)
                            {
                                htmlText += "<option value=" + result[i].Value + ">"+result[i].Text+"</option>"
                            }
                            $('#PrdId').html(htmlText)
                        }

                    },
                    error: function (err) {
                        showSnazzyErrorMessage(err.statusText);
                        return false;
                    }
                });
        }
    }

    function GetProductDetails(obj)
    {
        debugger;
            var _prId = $('#' + obj.id + '').val()
            if (_prId != undefined && _prId != "" && _prId != "0") {
                $.ajax({
                    url: "/Associate/AssociateOrder/GetProductDetails",
                    type: "POST",
                    dataType: 'json',
                    data: JSON.stringify({ PrdId: _prId }),
                    contentType: "application/json",
                    success: function (result) {
                        debugger;
                        console.log(result);

                        if (result != null) {
                            $('#OrbitName').text(result.OrbitName);
                            $('#BoxQty').text('| Box Qty: ' + result.BoxQty);
                            $('#Amount').val(result.Amount);
                            $('#PointValue').val(result.PointValue);
                            $('#OfferQuantity').val(result.OfferQuantity);
                        }
                    },
                    error: function (err) {
                        showSnazzyErrorMessage(err.statusText);
                        return false;
                    }
                });
            }

    }

    function Cleartext() {
        debugger;
        $('#PrdId').val(0);
        $('#Amount').val('');
        $('#PointValue').val('');
        $('#Quantity').val('');
        $('#TotalAmt').val('');
    }
    function AddItem() {
        debugger;
        //var catId = $('#CategoryId').val();
       // var reqId = sessionStorage.getItem("requestId");//$('#RequestId').val();
        var prdId = $('#PrdId').val();
        var amount = $('#Amount').val();
        var pV = $('#PointValue').val();
        var quantity = $('#Quantity').val();
        var totalAmt = $('#TotalAmt').val();

        if (prdId == "" || prdId == "0") {

            showSnazzyErrorMessage("Please select Product");
            return false;
        }
        else if (quantity == "") {

            showSnazzyErrorMessage("Please enter Quantity");
            return false;
        }
        else if (parseInt(quantity) == 0) {
            showSnazzyErrorMessage("Quantity can not be 0.");
            return false;
        }
        else {

            $.ajax({
                url: "/Associate/AssociateOrder/AddProduct",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ PrdId: prdId, Amount: amount, PointValue: pV, Quantity: quantity, TotalAmt: totalAmt }),
                contentType: "application/json",
                async: false,
                success: function (result) {
                    if (result != null) {
                        if (result.Code == 1) {

                            //$('#RequestId').val(result.RequestId);
                            //sessionStorage.setItem("requestId", result.RequestId);
                            GetOrderTemp(); // window.location.reload();//
                            showSnazzySuccessMessage("Item Added Successfully.");
                            Cleartext();
                        }
                        else {

                            showSnazzyErrorMessage("Please try again later");
                        }
                    }

                },
                error: function (err) {
                    alert(err.statusText);
                    return false;
                }
            });

        }
    }

    function GetOrderTemp()
    {
        debugger;
        var reqId = 0;
            //if (sessionStorage.getItem("requestId")!=0) {
            //    reqId = sessionStorage.getItem("requestId");
            //}

             // var reqId = sessionStorage.getItem("requestId");//$('#RequestId').val();@*'@SessionManager.RequestId';*@
              $.ajax({
                url: "/Associate/AssociateOrder/GetOrderTemp",
              type: "POST",
              dataType: 'json',
              data: JSON.stringify({RequestId:reqId}),
              contentType: "application/json",
              async:false,
                  success: function (result) {
                      console.log(result)
                if (result != null)
                {
                    var html = "";
                    var html1 = ""
                    var TotalItemAmt = 0;
                    var TotalPv = 0;
                    var FinalAmount = 0;
                    var TotalQty = 0;
                    for (var i = 0; i < result.length; i++)
                    {
                        TotalQty = TotalQty + parseInt(result[i].Quantity);
                        TotalItemAmt = TotalItemAmt + parseFloat(result[i].Amount);
                        TotalPv = TotalPv + (parseFloat(result[i].PointValue) * parseInt(result[i].Quantity));
                        FinalAmount = FinalAmount + parseInt(result[i].TotalAmt)
                        //FinalAmount = FinalAmount+ result[i].TotalAmt
                       /* FinalAmount=FinalAmount+parseInt(result[i].Amount) * parseInt(result[i].Quantity);*/
                        html += "<tr>"
                        html += "<td>" + (i + 1) + "</td><td>" + result[i].ProductName + "</td><td>"+ result[i].Quantity +"</td><td id='tdPrice'>" + result[i].Amount + "</td><td id='tdPV'>" + result[i].PointValue + "</td><td>" + (parseInt(result[i].PointValue) * parseInt(result[i].Quantity)) + "</td><td id='tdAmt'>" + result[i].TotalAmt + "</td></td><td><a id='btn_del' title='Delete' data-toggle='tooltip' class='' onclick='DeleteProduct(" + result[i].PK_Id + ");'><i class='fa fa-trash text-danger'></i></a></td></tr>";
                    }
                    html1 += "<tr><th colspan='2'>Total:</th><th>" + TotalQty +"</th><th></th><th></th><th>"+TotalPv+"</th><th style='text-align:left'>"+FinalAmount+"</th><th></th></tr>"
                    $('#TmpProdgrd tbody').html('');
                    $('#TmpProdgrd tfoot').html('');
                    $('#TmpProdgrd tbody').append(html);
                    $('#TmpProdgrd tfoot').append(html1)
                    $('#TotalProductAmount').val(FinalAmount)   //Use For Final Save
                }

              },
              error: function (err) {
                  alert(err.statusText);
                  return false;
              }
          });
    }

    function BindUpdatedFigureAmt(obj,Id)
    {
        var qty = parseInt(obj.value);
        var prodAmt = $(obj).parent().parent().find('[id=tdPrice]').text();
        var totalPV = parseInt($(obj).parent().parent().find('[id=tdPV]').text()) * qty;
        var Amt = parseFloat(prodAmt) * qty;
        var _ReqId = sessionStorage.getItem("requestId");
        $(obj).parent().parent().find('[id=tdAmt]').text(Amt);

         $.ajax({
                  url: "/Associate/AssociateOrder/BindUpdatedFigureAmt",
                    type: "POST",
                    dataType: 'json',
                    data: JSON.stringify({ ReqId:_ReqId,PK_KeyId: Id,Quantity:qty,TotalPv:totalPV,TotalAmt: Amt}),
                    contentType: "application/json",
                    success: function (result) {
                        if (result != null)
                        {
                           GetOrderTemp();
                        }

                    },
                    error: function (err) {
                        showSnazzyErrorMessage(err.statusText);
                        return false;
                    }
                });

    }

    function UpdateSubTotal()
    {
        debugger;
        var Qty = $('#Quantity').val();
        var Amount = $('#Amount').val();
        var OfferQty = $('#OfferQuantity').val();
        var Quantity = (parseInt(Qty));
        var TotalAmt = (parseInt(Quantity)) * (parseFloat(Amount));
        var TotalAmount = (parseInt(Qty)) * (parseFloat(Amount));
        if (OfferQty == "") {
            $('#TotalAmt').val(TotalAmount);
        }
        else {
            $('#TotalAmt').val(TotalAmt);
        }
    }

    function DeleteProduct(Id)
    {
        debugger;
        if (confirm("Are you sure want to delete this Item ?"))
        {
            if (Id != null && Id != undefined) {
                $.ajax({
                    url: "/Associate/AssociateOrder/DeleteProductTemp",
                    type: "POST",
                    dataType: 'json',
                    data: JSON.stringify({ PK_KeyId: Id }),
                    contentType: "application/json",
                    success: function (result) {
                        if (result != null) {
                            if (result.Code == 2)
                            {
                                showSnazzySuccessMessage(result.Remark);
                                GetOrderTemp();//window.location.reload();
                            }
                        }

                    },
                    error: function (err) {
                        showSnazzyErrorMessage(err.statusText);
                        return false;
                    }
                });
            }
        }
    }

    function Validate1()
    {
        debugger

        var State = $('#State').val();
        var City = $('#City').val();
        var PinCode = $('#Pincode').val();
        var Address = $('#CustomerAddress').val();

        if (PinCode == "" || PinCode == null) {
            alert('Please Enter Pincode')
            return false;
        }
        if (Address == "" || Address == null) {
            alert('Please Enter Address')
            return false;
        }

        $.ajax({
            url: "/Associate/AssociateOrder/SaveProduct",
               type: "POST",
               dataType: 'json',
            data: JSON.stringify({ State: State, City: City, PinCode: PinCode, CustomerAddress: Address }),
               contentType: "application/json",
               success: function (result) {
                   if (result != null) {
                       if (result.Code == 1) {
                           alert(result.Remark);
                           window.location.href = "/Associate/AssociateOrder/OrderByAssociate";
                       }
                       else
                       {
                           showSnazzyErrorMessage(result.Message);
                       }
                   }
               },
            error: function (err)
            {
                   alert(err.statusText);
                   return false;
               }
              });
    }
    function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;
        }

    function isAlphabets(evt) {

            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32) {
                return true;
            }
            return false;
    }

    function GetDistrictCityStateDetailsByPincode() {
        // Show loader
        $('#loader').show();
        $("#overlayer").show();

        if ($('#Pincode').val() == "" || $('#Pincode').val() == 0) {
            // If Pincode is empty or 0, clear City and State fields
            $('#City').val('');
            $('#State').val('');
            // Hide loader
            $('#loader').hide();
            $("#overlayer").hide();
            return false;
        }

        $.ajax({
            url: '/Home/GetLocationByPin',
            type: "POST",
            data: JSON.stringify({ "pin": $('#Pincode').val() }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (response) {
                if (response != null && response.length > 0) {
                    // Set City and State based on response
                    $("#City").val(response[0].District);
                    $("#State").val(response[0].State);
                } else {
                    // If response is empty or null, show warning
                    swal('', "Data does not exist", 'warning');
                }
            },
            error: function (er) {
                // Show error message
                swal('', "An Error Occurred", 'error');
            },
            complete: function () {
                // Hide loader regardless of success or error
                $('#loader').hide();
                $("#overlayer").hide();
            }
        });
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;
    }

    function fBindProductDetails() {
        

        var ShoppingType = $('input[name="ShoppingType"]:checked').val();

            $.ajax({
                url: "/Associate/AssociateOrder/BindProduct",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ ShoppingType: ShoppingType }),
                contentType: "application/json",
                success: function (result) {
                    if (result != null) {
                        var htmlText = "";
                        for (var i = 0; i < result.length; i++) {
                            htmlText += "<option value=" + result[i].Value + ">" + result[i].Text + "</option>"
                        }
                        $('#PrdId').html(htmlText)
                        $('#Amount').val('');
                        $('PointValue').val('');
                    }

                },
                error: function (err) {
                    showSnazzyErrorMessage(err.statusText);
                    return false;
                }
            });

    }
</script>

