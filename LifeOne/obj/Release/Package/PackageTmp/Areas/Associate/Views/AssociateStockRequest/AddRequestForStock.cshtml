@using LifeOne.Models.Manager;
@model LifeOne.Models.FranchiseManagement.FEntity.MFranchiseorderRequest


@{
    ViewBag.Title = "AddRequestForStock";
    Layout = "~/Views/Shared/_AssociateLayout.cshtml";
}

<link href="~/Content/Associate/assets/libs/select2/select2.min.css" rel="stylesheet" />
<style>
    .fa-trash {
        color: white;
    }

    .box {
        padding: 14px;
    }
</style>
<script src="~/Content/plugins/jQuery/jQuery-2.1.4.min.js"></script>
<div class="content-wrapper-before"></div>
<div class="container-fluid">
    <div class="row page-titles">
        <div class="ptitle">
            <h4 class="mb-1 mt-0 text-white">Add Order</h4>
            <nav aria-label="breadcrumb" class="float-left mt-1">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Associate/AssociateDashboard/Dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="#">Manage Stock</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Add Order</li>
                </ol>
            </nav>
        </div>
    </div>
    <div id="no-more-tables">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            @*<div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group">
                                        <label>Category<span class="text-danger"></span></label>
                                        @Html.DropDownListFor(m => m.CategoryId, (IEnumerable<SelectListItem>)ViewBag.ProductCategory, new { @class = "select form-control", @onchange = "BindProduct(this)" })
                                    </div>
                                </div>*@
                            @*<div class="col-sm-6 col-md-4 col-lg-2" style="padding-left: 2%;">
                                    <div class="form-group">
                                        <label>Product Type<span class="text-danger"></span></label><br />
                                        Single @Html.RadioButtonFor(m => m.ProductType, "Single", new { @onchange = "ShowHideOrbit()" }) &nbsp;&nbsp;
                                        Box @Html.RadioButtonFor(m => m.ProductType, "Box", new { @onchange = "ShowHideOrbit()" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2" style="display:none" id="dv_Ordit">
                                    <div class="form-group">
                                        <label>Orbit Type<span class="text-danger"></span></label>
                                        @Html.DropDownListFor(m => m.Fk_OrbitId, new List<SelectListItem>() { new SelectListItem { Text = "--Select--", Value = "0" } }, new { @class = "select form-control" })
                                    </div>
                                </div>*@
                            <div class="col-sm-6 col-md-4 col-lg-2">
                                <div class="form-group">
                                    <label>Product<span class="text-danger"></span></label>
                                    @Html.DropDownListFor(m => m.PrdId, (IEnumerable<SelectListItem>)ViewBag.Product, new { @class = "select form-control", @onchange = "GetProductDetails(this)" })<br />
                                    <label id="OrbitName"></label> <label id="BoxQty"></label>
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-4 col-lg-2">
                                <div class="form-group">
                                    <label>Amount<span class="text-danger"></span></label>
                                    @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-4 col-lg-2">
                                <div class="form-group">
                                    <label>PV<span class="text-danger"></span></label>
                                    @Html.TextBoxFor(m => m.PointValue, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-4 col-lg-2">
                                <div class="form-group">
                                    <label>Quantity<span class="text-danger"></span></label>
                                    @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control", @onchange = "UpdateSubTotal(this);", @onkeypress = "return isNumberKey(event)", @maxlength = "3" })
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-4 col-lg-2">
                                <div class="form-group">
                                    <label>SubTotal<span class="text-danger"></span></label>
                                    @Html.TextBoxFor(m => m.TotalAmt, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-4 col-lg-2">
                                <label style="visibility:hidden;">btn</label>
                                <div style="padding-left: 5%;">
                                    <input type="button" value="Add Item" class="btn btn-success" onclick="AddItem()">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12" id="replacetarget">
                                <div class="box-body">
                                    <div class="table-responsive" >
                                        <table class="table  table-hover table-sm" id="TmpProdgrd">
                                            <thead>
                                                <tr>
                                                    <th>Sn</th>
                                                    <th>Product</th>
                                                    <th>Quantity</th>
                                                    <th>Price(₹)</th>
                                                    <th>PV</th>
                                                    <th>Total PV</th>
                                                    <th>Amount(₹)</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                            <tfoot>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <form action="/Franchise/OrderProducts" enctype="multipart/form-data" method="post">
                            <div class="box box-warning">
                                <div class="box-body">
                                    <div class="row">
                                        <div class="col-sm-9 col-xs-12">
                                            <div class="form-group">
                                                <label>Remark</label>
                                                @Html.TextAreaFor(m => m.PaymentRemark, new { @class = "form-control", @rows = "4", @col = "4" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3 col-xs-12">
                                            <div class="form-group">
                                                <label class="hidden-phone">Payment Mode</label>
                                                <select id="PaymentMode" name="PaymentMode" class="form-control">
                                                    <option value="0">Payment Mode</option>
                                                    <option value="Cash">Cash</option>
                                                    <option value="Cheque">Cheque</option>
                                                    <option value="Demand Draft">Demand Draft</option>
                                                    <option value="Bankers Cheque">Bankers Cheque</option>
                                                    <option value="NEFT">NEFT</option>
                                                    <option value="RTGS">RTGS</option>
                                                    <option value="IMPS">IMPS</option>
                                                    <option value="Online">Payment Gateway</option>
                                                </select>
                                                <input type="hidden" id="hdnTotQty" name="hdnTotQty">
                                            </div>
                                            <div class="form-group">
                                                <button class="btn btn-primary btn-block waves-effect waves-light" type="button" onclick="return Validate1()" value="Submit Request">Submit Request</button>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row" style="display:none;background:#f6f6f6;padding:10px" id="divpaymenttype">

                                        <div class="row">
                                            <div class="col-sm-6 col-md-4 col-lg-3">
                                                <div class="form-group">
                                                    <label>Cheque/DD No./Bank Transaction No.</label>
                                                    @Html.TextBoxFor(m => m.ChequeDDNo, new { @class = "form-control", @maxlength = "30" })
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-md-4 col-lg-3">
                                                <div class="form-group">
                                                    <label>Cheque/DD Date/Transaction Date</label>
                                                    @Html.TextBoxFor(m => m.ChequeDDDate, new { @class = "form-control", @maxlength = "30", @type = "date" })
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-md-4 col-lg-3">
                                                <div class="form-group">
                                                    <label>Bank Name</label>
                                                    @Html.TextBoxFor(m => m.BankName, new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-md-4 col-lg-3" style="display:none;" id="divpaymenttypeSlip">
                                                <div class="form-group">
                                                    <label>Payment Slip</label>
                                                    @Html.TextBoxFor(m => m.PaymentSlip, new { @type = "file", @class = "form-control", onchange = "UploadFile(this,'PaymentSlip','ManageFranchise')" })
                                                    @Html.HiddenFor(m => m.HdnPaymentSlip)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="TotalProductAmount" />
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
@*<script src="~/Content/dist/js/CommonJS.js"></script>*@
<script>
    $(".select").select2({
        allowClear: false
    });

</script>

<script>
    $(document).ready(function ()
    {
        if (sessionStorage.getItem("requestId") == null)
        {
            sessionStorage.setItem("requestId","0")
        }

        GetOrderTemp();
    })

    function ShowHideOrbit()
    {
        $('#dv_Ordit').css('display','none');
        if ($('input[type=radio]:checked').val() == "Box")
        {
            $('#dv_Ordit').css('display', 'block');
            BindOrbit();
        }
    }

    function BindOrbit()
    {
            $('#dv_Ordit').css('display','block');
            $('#Fk_OrbitId').html('');
            $.ajax({
                url: "/Associate/AssociateStockRequest/BindOrbit",
                type: "POST",
                dataType: 'json',
                contentType: "application/json",
                success: function (result) {
                    if (result != null) {
                        var htmlText = "";
                        for (var i = 0; i < result.length; i++) {
                            htmlText += "<option value=" + result[i].Value + ">" + result[i].Text + "</option>"
                        }
                        $('#Fk_OrbitId').html(htmlText)
                    }

                },
                error: function (err)
                {
                    showSnazzyErrorMessage(err.statusText);
                    return false;
                }
            });
    }

    function BindProduct()
    {
        var _catId = $('#CategoryId').val();
            if (_catId != undefined && _catId != "")
            {
                    $.ajax({
                        url: "/Associate/AssociateStockRequest/BindProduct",
                        type: "POST",
                        dataType: 'json',
                        data: JSON.stringify({ CategoryId: _catId }),
                        contentType: "application/json",
                        success: function (result) {
                            if (result != null)
                            {
                                var htmlText = "";
                                for (var i = 0; i < result.length; i++)
                                {
                                    htmlText += "<option value=" + result[i].Value + ">"+result[i].Text+"</option>"
                                }
                                $('#PrdId').html(htmlText)
                            }

                        },
                        error: function (err) {
                            showSnazzyErrorMessage(err.statusText);
                            return false;
                        }
                    });
                }
    }

    function GetProductDetails(obj)
        {
            var _prId = $('#' + obj.id + '').val()
        if (_prId != undefined && _prId != "" && _prId != "0") {
            $.ajax({
                url: "/Associate/AssociateStockRequest/GetProductDetails",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ PrdId: _prId }),
                contentType: "application/json",
                success: function (result) {
                    console.log(result);
                    if (result != null) {
                        $('#OrbitName').text(result.OrbitName);
                        $('#BoxQty').text('| Box Qty: '+ result.BoxQty);
                        $('#Amount').val(result.Amount);
                        $('#PointValue').val(result.PointValue)

                    }

                },
                error: function (err) {
                    showSnazzyErrorMessage(err.statusText);
                    return false;
                }
            });
        }
        else {
            $('#OrbitName').text('');
            $('#BoxQty').text('');
        }
    }

    function Cleartext() {
        $('#PrdId').val(0);
        $('#CategoryId').val(0);


        $('#Amount').val('');
        $('#PointValue').val('');
        $('#Quantity').val('');
        $('#TotalAmt').val('');
    }

    function AddItem()
        {

                var catId = $('#CategoryId').val();
                var reqId = sessionStorage.getItem("requestId");//$('#RequestId').val();
                var prdId =    $('#PrdId').val();
                var amount =   $('#Amount').val();
                var pV =       $('#PointValue').val();
                var quantity = $('#Quantity').val();
                var totalAmt = $('#TotalAmt').val();

                if (catId == "" || catId == "0" ) {
                    showSnazzyErrorMessage("Please select Product Category")
                    return false;
                }
                else if (prdId == "" || prdId == "0") {

                    showSnazzyErrorMessage("Please select Product");
                    return false;
                }
                else if (quantity <= 0 || quantity == "" || quantity == undefined || quantity == null) {
                    showSnazzyErrorMessage("Please enter Quantity");
                    return false;
                }
                else
                {

                   // alert("int");

                    $.ajax({
                    url: "/Associate/AssociateStockRequest/AddProduct",
                    type: "POST",
                    dataType: 'json',
                    data: JSON.stringify({CategoryId:catId ,PrdId: prdId,Amount:amount,PointValue:pV,Quantity:quantity,TotalAmt:totalAmt,ReqId:reqId}),
                        contentType: "application/json",
                    async:false,
                    success: function (result) {
                        if (result != null)
                        {
                            if (result.Code == 1) {

                                $('#RequestId').val(result.RequestId);
                                sessionStorage.setItem("requestId",result.RequestId);
                                GetOrderTemp(); // window.location.reload();//
                                showSnazzySuccessMessage("Item Added Successfully.");
                                Cleartext();
                            }
                            else {

                                showSnazzyErrorMessage("Please try again later");
                            }
                        }

                    },
                    error: function (err) {
                        alert(err.statusText);
                        return false;
                    }
                });

                }
        }
    var chkQnty = 0;
    function GetOrderTemp()
    {
        chkQnty = 0;
           var reqId = 0;
            if (sessionStorage.getItem("requestId")!=0) {
                reqId = sessionStorage.getItem("requestId");
            }

              var reqId = sessionStorage.getItem("requestId");//$('#RequestId').val();@*'@SessionManager.RequestId';*@
              $.ajax({
                  url: "/Associate/AssociateStockRequest/GetOrderTemp",
              type: "POST",
              dataType: 'json',
              data: JSON.stringify({RequestId:reqId}),
              contentType: "application/json",
              async:false,
              success: function (result) {
                if (result != null)
                {
                    var html = "";
                    var html1 = ""
                    var TotalItemAmt = 0;
                    var TotalPv = 0;
                    var FinalAmount = 0;
                    var TotalQty = 0;
                    for (var i = 0; i < result.length; i++)
                    {
                        TotalQty = TotalQty + parseInt(result[i].Quantity);
                        TotalItemAmt = TotalItemAmt + parseFloat(result[i].Amount);
                        TotalPv = TotalPv + (parseFloat(result[i].PointValue)*parseInt(result[i].Quantity));
                        FinalAmount=FinalAmount+parseInt(result[i].Amount) * parseInt(result[i].Quantity);
                        html += "<tr>"
                        html += "<td>" + (i + 1) + "</td><td>" + result[i].ProductName + "</td><td><input style='width: 53px' maxlength='3' onkeypress = 'return isNumberKey(event)' type='text' id=" + result[i].PK_KeyId +" value=" + result[i].Quantity + " onchange='BindUpdatedFigureAmt(this," + result[i].PK_KeyId +")'></td><td id='tdPrice'>" + result[i].Amount + "</td><td id='tdPV'>" + result[i].PointValue + "</td><td>" + (parseInt(result[i].PointValue) * parseInt(result[i].Quantity)) + "</td><td id='tdAmt'>" + (parseInt(result[i].Amount) * parseInt(result[i].Quantity)) + "</td></td><td><a id='btn_del' title='Delete' data-toggle='tooltip' class='btn btn-danger btn-xs' onclick='DeleteProduct(" + result[i].PK_KeyId + ");'><i class='fa fa-trash'></i></a></td></tr>";
                        if (result[i].Quantity == 0) {
                            chkQnty = 1;
                        }
                    }
                    html1 += "<tr><th colspan='2'>Total:</th><th>" + TotalQty + "</th><th></th><th></th><th>" + TotalPv + "</th><th style='text-align:left'>" + FinalAmount +"</th><th></th></tr>"
                    $('#TmpProdgrd tbody').html('');
                    $('#TmpProdgrd tfoot').html('');
                    $('#TmpProdgrd tbody').append(html);
                    $('#TmpProdgrd tfoot').append(html1)
                    $('#TotalProductAmount').val(FinalAmount)   //Use For Final Save
                }

              },
              error: function (err) {
                  alert(err.statusText);
                  return false;
              }
          });
        }

    function BindUpdatedFigureAmt(obj,Id)
    {
        var qty = parseInt(obj.value);
        if (isNaN(qty) || qty <= 0 || qty == "" || qty == undefined || qty == null) {
            $('#' + Id + '').focus();
            showSnazzyErrorMessage("Please enter Quantity");
            //return false;
        }
        var prodAmt = $(obj).parent().parent().find('[id=tdPrice]').text();
        var totalPV = parseInt($(obj).parent().parent().find('[id=tdPV]').text()) * qty;
        var Amt = parseFloat(prodAmt) * qty;
        var _ReqId = sessionStorage.getItem("requestId");
        $(obj).parent().parent().find('[id=tdAmt]').text(Amt);

         $.ajax({
                    url: "/Associate/AssociateStockRequest/BindUpdatedFigureAmt",
                    type: "POST",
                    dataType: 'json',
                    data: JSON.stringify({ ReqId:_ReqId,PK_KeyId: Id,Quantity:qty,TotalPv:totalPV,TotalAmt: Amt}),
                    contentType: "application/json",
                    success: function (result) {
                        if (result != null)
                        {
                           GetOrderTemp();
                        }

                    },
                    error: function (err) {
                        showSnazzyErrorMessage(err.statusText);
                        return false;
                    }
                });

    }

    function UpdateSubTotal()
    {
         var Qty = $('#Quantity').val();
         var Amount = $('#Amount').val();
         var TotalAmt = (parseInt(Qty) == NaN ? 0 : parseInt(Qty)) * (parseFloat(Amount));
         $('#TotalAmt').val(TotalAmt);
    }

    $('#PaymentMode').on('change', function ()
    {
        if ($('#PaymentMode').val() == "Cash" || $('#PaymentMode').val() == "0") {
            $('#divpaymenttype').css('display', 'none');
            $('#divpaymenttypeSlip').css('display', 'none');
        }
        else if ($('#PaymentMode').val() == "Online") {
             $('#divpaymenttype').css('display', 'none');
            $('#divpaymenttypeSlip').css('display', 'none');

        }
        else {
             $('#divpaymenttype').css('display', 'block');
            $('#divpaymenttypeSlip').css('display', 'block');
        }
    })

    function DeleteProduct(Id)
    {
        if (confirm("Are you sure want to delete this Item ?"))
        {
            if (Id != null && Id != undefined) {
                $.ajax({
                    url: "/Associate/AssociateStockRequest/DeleteProductTemp",
                    type: "POST",
                    dataType: 'json',
                    data: JSON.stringify({ PK_KeyId: Id }),
                    contentType: "application/json",
                    success: function (result) {
                        if (result != null) {
                            if (result.Code == 2)
                            {
                                showSnazzySuccessMessage(result.Remark);
                                GetOrderTemp();//window.location.reload();
                            }
                        }

                    },
                    error: function (err) {
                        showSnazzyErrorMessage(err.statusText);
                        return false;
                    }
                });
            }
        }
    }

    function Validate1()
    {
        debugger
      if ($('#TotalProductAmount').val() == undefined || $('#TotalProductAmount').val() == null) {
          showSnazzyErrorMessage('Some internal problem');
          return false
        }
        if ($('#PaymentMode').val() == "0") {
                    showSnazzyErrorMessage('Please select Payment Mode!');
                    return false
                }
      if ($('#PaymentMode').val() != "Cash" && $('#PaymentMode').val() != "Online" && $('#PaymentMode').val() != "0") {
            if ($('#ChequeDDNo').val() == "") {
                showSnazzyErrorMessage('Please enter Cheque/DD No/Bank Transaction Number !');
                return false
            }
            else if ($('#ChequeDDDate').val() == undefined || $('#ChequeDDDate').val() == "") {
                showSnazzyErrorMessage('Please enter Cheque/DD/Bank Date !');
                return false
            }
            else if ($('#BankName').val() == undefined || $('#BankName').val() == "") {
                showSnazzyErrorMessage('Please enter Bank Name !');
                return false
          }
            else if ($('#HdnPaymentSlip').val() == undefined || $('#HdnPaymentSlip').val() == "") {
                showSnazzyErrorMessage('Please upload Payment Slip !');
                return false
            }
        }
        var _totalItemAmt = $('#TotalProductAmount').val();
        var PayMode = $('#PaymentMode').val();
        var _hdnReceipt = $('#HdnPaymentSlip').val();
        var _BankName = $('#BankName').val();
        var _TranNo = $('#ChequeDDNo').val();
        var _TranDate = $('#ChequeDDDate').val();
        var _Remark = $('#PaymentRemark').val();
        var _ReqId = sessionStorage.getItem("requestId");
        var url = /*$('#PaymentMode').val() == "Online" ? "CreateOrder" :*/ "/Associate/AssociateStockRequest/SaveProduct";
        if (chkQnty == 1) {
            showSnazzyErrorMessage('Quantity must be greater than zero !');
            return false;
        }
        $.ajax({
               url: url,
               type: "POST",
               dataType: 'json',
               data: JSON.stringify({ TotalItemAmt: _totalItemAmt,PaymentMode: PayMode,ChequeDDNo:_TranNo,BankName:_BankName,HdnPaymentSlip:_hdnReceipt,ChequeDDDate:_TranDate,PaymentRemark:_Remark,ReqId:_ReqId}),
               contentType: "application/json",
            success: function (result) {
                debugger
                console.log(result)
                if (result != null) {
                    if (result.Response == "Online") {
                        window.location.href = "/Associate/AssociateStockRequest/CreateOrder";
                    }
                       else if (result.Code == 1) {
                           showSnazzySuccessMessage(result.Remark);
                        window.location.href = "/Track-Purchase-Stock";
                       }
                       else
                       {
                           showSnazzyErrorMessage('Server Internal Error !');
                       }
                   }
               },
            error: function (err)
            {
                   alert(err.statusText);
                   return false;
               }
              });
    }

    function UploadFile(obj, subdir, type)
    {
        var Id = $(obj).attr("Id");
        var data = new FormData();
        var files = $("#" + Id).get(0).files;

        if (files.length > 0) {
            data.append("file", files[0]);
             data.append("subdir", subdir);
        }
        else
        {
            showSnazzyErrorMessage('Please select file to upload.');
            return false;
        }
        var extension = $("#" + Id).val().split('.').pop().toUpperCase();
        if (extension != "PNG" && extension != "JPG" && extension != "JPEG" && extension != "BMP")
        {
            showSnazzyErrorMessage('Invalid image file format.Only jpg,jpeg,png,bmp files are allow');
            return false;
        }
        $.ajax({
            url: '/Common/Uploadfile',
            type: "POST",
            processData: false,
            data: data,
            dataType: 'json',
            contentType: false,
            success: function (response) {
                if (response != null || response != '') {
                    if (response.Result == "success") {
                        $("#" + Id + "Path").val("");
                        $("#HdnPaymentSlip").val(response.Path);
                        //$("#divpreview").show();
                        //$("#divpreview").empty();
                        //$('#imgStudent').attr('src', '');
                        //$("#divpreview").append('<img id="imgStudent" class="m-t-20" src="' + response.Path.replace('~', '') + '" height="40px" width="40px"/>');
                        showSnazzySuccessMessage(response.Msg);
                    }
                    else {
                         showSnazzyErrorMessage(response.Msg);
                    }
                }
            },
            error: function (er) {
                showSnazzyErrorMessage('An error occured');
            }
        });
    }

    function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;
        }

    function isAlphabets(evt) {

            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32) {
                return true;
            }
            return false;
    }

</script>

