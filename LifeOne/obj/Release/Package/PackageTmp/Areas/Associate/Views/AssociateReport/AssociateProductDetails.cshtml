@model LifeOne.Models.ProductsDetail
@{
    ViewBag.Title = "ProductDetails";
    Layout = "~/Views/Shared/_AssociateLayout.cshtml";
}

@*<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">*@
@*<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>*@
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
<link href="~/Content/dist/css/quantitybutton.css" rel="stylesheet" />

@using (Html.BeginForm("AssociateProductDetails", "AssociateReport", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{


    <div class="content-wrapper-before"></div>
    <div class="container-fluid">
        <div class="row page-titles">
            <div class="ptitle">
                <h4 class="mb-1 mt-0 text-white">Product Details</h4>

                <nav aria-label="breadcrumb" class="float-left mt-1">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#">Shopping</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Product Details</li>
                    </ol>
                </nav>
            </div>

        </div>


        <div class="row">

            <!-- end col -->
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">

                        <div class="formtab">

                           
                                <div class="row no-gutters">
                                    <div class="col-md-7 mb-6 mb-md-0 pr-md-6 pr-lg-13">
                                        <div class="galleries position-relative">
                                            <div class="position-absolute pos-fixed-top-right pr-4 pt-4 z-index-2">
                                                <a href="#" data-toggle="tooltip" data-placement="left" title="Add to favourite"
                                                   class="add-to-wishlist d-flex align-items-center justify-content-center text-primary bg-white hover-white bg-hover-primary w-45px h-45px rounded-circle mb-2 border">
                                                    <i class="far fa-heart"></i>
                                                </a>
                                                <a href="#" data-toggle="tooltip" data-placement="left" title="Add to compare"
                                                   class="add-to-compare d-flex align-items-center justify-content-center text-primary bg-white hover-white bg-hover-primary w-45px h-45px rounded-circle mb-2 border">
                                                    <i class="fal fa-sort-alt"></i>
                                                </a>
                                            </div>
                                            <div class="slick-slider slider-for"
                                                 data-slick-options='{"slidesToShow": 1, "autoplay":false,"dots":false,"arrows":false,"asNavFor": ".slider-nav"}'>
                                                @if (Model != null)
                                                {
                                                    if (Model.dtImages != null)
                                                    {
                                                        if (Model.dtImages.Rows.Count > 0)
                                                        {
                                                            for (int i = 0; i <= Model.dtImages.Rows.Count - 1; i++)
                                                            {
                                                                <div class="box">
                                                                    <div class="card p-0 hover-change-image rounded-0 border-0">
                                                                        <a href="@Model.dtImages.Rows[i]["Images"].ToString()"
                                                                           class="card-img ratio ratio-1-1 bg-img-cover-center"
                                                                           data-gtf-mfp="true"
                                                                           data-gallery-id="02"
                                                                           style="background-image:url('@Model.dtImages.Rows[i]["Images"].ToString()')">
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                            }
                                                        }
                                                    }
                                                }


                                            </div>
                                            <div class="slick-slider slider-nav mt-1 mx-n1"
                                                 data-slick-options='{"slidesToShow": 5, "autoplay":false,"dots":false,"arrows":false,"asNavFor": ".slider-for","focusOnSelect": true,"responsive":[{"breakpoint": 768,"settings": {"slidesToShow": 3,"arrows":false}},{"breakpoint": 576,"settings": {"slidesToShow": 2,"arrows":false}}]}'>
                                                @if (Model != null)
                                                {
                                                    if (Model.dtImages != null)
                                                    {
                                                        if (Model.dtImages.Rows.Count > 0)
                                                        {
                                                            for (int i = 0; i <= Model.dtImages.Rows.Count - 1; i++)
                                                            {
                                                                <div class="box px-0">
                                                                    <div class="bg-white p-1 h-100 rounded-0">
                                                                        <img src="@Model.dtImages.Rows[i]["Images"].ToString()" alt="Image 1" style="width: 500px !important; margin-left: 139px; "
                                                                             class="h-100 w-100">
                                                                    </div>
                                                                </div>
                                                            }
                                                        }
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        @*<p class="text-muted fs-11 font-weight-500 letter-spacing-05px text-uppercase mb-3">@Model.CategoryName</p>*@
                                        <div class="d-flex align-items-center">
                                            <h2 class="fs-30 mb-2">@Model.ProductName</h2>
                                            @*<span class="badge badge-pink rounded-pill ml-6">hot</span>*@
                                        </div>
                                        <p class="mb-6 fs-20 text-primary lh-14">
                                            <small>Sales Price</small>  &nbsp;&nbsp;<small>MRP</small>  <br /> @Model.DP   &nbsp;&nbsp;<span class="fa fa-rupee-sign"></span><del>@Model.MRP</del>

                                        </p>
                                        <p class="mb-4 d-flex text-primary">
                                            <span class="d-inline-block mr-2 fs-14"><i class="far fa-stopwatch"></i></span>
                                            <span class="fs-15">Only <span class="font-weight-600">@Model.BalanceQuantity</span> Left in Stock</span>
                                        </p>
                                        @Html.HiddenFor(m => m.Pk_ProductId)



                                        <div class="quantity buttons_added">
                                            <p class="mb-3">@Model.ProductDescription</p>
                                            <label>Quantity</label>
                                            <input type="button" value="-" class="minus">
                                            @Html.TextBoxFor(m => m.Quantity, new { @type = "number", @step = "1", @min = "1", @max = "", @name = "quantity", @value = "1", @title = "Qty", @class = "input-text qty text", @size = "4", @pattern = "", @inputmode = "" })
                                            <input type="button" value="+" class="plus">
                                        </div>
                                        <br />



                                        <button type="submit" name="Add" value="Add" onclick="return fcheckquantity()" class="btn btn-primary btn-block mb-4 text-capitalize">
                                            add to cart
                                        </button>
                                        @*<p class="text-primary font-weight-600 lh-14375 mb-2">Our Perfect Fit Promise</p>
        <p>We stand behind our products. If you don’t love it, exchanges and returns are free for 60 days.</p>*@
                                    </div>
                                </div>
                            </div>
                         
                        </div>
                    </div>
                </div>
            </div>
        </div>
    

}
<script>
    $(document).ready(function () {
        $('#Quantity').val(1);
    });

    function fcheckquantity() {
        if ($("#Quantity").val() = 0) {
            alert("Please Add Quantity");
            return false;

        }
    }


    function wcqib_refresh_quantity_increments() {
        jQuery("div.quantity:not(.buttons_added), td.quantity:not(.buttons_added)").each(function (a, b) {
            var c = jQuery(b);
            c.addClass("buttons_added"), c.children().first().before('<input type="button" value="-" class="minus" />'), c.children().last().after('<input type="button" value="+" class="plus" />')
        })
    }
    String.prototype.getDecimals || (String.prototype.getDecimals = function () {
        var a = this,
            b = ("" + a).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
        return b ? Math.max(0, (b[1] ? b[1].length : 0) - (b[2] ? +b[2] : 0)) : 0
    }), jQuery(document).ready(function () {
        wcqib_refresh_quantity_increments()
    }), jQuery(document).on("updated_wc_div", function () {
        wcqib_refresh_quantity_increments()
    }), jQuery(document).on("click", ".plus, .minus", function () {
        var a = jQuery(this).closest(".quantity").find(".qty"),
            b = parseFloat(a.val()),
            c = parseFloat(a.attr("max")),
            d = parseFloat(a.attr("min")),
            e = a.attr("step");
        b && "" !== b && "NaN" !== b || (b = 0), "" !== c && "NaN" !== c || (c = ""), "" !== d && "NaN" !== d || (d = 0), "any" !== e && "" !== e && void 0 !== e && "NaN" !== parseFloat(e) || (e = 1), jQuery(this).is(".plus") ? c && b >= c ? a.val(c) : a.val((b + parseFloat(e)).toFixed(e.getDecimals())) : d && b <= d ? a.val(d) : b > 0 && a.val((b - parseFloat(e)).toFixed(e.getDecimals())), a.trigger("change")
    });




</script>
