@using LifeOne.Models.Manager
@model LifeOne.Models.FranchiseManagement.FEntity.MOrder
@{
    ViewBag.Title = "ViewFranchiseSupplyOrderStatus";
    Layout = "~/Views/Shared/_FranchiseLayout.cshtml";
}

<style>
    .modal-footer {
        background: white;
        width: 100%;
    }

    .modal-body {
        position: relative;
        padding: 31px;
    }
</style>
@using (Html.BeginForm("ViewFranchiseSupplyOrderStatus", "FranchiseCustomerOrder", FormMethod.Post))
{
    <div class="container-fluid">
        <div class="row page-titles">
            <div class="ptitle">
                <h4 class="mb-1 mt-0"> Ordered List</h4>
                @*<nav aria-label="breadcrumb" class="float-left mt-1">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Franchise-Dashboard">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="#">Manage Customer Order</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Ordered List</li>
                    </ol>
                </nav>*@
            </div>
            <div class="pbutton">
                <div class="right text-right">
                    <span>
                        <a href="@Url.Action("ExportToExcelBillingOrdered","FranchiseCustomerOrder",new {Page=Model!=null && Model.Pager!=null&&Model.Pager.EndPage>0?Model.Pager.CurrentPage:1 })" class="btn btn-success btn-rounded btngreen"><i class="fa fa-file-excel-o"></i></a>
                    </span>
                    <span>
                        <button type="button" class="btn btn-success btn-rounded btnPdf" id="btnpdf"><i class="fa fa-file-pdf-o"></i></button>
                    </span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 offset-lg-3 ">
                <div class="d-flex align-items-center justify-content-center mb-3">
                    @*<a href="/Associate/AssociateTeam/MyDownline" class="btn btn-secondary mr-2">Root</a>*@
                    <div class="input-group" style="float:left">
                        @Html.TextBoxFor(m => m.LoginID, new { @class = "form-control", @placeholder = "Enter Login Id" })
                        <button type="submit" class="btn btn-success mr-2" style="border-radius: 0 5px 5px 0px;"><i class="fa fa-search"></i></button>
                        @*<button type="button" class="btn btn-secondary">Go Up</button>*@
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-9">
                                <h4 class="header-title mt-0 mb-1"></h4>
                                <p class="sub-header">  </p>
                            </div>
                            <div class="col-md-3 navbar-custom pull-right" style="position:relative">
                                <div class="app-search">
                                    @*<form>
                                            <div class="input-group">
                                                <input type="text" class="form-control" placeholder="Search...">
                                                <span data-feather="search"></span>
                                            </div>
                                        </form>*@
                                </div>
                            </div>
                        </div>
                        <div class="table-responsive" >
                            <table class="table table-striped mb-0" id="tblBillingOrdered">
                                <thead>
                                    <tr>
                                        <th>#Sn.</th>
                                        <th>Order No</th>
                                        <th>Supply To</th>
                                        @*<tb>User Type</b></th>*@
                                        <th>Payment Type</th>
                                        <th>Transaction No</th>
                                        <th>Item Qty.</th>
                                        <th>BV</th>
                                        <th>Order Amt.(₹)</th>
                                        <th>Discount Amt.(₹)</th>
                                        <th>Final Amt.(₹)</th>
                                        <th>Order Type</th>
                                        <th>Ordered Dt.</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.LstOrder != null && Model.LstOrder.Count > 0)
                                    {

                                        int i = 0;
                                        int page = Model.LstOrder[0].Page??0;
                                        page = (page - 1);
                                        

                                        i = ((page) * (Model.LstOrder[0].Size));

                                        foreach (var item in Model.LstOrder)
                                        {
                                            <tr>
                                                <td align="left">@(i = i + 1)</td>
                                                <td align="left"><span><a href="#" style="text-decoration:underline" data-toggle="modal" data-target="#myModal" onclick="ShowItem(@item.PK_RId)">@item.OrderNo</a></span></td>
                                                <td align="left"><span>@item.SupplyToName</span></td>
                                                @*<td align="left"><span>@item.UserType</span></td>*@
                                                <td align="left"><span>@item.PaymentType</span></td>
                                                <td align="left"><span>@item.TransactionNo</span></td>
                                                <td align="left"><span>@item.ItemQty</span></td>
                                                <td align="left"><span>@item.PointValue</span></td>
                                                <td align="left"><span>@(Convert.ToDecimal(item.Amount) + item.DiscountAmt)</span></td>
                                                <td align="left"><span>@item.DiscountAmt</span></td>
                                                <td align="left"><span>@((Convert.ToDecimal(item.Amount) + item.DiscountAmt) - item.DiscountAmt)</span></td>

                                                <td align="left"><span>Box</span></td>
                                                <td align="left"><span>@item.ApproveDate</span></td>
                                                <td>
                                                    <a href="/Franchise/FranchiseCustomerOrder/FranchiseCustomerTaxInvoice?OrderId=@item.PK_RId" target="_blank" class="btn-sm btn  btn-info " title="View Invoice"><i class="fa fa-file"></i></a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        @*<tr colspan="11">
                                                <td>No Record Found..</td>
                                            </tr>*@
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <footer class="card-footer bg-white p-2">
                        <div class="d-md-flex align-items-center justify-content-between">

                            @if (Model != null)
                            {
                                if (Model.Pager != null)
                                {
                                    if (Model.Pager.EndPage > 1)
                                    {
                                        <div> <small class="text-muted inline">showing @Model.LstOrder.Count  of @Model.LstOrder[0].TotalRecords items</small> </div>
                                        <div>
                                            <ul class="pagination pagination-sm m-t-none m-b-none">
                                                @if (Model.Pager.CurrentPage > 1)
                                                {
                                                    <li class="page-item">
                                                        <a class="page-link" href="/Franchise/FranchiseCustomerOrder/ViewFranchiseSupplyOrderStatus">First</a>
                                                    </li>
                                                    <li class="page-item">
                                                        <a class="page-link" href="/Franchise/FranchiseCustomerOrder/ViewFranchiseSupplyOrderStatus?Page=@Model.Pager.CurrentPage - 1)">Previous</a>
                                                    </li>
                                                }
                                                @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                                                {
                                                    <li class="page-item @(page == Model.Pager.CurrentPage ? "active" : "")">
                                                        <a class="page-link" href="/Franchise/FranchiseCustomerOrder/ViewFranchiseSupplyOrderStatus?Page=@page">@page</a>
                                                    </li>
                                                }
                                                @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                                                {
                                                    <li class="page-item">
                                                        <a class="page-link" href="/Franchise/FranchiseCustomerOrder/ViewFranchiseSupplyOrderStatus?Page=@(Model.Pager.CurrentPage + 1)">Next</a>
                                                    </li>
                                                    <li class="page-item">
                                                        <a class="page-link" href="/Franchise/FranchiseCustomerOrder/ViewFranchiseSupplyOrderStatus?Page=@(Model.Pager.TotalPages)">Last</a>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                }

                            }

                        </div>
                    </footer>
                </div>
            </div>
        </div>
    </div>

    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Ordered Details</h4>
                </div>
                <div class="modal-body">
                    @*<div id="CustomMessages1"></div>*@
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="table-responsive" >
                                <table id="Productdetails" class="table table-striped mb-0">
                                    <thead>
                                        <tr>
                                            <th>Product&nbsp;Type</th>
                                            <th>Product&nbsp;Name</th>
                                            @*<th>Req.&nbsp;Qty</th>*@
                                            <th>Total&nbsp;Qty</th>
                                            <th>BV</th>
                                            <th>Total BV</th>
                                            <th>Product&nbsp;Amt</th>

                                            <th>Final&nbsp;Amt</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
}

<script>
    function ShowItem(RequestId) {
        debugger;
        var ReqId = RequestId;
        $.ajax({
            url: "/Franchise/FranchiseCustomerOrder/ViewSupplyItemDetail",
            type: "POST",
            dataType: 'json',
            data: JSON.stringify({ RequestId: ReqId }),
            contentType: "application/json",
            success: function (result) {

                if (result != undefined && result != '') {

                    $("#Productdetails tbody").html('');

                    var str = "";
                    var TotalProdAmt = 0;
                    var TotalReqQty = 0;
                    var FinalAmt = 0;
                    var PointValue = 0;
                    var TotalBV = 0;
                    var NetBVPoint = 0;
                    var TotalReqBoxQty = 0;
                    for (var i = 0; i < result.length; i++) {

                        TotalBV = 0;
                        TotalBV = parseFloat(parseInt(result[i].PointValue) * parseInt(result[i].ReqQnty)).toFixed(2);
                        NetBVPoint = parseFloat(parseFloat(NetBVPoint) + parseFloat(TotalBV))
                        if (result[i].IsBox == false) {
                            PointValue = PointValue + parseInt(result[i].PointValue);
                            TotalProdAmt = parseInt(TotalProdAmt) + parseFloat(result[i].Amount);
                            TotalReqQty = parseInt(TotalReqQty) + parseFloat(result[i].ReqQnty);
                            //FinalAmt = parseInt(FinalAmt) + parseFloat(((result[i].Amount) * (result[i].ReqQnty) - result[i].DiscountAmt));
                              FinalAmt = parseInt(FinalAmt) + parseFloat(((result[i].Amount) * (result[i].ReqQnty) ));
                            str += "<tr><td align='left' nowrap>" + result[i].ProductType + "</td><td align='left'>" + result[i].ProductName + "</td><td align='left'>" + result[i].ReqQnty + "</td><td align='left'>" + result[i].PointValue + "</td><td align='left'>" + TotalBV + "</td><td align='left'>" + result[i].Amount + "</td><td align='left'>" + (((result[i].Amount) * (result[i].ReqQnty))) + "</td></tr>";

                             //< td align = 'left' > " + (((result[i].Amount) * (result[i].ReqQnty)) - result[i].DiscountAmt) + "</td >
                        }
                        else {
                            PointValue = PointValue + parseInt(result[i].PointValue);
                            TotalProdAmt = parseInt(TotalProdAmt) + parseFloat(result[i].Amount);
                            TotalReqQty = parseInt(TotalReqQty) + parseFloat(result[i].ReqQnty);
                             TotalReqBoxQty = parseInt(TotalReqBoxQty) + parseFloat(result[i].ReqBoxQty);

                              FinalAmt = parseInt(FinalAmt) + parseFloat(((result[i].Amount) * (result[i].ReqQnty) ));

                            //FinalAmt = parseInt(FinalAmt) + parseFloat(((result[i].Amount) * (result[i].ReqBoxQty) * (result[i].BoxQty) - result[i].DiscountAmt));

                            str += "<tr><td align='left' nowrap>" + result[i].ProductType + "</td><td align='left'>" + result[i].ProductName + "</td><td align='left'>" + result[i].ReqQnty + "</td><td align='left'>" + result[i].PointValue + "</td><td align='left'>" + TotalBV + "</td><td align='left'>" + result[i].Amount + "</td><td align='left'>" + ((result[i].Amount) * result[i].ReqQnty) + "</td></tr>";
                        }
                    }

                    str += "<tr><th colspan='2'>Total</th><th>" + TotalReqQty + "</th><th></th><th>" + parseFloat(NetBVPoint).toFixed(2) + "</th><th></th><th align='left'>" + parseFloat(FinalAmt) + "</th></tr>";

                    $("#Productdetails tbody").html(str);
                }
            },
            error: function (err) {
                showSnazzyErrorMessage1(err.statusText);
                return false;
            }
        });
    }

    $('#btnpdf').click(function () {
        debugger;
        var col = [2, 0]; // coloms to remove

        var tbl = $('#tblBillingOrdered').clone();
        $('.t').addClass('hide');
        var tablenew = tbl.get(0);

        for (var c = 0; c < col.length; c++) {
            for (var i = 0; i < tablenew.rows.length; i++) {

                var tableRow = tablenew.rows[i];

                for (var j = 0; j < tableRow.cells.length; j++) {
                    if (j == col[c]) {
                        tableRow.cells[j].remove();

                    }
                }
            }
        }


        var table1 =
            tableToJson(tbl.get(0)),
            cellWidth = 35,
            rowCount = 0,
            cellContents,
            leftMargin = 2,
            topMargin = 12,
            topMarginTable = 55,
            headerRowHeight = 13,
            rowHeight = 9,

            l = {
                orientation: 'l',
                unit: 'mm',
                format: 'a4',
                compress: true,
                fontSize: 8,
                lineHeight: 1,
                autoSize: false,
                printHeaders: true
            };
        var doc = new jsPDF(l, '', '', '');
        doc.page = 1; // use this as a counter.

        function footer() {
            doc.text(150, 285, 'page ' + doc.page); //print number bottom right

            doc.page++;
        };

        doc.setProperties({
            title: 'Billing Order List',
            subject: 'This is the subject',
            author: 'author',
            keywords: 'generated, javascript, web 2.0, ajax',
            creator: 'author'
        });

        doc.cellInitialize();

        $.each(table1, function (i, row) {

            rowCount++;

            $.each(row, function (j, cellContent) {

                if (rowCount == 1) {
                    doc.margins = 1;
                    doc.setFont("helvetica");
                    doc.setFontType("bold");
                    doc.setFontSize(9);

                    doc.cell(leftMargin, topMargin, cellWidth, headerRowHeight, cellContent, i)
                }
                else if (rowCount == 2) {
                    doc.margins = 1;
                    doc.setFont("times");
                    doc.setFontType("Times New Roman");  // or for normal font type use ------ doc.setFontType("normal");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);
                }
                else {

                    doc.margins = 1;
                    doc.setFont("courier ");
                    doc.setFontType("Times New Roman ");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);  // 1st=left margin    2nd parameter=top margin,     3rd=row cell width      4th=Row height
                }
            })
        })

        doc.text(150, 285, 'page ' + doc.page); //print number bottom right
        doc.setFontSize(25);
        doc.setFillColor('#DCDCDC');
        doc.rect(1, 0, 400, 10, "F");
        doc.setTextColor(0, 0, 0);
        doc.text(110, 8, "StockList");
        doc.page++;
        doc.save('BillingOrderList.pdf');

    });

    function tableToJson(table) {
        var data = [];

        // first row needs to be headers
        var headers = [];
        for (var i = 0; i < table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
        }


        // go through cells
        for (var i = 0; i < table.rows.length; i++) {

            var tableRow = table.rows[i];
            var rowData = {};

            for (var j = 0; j < tableRow.cells.length; j++) {

                rowData[headers[j]] = tableRow.cells[j].textContent.trim() == "" ? "-" : tableRow.cells[j].textContent.trim();

            }

            data.push(rowData);
        }

        return data;
    }
    // createPDF--------------
    function createPDF() {
        var sTable = document.getElementById('DepartmentTable').innerHTML;

        var style = "<style>";
        style = style + "table {width: 100%;font: 17px Calibri;}";
        style = style + "table, th, td {border: solid 1px #DDD; border-collapse: collapse;";
        style = style + "padding: 2px 3px;text-align: center;}";
        style = style + "</style>";

        // CREATE A WINDOW OBJECT.
        var win = window.open('', '', 'height=700,width=700');

        win.document.write('<html><head>');
        win.document.write('<title>Billing Order List</title>');   // <title> FOR PDF HEADER.
        win.document.write(style);          // ADD STYLE INSIDE THE HEAD TAG.
        win.document.write('</head>');
        win.document.write('<body>');
        win.document.write(sTable);         // THE TABLE CONTENTS INSIDE THE BODY TAG.
        win.document.write('</body></html>');

        win.document.close(); // CLOSE THE CURRENT WINDOW.

        win.print();    // PRINT THE CONTENTS.
    }
</script>

