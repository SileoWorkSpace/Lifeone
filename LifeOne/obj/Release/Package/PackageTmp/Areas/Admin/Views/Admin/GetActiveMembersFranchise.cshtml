@model LifeOne.Models.FranchiseManagement.FEntity.FranchiseEWalletledger

@{
    ViewBag.Title = "Activated Direct Seller";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    @*@using (Html.BeginForm("GetBonanzaRewardForAdmin", "Admin", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
        {*@
    <div class="row page-titles">
        <div class="ptitle">

            <h4 class="mb-1 mt-0">Franchisee Activation Details </h4>



            @*<nav aria-label="breadcrumb" class="float-left">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Admin-Dashboard">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="#-">Franchisee</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Activated Members</li>
                    </ol>
                </nav>*@
        </div>
        <div class="pbutton">
            <div class="right text-right">
                <span>
                    <a href="#" onclick="fCallPaging(1,1)" data-toggle="tooltip" data-placement="top" title="Download Excel" class="btn btn-success btn-rounded btngreen"><i class="fa fa-file-excel-o"></i></a>
                </span>
                @*<span>
                        <button type="button" class="btn btn-success btn-rounded btngreen" id="btnpdf" data-toggle="tooltip" data-placement="top" title="Download PDF"><i class="fa fa-file-pdf-o"></i></button>
                    </span>*@
            </div>
        </div>
    </div>
    @using (Html.BeginForm("GetActiveMembersFranchise", "Admin", FormMethod.Post, new { @style = "height:0;" }))
    {
        <div id="no-more-tables">


            <div class="row">
                <div class="col-md-12">
                    
                        <div class="row">
                            <div class="col-12 col-md-2">
                                <div class="form-group">
                                    @Html.HiddenFor(m => m.Page)
                                    @Html.HiddenFor(m => m.IsExport)
                                    <label>Franchisee Id</label>
                                    <input type="text" name="FranchiseLoginID" id="FranchiseLoginID" placeholder="Enter Franchisee Id" class="form-control">
                                </div>
                            </div>
                            <div class="col-12 col-md-2">
                                <div class="form-group">
                                    <label>Login Id</label>
                                    <input type="text" name="LoginID" id="LoginID" placeholder="Enter Login Id" class="form-control" value="@ViewBag.LoginId">
                                </div>
                            </div>
                            <div class="col-12 col-md-2">
                                <div class="form-group">
                                    <label>From Date</label>
                                    <input type="date" name="Fromdate" id="txtfromdate" placeholder="" class="form-control" value="@ViewBag.Fromdate">
                                </div>
                            </div>
                            <div class="col-12 col-md-2">
                                <div class="form-group">
                                    <label>To Date</label>
                                    <input type="date" name="Todate" id="txttodate" placeholder="" class="form-control" value="@ViewBag.Todate">
                                </div>
                            </div>

                            <div class="col-12 col-md-2">
                                <div class="form-group">
                                    <label>Mobile No</label>
                                    <input type="text" name="MobileNo" id="txtMobileNo" placeholder="Enter Mobile No." class="form-control" value="@ViewBag.MobileNo">
                                </div>
                            </div>
                            <div class="col-12 col-md-2">
                                <div class="form-group">
                                    <label>Invoice No</label>
                                    <input type="text" name="InvoiceNo" id="txtInvoiceNo" placeholder="Enter Invoice No." class="form-control" value="@ViewBag.InvoiceNo">
                                </div>
                            </div>
                            <div class="col-12 col-md-2">
                                <div class="form-group label-floating is-empty">
                                    <label class="form-control-placeholder" for="name">Package</label>
                                    @Html.DropDownListFor(m => m.FK_PackageId, new SelectList(ViewBag.ddlPackageList, "Value", "Text"), new { @class = "form-control" })
                                    <input type="hidden" id="hdnPackageName" name="ProductName" />
                                </div>
                            </div>
                            <div class="col-12 col-md-2">
                                <div class="form-group label-floating is-empty">
                                    <label class="form-control-placeholder" for="name">Payment Mode</label>
                                    <select id="ddlPaymentMode" name="PaymentMode" class="form-control" value="@ViewBag.PaymentMode">
                                        <option value="">Select</option>
                                        <option value="Cash">Cash</option>
                                        <option value="Cheque">Cheque</option>
                                        <option value="IMPS">IMPS</option>
                                        <option value="NEFT">NEFT</option>
                                        <option value="RTGS">RTGS</option>
                                        <option value="Free">Free</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-12 col-md-2">
                                <div class="right text-right">
                                    <div class="form-group">
                                        <label style="display:block;"></label>
                                        <input type="submit" class="btn btn-success " style="margin-top:1.5em;display:none;" value="Search" id="BtnSearch">
                                        <input type="submit" class="btn btn-success " style="margin-top:1.5em;" value="Search" onclick="fCallPaging(1,0)">
                                        <input type="button" class="btn btn-secondary" onclick="fclaer()" style="margin-top:1.5em;" value="Reset">
                                    </div>
                                </div>
                            </div>
                            </div>
                         

                        
                </div>

            </div>
            <div class="table-responsive" id="customers">
                <table class="table table-striped mb-0" id="tblCustomers">
                    <thead>
                        <tr>
                        <tr>
                            <th>#Sn.</th>
                            <th>Franchisee Name / Code</th> 
                            <th>Package</th>
                            <th>Login Id</th>
                            <th>Invoice No</th>
                            <th>Direct Seller </th>
                            <th>Conatct</th>
                            <th style="text-align:right">Amount</th>
                            <th style="text-align:right">BV</th>
                            <th style="text-align:right">Payment Mode</th>
                            <th style="text-align:right">Transaction No</th>
                            <th style="text-align:right">Active Date</th>
                            <th style="text-align:right">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            if (Model.dtRequestDetails != null)
                            {
                                if (Model.dtRequestDetails.Rows.Count > 0)
                                {
                                    int j = 1;
                                    //int i = 1;
                                    int page = Model.Pager.CurrentPage;
                                    page = (page - 1);
                                    j = ((page) * (Model.Pager.PageSize));


                                    for (int i = 0; i <= Model.dtRequestDetails.Rows.Count - 1; i++)
                                    {
                                        <tr class="text-left">
                                            <td>@(j=j+1)</td>
                                            <td><b>@Model.dtRequestDetails.Rows[i]["FranchiseName"].ToString()</b><br />@Model.dtRequestDetails.Rows[i]["FranchiseCode"].ToString()</td>
                                            
                                            <td>@Model.dtRequestDetails.Rows[i]["PackageName"].ToString()</td>
                                            <td>@Model.dtRequestDetails.Rows[i]["LoginId"].ToString()</td>
                                            <td>@Model.dtRequestDetails.Rows[i]["InvoiceNo"].ToString()</td>
                                            <td>@Model.dtRequestDetails.Rows[i]["DisplayName"].ToString()</td>
                                            <td>@Model.dtRequestDetails.Rows[i]["MobileNo"].ToString()</td>
                                            <td style="text-align:right">@Model.dtRequestDetails.Rows[i]["Amount"].ToString()</td>
                                            <td style="text-align:right">@Model.dtRequestDetails.Rows[i]["BV"].ToString()</td>
                                            <td style="text-align:right">@Model.dtRequestDetails.Rows[i]["PaymentMode"].ToString()</td>
                                            <td style="text-align:right">@Model.dtRequestDetails.Rows[i]["DDChequeNo"].ToString()</td>
                                            <td style="text-align:right">@Model.dtRequestDetails.Rows[i]["ActiveDate"].ToString()</td>
                                            <td>


                                                @if (Model.dtRequestDetails.Rows[i]["PaymentMode"].ToString() != "Free")
                                                {
                                                    if (@Model.dtRequestDetails.Rows[i]["IsShipped"].ToString() == "1")
                                                    {
                                                        <button type="button" value="View payment" class="btn-xs btn btn-default" onclick="EditDeliveryInfo(@Model.dtRequestDetails.Rows[i]["Pk_TransId"].ToString())"><i class="fa fa-truck text-success" aria-hidden="true"></i></button>

                                                    }
                                                    else
                                                    {
                                                        <button type="button" value="View payment" class="btn-xs btn btn-default" onclick="AddDeliveryInfo(@Model.dtRequestDetails.Rows[i]["Pk_TransId"].ToString())"><i class="fa fa-truck text-success" aria-hidden="true"></i></button>
                                                    }
                                                    <a href="#" onclick="return fDeletePackageSale('@Model.dtRequestDetails.Rows[i]["Pk_TransId"].ToString()','@Model.dtRequestDetails.Rows[i]["Fk_MemId"].ToString()')" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></a>
                                                    <a href="/Admin/Admin/ActivatedCustomerTaxInvoice?Pk_TransId=@Model.dtRequestDetails.Rows[i]["Pk_TransId"]" target="_blank" class="btn-sm btn  btn-info " title="View Invoice"><i class="fa fa-file"></i></a>
                                                }

                                            </td>
                                        </tr>
                                        
                                    }
                                }

                            }
                        }
                    </tbody>
                </table>
            </div>
            <footer class="card-footer bg-white p-2">
                <div class="d-md-flex align-items-center justify-content-between">

                    @if (Model != null)
                    {
                        if (Model.Pager != null)
                        {
                            if (Model.Pager.EndPage > 1)
                            {
                                <div> <small class="text-muted inline">showing @Model.dtRequestDetails.Rows.Count  of @Model.dtRequestDetails.Rows[0]["TotalCount"].ToString() items</small> </div>
                                <div>
                                    <ul class="pagination pagination-sm m-t-none m-b-none">
                                        @if (Model.Pager.CurrentPage > 1)
                                        {
                                            <li class="page-item">
                                                <a class="page-link" onclick="fCallPaging(1,0)" href="#">First</a>

                                            </li>
                                            <li class="page-item">

                                                <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage - 1),0)" href="#">Previous</a>
                                            </li>
                                        }
                                        @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                                        {
                                            <li class="page-item @(page == Model.Pager.CurrentPage ? "active" : "")">


                                                <span><a class="page-link" onclick="fCallPaging(@page,0)" href="#">@page</a></span>
                                            </li>
                                        }
                                        @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                                        {
                                            <li class="page-item">

                                                <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage + 1),0)" href="#">Next</a>

                                            </li>
                                            <li class="page-item">

                                                <a class="page-link" onclick="fCallPaging(@(Model.Pager.TotalPages),0)" href="#">Last</a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                        }

                    }

                </div>
            </footer>


          
        </div>
    }
    </div>
  
    <button style="display:none" type="button" class="btn btn-info btn-lg hide" id="btnshowpopup" data-toggle="modal" data-target="#myModaldelivery">Click To View Particular Order</button>

    <div id="myModaldelivery" class="modal fade">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
                @*<div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title"> Add/Update Shipping Information</h4>
                    </div>*@

                <div class="row">
                    <div class="col-md-9">
                        @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                        <h4 class="modal-header text-left"> Add/Update Shipping Information</h4>
                    </div>

                </div>
                <div class="modal-body">

                    <div class="row">
                        <div class="col-sm-4">
                            <label>Doc No</label>
                            <input name="txtDocNo" type="text" id="txtDocNo" class="form-control" onkeypress="return isNumberKey(event)">

                        </div>
                        <div class="col-sm-4">
                            <label>Doc Date</label>
                            <input name="txtDocDate" type="date" id="txtDocDate" class="form-control datepicker-all">

                        </div>
                        <div class="col-sm-4">
                            <label>No. of Carton</label>
                            <input name="txtNoofCarton" type="text" id="txtNoofCarton" maxlength="6" class="form-control" onkeypress="return isNumberKey(event)">

                        </div>
                    </div>

                    <div class="row">

                        <div class="col-sm-4">
                            <label>Vehical No</label>
                            <input name="txtVehicalNo" type="text" id="txtVehicalNo" class="form-control" onkeypress="return isNumberKey(event)">

                        </div>

                        <div class="col-sm-4">
                            <label>PersonName</label>
                            <input name="txtPersonName" type="text" id="txtPersonName" class="form-control">

                        </div>
                        <div class="col-sm-4">
                            <label>Mobile No</label>
                            <input name="txtMobileNo" type="text" maxlength="10" id="txtMobileNo" class="form-control" onkeypress="return isNumberKey(event)" />


                            <span id="numberText"></span>
                        </div>
                    </div>

                    <div class="clearfix"></div>
                    <div class="row">
                        <div class="col-sm-12">

                            <label>Delivery Address</label>
                            <textarea name="txtDeliAdd" rows="3" cols="100" id="txtDeliAdd" class="form-control"></textarea>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4">
                            <label>State</label>
                            <input name="txtDelState" type="text" id="txtDelState" class="form-control">

                        </div>
                        <div class="col-sm-4">
                            <label>City</label>
                            <input name="txtDelCity" type="text" id="txtDelCity" class="form-control">

                        </div>
                        <div class="col-sm-4">
                            <label>Pin Code</label>
                            <input name="txtDelPinCode" type="text" maxlength="6" id="txtDelPinCode" class="form-control" onkeypress="return isNumberKey(event)">

                        </div>
                    </div>


                    <div class="row">

                        <div class="col-sm-4">
                            <label>Mode Of Transport</label>
                            <select name="ddlModeOfTransport" id="ddlModeOfTransport" class="form-control">
                                <option value="0">Select</option>
                                <option value="Road">Road</option>
                                <option value="Flight">Flight</option>
                                <option value="Train">Train</option>
                                <option value="Courier">Courier</option>

                            </select>

                        </div>

                        <div class="col-sm-4">
                            <label>Courier Name</label>
                            <input name="txtCourierName" type="text" id="txtCourierName" class="form-control">

                        </div>
                        <div class="col-sm-4">
                            <label>Courier Ref. No</label>
                            <input name="txtRefNo" type="text" id="txtRefNo" class="form-control" onkeypress="return isNumberKey(event)">

                        </div>
                    </div>


                    <div class="row">
                        <div class="col-sm-4">
                            <label>Freight Charges</label>
                            <input name="txtFreightCharges" type="text" id="txtFreightCharges" class="form-control" onkeypress="return isNumberKey(event)">

                        </div>
                        <div class="col-sm-4">
                            <label>Discount</label>
                            <input name="txtDiscount" type="text" id="txtDiscount" class="form-control" onkeypress="return isNumberKey(event)">

                        </div>
                        <div class="col-sm-4">
                            <label>Electronic Ref No</label>
                            <input name="txtElectronicRefNo" type="text" id="txtElectronicRefNo" class="form-control" onkeypress="return isNumberKey(event)">

                        </div>

                    </div>



                </div>
                <div class="modal-footer pull-right">
                    <button type="button" class="btn btn-primary" onclick="SaveShippingInfo()">Submit</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <span id="spanRequetId" class="hide" style="display:none">0</span>

<div id="tblpdff" style="font-size:50px;">

</div>
<script>
    function fCallPaging(val, IsExport) {

        if (val == undefined || val == NaN || val == null || val == "" || val == 0) {
            val = 1;
        }
        $("#IsExport").val(IsExport);
        $("#Page").val(val);
        $('#BtnSearch').trigger('click');

    }
    function fclaer() {
        $(".fclear").val('');
        $("#Page").val(1);
        $("#IsExport").val(0);
        window.location.reload();
    }



    function fDeletePackageSale(TransId, Fk_memId) {
        var checkstr = confirm('are you sure you want to delete this?');
        if (checkstr == true) {
            $.ajax({
                url: "/Admin/Admin/DeleteActivatedMembersOrders",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ Pk_TransId: TransId, Fk_memId: Fk_memId }),
                contentType: "application/json",


                success: function (result) {
                    debugger
                    if (result.Status != undefined && result.Status != '' && result.Status == '1') {
                        var PIndx = $("#Page").val();

                        fCallPaging(PIndx);
                    }
                    else {

                    }
                },
                error: function (err) {
                    alert(err.statusText);
                    return false;
                }
            });
        } else {
            return false;
        }
    }

    function EditDeliveryInfo(RequestIdvalue) {

        $("#btnshowpopup").click();
        $("#spanRequetId").text(RequestIdvalue);

        $.ajax({
            type: "POST",
            url: "/Admin/FranchiseOrderRequest/GetEditActivatedMembersItemInformation",
            data: '{RequestId: "' + JSON.stringify(RequestIdvalue) + '"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (deliveryArr) {
                var i = 0;

                $("#txtDocNo").val(deliveryArr[i].DocNo);
                $("#txtDocDate").val(deliveryArr[i].DocDate);
                $("#txtNoofCarton").val(deliveryArr[i].NoOfCarton);
                $("#ddlModeOfTransport").val(deliveryArr[i].ModeOfTrip);
                $("#txtVehicalNo").val(deliveryArr[i].VehicalNo);

                $("#txtDeliAdd").val(deliveryArr[i].DeliveryAddress);
                $("#txtDelState").val(deliveryArr[i].State);
                $("#txtDelCity").val(deliveryArr[i].City);
                $("#txtDelPinCode").val(deliveryArr[i].PinCode);


                $("#txtCourierName").val(deliveryArr[i].CourierName);
                $("#txtFreightCharges").val(deliveryArr[i].FreightCharge);
                $("#txtDiscount").val(deliveryArr[i].Discount);


                $("#txtPersonName").val(deliveryArr[i].PersonName);
                $("#txtMobileNo").val(deliveryArr[i].MobileNo);
                $("#txtElectronicRefNo").val(deliveryArr[i].ElectronicRefNo);

                $("#txtRefNo").val(deliveryArr[i].RefNo);

            },
            error: function (response) {
                alert(response.d);
            }
        });
    }
    function SaveShippingInfo() {

        if ($("#txtDocNo").val() == "") {
            $("#txtDocNo").focus();
            return false;
        }

        if ($("#txtDocDate").val() == "") {
            $("#txtDocDate").focus();
            return false;
        }


        if ($("#txtNoofCarton").val() == "") {
            $("#txtNoofCarton").focus();
            return false;
        }


        if ($("#ddlModeOfTransport").val() == "") {
            $("#ddlModeOfTransport").focus();
            return false;
        }

        if ($("#txtVehicalNo").val() == "") {
            $("#txtVehicalNo").focus();
            return false;
        }

        if ($("#txtDeliAdd").val() == "") {
            $("#txtDeliAdd").focus();
            return false;
        }

        if ($("#txtDelState").val() == "") {
            $("#txtDelState").focus();
            return false;
        }


        if ($("#txtDelCity").val() == "") {
            $("#txtDelCity").focus();
            return false;
        }


        if ($("#txtCourierName").val() == "") {
            $("#txtCourierName").focus();
            return false;
        }


        if ($("#txtRefNo").val() == "") {
            $("#txtRefNo").focus();
            return false;
        }

        var deliveryArr = {};
        deliveryArr.Pk_TransId = $("#spanRequetId").text();

        deliveryArr.DocNo = $("#txtDocNo").val();
        deliveryArr.DocDate = $("#txtDocDate").val();
        deliveryArr.NoOfCarton = $("#txtNoofCarton").val();
        deliveryArr.ModeOfTrip = $("#ddlModeOfTransport").val();
        deliveryArr.VehicalNo = $("#txtVehicalNo").val();
        deliveryArr.DeliveryAddress = $("#txtDeliAdd").val();
        deliveryArr.State = $("#txtDelState").val();
        deliveryArr.City = $("#txtDelCity").val();
        deliveryArr.PinCode = $("#txtDelPinCode").val();

        deliveryArr.CourierName = $("#txtCourierName").val();
        deliveryArr.RefNo = $("#txtRefNo").val();
        deliveryArr.FreightCharge = $("#txtFreightCharges").val();
        deliveryArr.Discount = $("#txtDiscount").val();
        deliveryArr.PersonName = $("#txtPersonName").val();
        deliveryArr.MobileNo = $("#txtMobileNo").val();
        deliveryArr.ElectronicRefNo = $("#txtElectronicRefNo").val();


        $.ajax({
            type: "POST",
            url: "/Admin/FranchiseOrderRequest/AddActiveMemberShippingInformation",
            data: JSON.stringify({ _param: deliveryArr }),
            //  data: '{param: "' + JSON.stringify(deliveryArr) + '"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (response) {
                //  alert(response);
                alert("Shipping Details Saved Successfully.");
                window.location.reload();
            },
            error: function (response) {
                alert("failed");
            }
        });

    }
    function AddDeliveryInfo(value) {

        $("#btnshowpopup").click();
        $("#spanRequetId").text(value);
        $("input[type='text']").val('');

    }

    function fGetShippingDetails() {
        debugger;
        $.ajax({
            type: "GET",
            url: "/admin/FranchiseOrderRequest/GetShipingInfroamtion",
            data: { Pk_SupplierId: $('#Pk_RId').val() },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    $('#txtDocNo').val(response.DocNo);
                    $('#txtDocDate').val(response.DocDate);
                    $('#txtNoofCarton').val(response.NoofCarton);
                    $('#txtVehicalNo').val(response.VehicalNo);
                    $('#txtPersonName').val(response.PersonName);
                    $('#txtMobileNo').val(response.MobileNo);
                    $('#txtDeliAdd').val(response.DeliveryAddress);
                    $('#txtDelState').val(response.State);
                    $('#txtDelCity').val(response.City);
                    $('#txtDelPinCode').val(response.PinCode);
                    $('#ddlModeOfTransport').val(response.ModeOfTrip);
                    $('#txtCourierName').val(response.CourierName);
                    $('#txtRefNo').val(response.RefNo);
                    $('#txtFreightCharges').val(response.FreightCharge);
                    $('#txtDiscount').val(response.Discount);
                    $('#txtElectronicRefNo').val(response.ElectronicRefNo);
                    $('#txtInvoiceNo').val(response.InvoiceNo);


                }
                else {
                    alert("Something went wrong");
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

    $('#btnpdf').click(function () {
        debugger;
        var col = [0]; // coloms to remove

        var tbl = $('#tblCustomers').clone();
        var tablenew = tbl.get(0);

        for (var c = 0; c < col.length; c++) {
            for (var i = 0; i < tablenew.rows.length; i++) {

                var tableRow = tablenew.rows[i];

                for (var j = 0; j < tableRow.cells.length; j++) {
                    if (j == col[c]) {
                        tableRow.cells[j].remove();

                    }
                }
            }
        }


        var table1 =
            tableToJson(tbl.get(0)),
            cellWidth = 28,
            rowCount = 0,
            cellContents,
            leftMargin = 2,
            topMargin = 12,
            topMarginTable = 55,
            headerRowHeight = 13,
            rowHeight = 9,

            l = {
                orientation: 'l',
                unit: 'mm',
                format: 'a4',
                compress: true,
                fontSize: 8,
                lineHeight: 1,
                autoSize: false,
                printHeaders: true
            };
        var doc = new jsPDF(l, '', '', '');
        doc.page = 1; // use this as a counter.

        function footer() {
            doc.text(150, 285, 'page ' + doc.page); //print number bottom right

            doc.page++;
        };

        doc.setProperties({
            title: 'Activated Direct Seller',
            subject: 'This is the subject',
            author: 'author',
            keywords: 'generated, javascript, web 2.0, ajax',
            creator: 'author'
        });

        doc.cellInitialize();

        $.each(table1, function (i, row) {

            rowCount++;

            $.each(row, function (j, cellContent) {

                if (rowCount == 1) {
                    doc.margins = 1;
                    doc.setFont("helvetica");
                    doc.setFontType("bold");
                    doc.setFontSize(9);

                    doc.cell(leftMargin, topMargin, cellWidth, headerRowHeight, cellContent, i)
                }
                else if (rowCount == 2) {
                    doc.margins = 1;
                    doc.setFont("times");
                    doc.setFontType("Times New Roman");  // or for normal font type use ------ doc.setFontType("normal");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);
                }
                else {

                    doc.margins = 1;
                    doc.setFont("courier ");
                    doc.setFontType("Times New Roman ");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);  // 1st=left margin    2nd parameter=top margin,     3rd=row cell width      4th=Row height
                }
            })
        })

        doc.text(150, 285, 'page ' + doc.page); //print number bottom right
        doc.setFontSize(25);
        doc.setFillColor('#DCDCDC');
        doc.rect(1, 0, 400, 10, "F");
        doc.setTextColor(0, 0, 0);
        doc.text(110, 8, "Activated Direct Seller");
        doc.page++;
        doc.save('Activated Direct Seller.pdf');

    });
    function tableToJson(table) {
        var data = [];

        // first row needs to be headers
        var headers = [];
      
        for (var i = 0; i < table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
        }


        // go through cells
        for (var i = 0; i < table.rows.length; i++) {

            var tableRow = table.rows[i];
            var rowData = {};

            for (var j = 0; j < tableRow.cells.length; j++) {

                rowData[headers[j]] = tableRow.cells[j].textContent.trim() == "" ? "-" : tableRow.cells[j].textContent.trim();

            }

            data.push(rowData);
        }

        return data;
    }

</script>