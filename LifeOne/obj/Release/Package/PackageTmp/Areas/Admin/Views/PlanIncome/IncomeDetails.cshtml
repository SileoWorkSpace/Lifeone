@model LifeOne.Models.AdminManagement.AEntity.AdminIncomeDetailsModel
@{
    ViewBag.Title = "IncomeDetails";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .alert-warning {
        background-color: #fcf8e3 !important;
        border-color: #faebcc !important;
    }
</style>
<div class="content">
    <!-- Start Content-->
    <div class="container-fluid">
        <div class="row page-titles">
            <div class="ptitle">
                <h4 class="mb-1 mt-0">@ViewBag.IncomeType</h4>
                <nav aria-label="breadcrumb" class="float-left mt-1">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#">Payout</a></li>
                        <li class="breadcrumb-item"><a href="#">My Income</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@ViewBag.IncomeType</li>
                    </ol>
                </nav>

            </div>
            <div class="pbutton">
                <div class="right text-right">
                    <span>
                        @*<a class="advance-search" title="Click here for search" data-toggle="tooltip" data-placement="bottom" href="#-">Search</a>*@
                    </span>
                    <span>
                        <a href="@Url.Action("ExportToExcelSelfIncomeReport","PlanIncome",new {Page=Model!=null && Model.Pager!=null && Model.Pager.EndPage>0?Model.Pager.CurrentPage:1,PlanId=@ViewBag.PlanId })" class="btn btn-success btn-rounded btngreen"><i class="fa fa-file-excel-o"></i></a>
                    </span>
                    <span>
                        <button class="btn btn-success btn-rounded btngreen" onclick="btnpdf();" title="PDF"><i class="fa fa-file-pdf-o"></i></button>
                    </span>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="box">
                    <div class="box-body">
                        <form action="" method="post">
                            <div class="row" id="advance-search" style="display:none;">
                                <div class="col-md-12">
                                    <div class="alert alert-warning" style="color:#727272 !important">
                                        <div class="row">
                                            <div class="col-12 col-md-2">
                                                <div class="form-group">
                                                    <label>Login ID</label>
                                                    <input type="text" name="LoginID" id="LoginID" placeholder="" class="form-control">
                                                    <input type="hidden" value="@ViewBag.PlanId" name="PlanId" />
                                                </div>
                                            </div>
                                            <div class="col-12 col-md-2">
                                                <div class="form-group">
                                                    <label style="display:block;"></label>
                                                    <input type="submit" class="btn btn-success" formaction="/Admin/PlanIncome/IncomeDetails" style="margin-top:1.5em;" value="Search" id="BtnSearch">
                                                    <a href="/Income-Details?PlanId=1" class="btn btn-secondary" style="margin-top:1.5em;">Reset</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>

                        <div class="table-responsive" >
                            <table class="table table-striped mb-0" id="myTable">
                                <thead>
                                    <tr>
                                        <th nowrap><b>S. No.</b></th>
                                        <th nowrap><b>From ID</b></th>
                                        <th nowrap><b>Display Name</b></th>
                                        <th nowrap><b>Business Amount</b></th>
                                        <th nowrap><b>Commission Percentage</b></th>
                                        <th nowrap><b>Income Type</b></th>
                                        <th nowrap><b>Closing Date</b></th>
                                        <th nowrap><b>Amount</b></th>
                                    </tr>

                                </thead>
                                <tbody>
                                    @{

                                        decimal total = 0;
                                    }
                                    @if (Model != null)
                                    {
                                        int SNo = 0;
                                        foreach (var item in Model.AdminIncomeDetailsList)
                                        {
                                            <tr>
                                                <td data-title="#SN:">@(SNo = SNo + 1)</td>
                                                <td data-title="LoginId:">@item.LoginID</td>
                                                <td data-title="DisplayName:">@item.DisplayName</td>
                                                <td data-title="DisplayName:">@item.BusinessAmount</td>
                                                <td data-title="DisplayName:">@item.CommissionPercentage</td>
                                                <td data-title="PlanName:">@item.PlanName</td>
                                                <td data-title="ClosingDate:">@item.ClosingDate</td>
                                                <td data-title="NetAmount:">@item.NetAmount</td>
                                            </tr>
                                            total = total + Math.Round(decimal.Parse(item.NetAmount));
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="3">No Record Found..</td>
                                        </tr>
                                    }
                                </tbody>

                            </table>
                        </div>
                        <footer class="card-footer bg-white p-2">
                            <div class="d-md-flex align-items-center justify-content-between">
                                @if (Model != null)
                                {
                                    if (Model.Pager != null)
                                    {
                                        if (Model.Pager.EndPage > 1)
                                        {
                                            <div> <small class="text-muted inline">showing @Model.AdminIncomeDetailsList.Count  of @Model.Pager.TotalItems items</small> </div>
                                            <div>
                                                <ul class="pagination pagination-sm m-t-none m-b-none">
                                                    @if (Model.Pager.CurrentPage > 1)
                                                    {
                                                        <li class="page-item">
                                                            <a class="page-link" href="/Admin/PlanIncome/IncomeDetails?PlanId=@ViewBag.PlanId">First</a>
                                                        </li>
                                                        <li class="page-item">
                                                            <a class="page-link" href="/Admin/PlanIncome/IncomeDetails?page=@(Model.Pager.CurrentPage - 1)&PlanId=@ViewBag.PlanId">Previous</a>
                                                        </li>
                                                    }
                                                    @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                                                    {
                                                        <li class="page-item @(page == Model.Pager.CurrentPage ? "active" : "")">
                                                            <a class="page-link" href="/Admin/PlanIncome/IncomeDetails?page=@page&PlanId=@ViewBag.PlanId">@page</a>
                                                        </li>
                                                    }
                                                    @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                                                    {
                                                        <li class="page-item">
                                                            <a class="page-link" href="/Admin/PlanIncome/IncomeDetails?page=@(Model.Pager.CurrentPage + 1)&PlanId=@ViewBag.PlanId">Next</a>
                                                        </li>
                                                        <li class="page-item">
                                                            <a class="page-link" href="/Admin/PlanIncome/IncomeDetails?page=@(Model.Pager.TotalPages)&PlanId=@ViewBag.PlanId">Last</a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        }
                                    }
                                }
                            </div>
                        </footer>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- container-fluid -->
<script>
    

    function btnpdf() {        
        var col = [0]; // coloms to remove

        var tbl = $('#myTable').clone();
        var tablenew = tbl.get(0);

        for (var c = 0; c < col.length; c++) {
            for (var i = 0; i < tablenew.rows.length; i++) {

                var tableRow = tablenew.rows[i];

                for (var j = 0; j < tableRow.cells.length; j++) {
                    if (j == col[c]) {
                        tableRow.cells[j].remove();

                    }
                }
            }
        }


        var table1 =
            tableToJson(tbl.get(0)),
            cellWidth = 35,
            rowCount = 0,
            cellContents,
            leftMargin = 2,
            topMargin = 12,
            topMarginTable = 55,
            headerRowHeight = 13,
            rowHeight = 9,

            l = {
                orientation: 'l',
                unit: 'mm',
                format: 'a4',
                compress: true,
                fontSize: 8,
                lineHeight: 1,
                autoSize: false,
                printHeaders: true
            };
        var doc = new jsPDF(l, '', '', '');
        doc.page = 1; // use this as a counter.

        function footer() {
            doc.text(150, 285, 'page ' + doc.page); //print number bottom right

            doc.page++;
        };

        doc.setProperties({
            title: 'Self Income Report',
            subject: 'This is the subject',
            author: 'author',
            keywords: 'generated, javascript, web 2.0, ajax',
            creator: 'author'
        });

        doc.cellInitialize();

        $.each(table1, function (i, row) {

            rowCount++;

            $.each(row, function (j, cellContent) {

                if (rowCount == 1) {
                    doc.margins = 1;
                    doc.setFont("helvetica");
                    doc.setFontType("bold");
                    doc.setFontSize(9);

                    doc.cell(leftMargin, topMargin, cellWidth, headerRowHeight, cellContent, i)
                }
                else if (rowCount == 2) {
                    doc.margins = 1;
                    doc.setFont("times");
                    doc.setFontType("Times New Roman");  // or for normal font type use ------ doc.setFontType("normal");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);
                }
                else {

                    doc.margins = 1;
                    doc.setFont("courier ");
                    doc.setFontType("Times New Roman ");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);  // 1st=left margin    2nd parameter=top margin,     3rd=row cell width      4th=Row height
                }
            })
        })

        doc.text(150, 285, 'page ' + doc.page); //print number bottom right
        doc.setFontSize(25);
        doc.setFillColor('#DCDCDC');
        doc.rect(1, 0, 400, 10, "F");
        doc.setTextColor(0, 0, 0);
        doc.text(110, 8, "Self Income Report");
        doc.page++;
        doc.save('SelfIncomeReport.pdf');

    }


    function tableToJson(table) {
        var data = [];

        // first row needs to be headers
        var headers = [];
        for (var i = 0; i < table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
        }


        // go through cells
        for (var i = 0; i < table.rows.length; i++) {

            var tableRow = table.rows[i];
            var rowData = {};

            for (var j = 0; j < tableRow.cells.length; j++) {

                rowData[headers[j]] = tableRow.cells[j].textContent.trim() == "" ? "-" : tableRow.cells[j].textContent.trim();

            }

            data.push(rowData);
        }

        return data;
    }

    // createPDF--------------
    function createPDF() {
        var sTable = document.getElementById('DepartmentTable').innerHTML;

        var style = "<style>";
        style = style + "table {width: 100%;font: 17px Calibri;}";
        style = style + "table, th, td {border: solid 1px #DDD; border-collapse: collapse;";
        style = style + "padding: 2px 3px;text-align: center;}";
        style = style + "</style>";

        // CREATE A WINDOW OBJECT.
        var win = window.open('', '', 'height=700,width=700');

        win.document.write('<html><head>');
        win.document.write('<title>Self Income Report</title>');   // <title> FOR PDF HEADER.
        win.document.write(style);          // ADD STYLE INSIDE THE HEAD TAG.
        win.document.write('</head>');
        win.document.write('<body>');
        win.document.write(sTable);         // THE TABLE CONTENTS INSIDE THE BODY TAG.
        win.document.write('</body></html>');

        win.document.close(); // CLOSE THE CURRENT WINDOW.

        win.print();    // PRINT THE CONTENTS.
    }


</script>