@using LifeOne.Models
@model LifeOne.Models.AdminManagement.AEntity.FormPermissionModel
@{
    ViewBag.Title = "SetPermission";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="container-fluid">
    <div class="row page-titles">
        <div class="ptitle">
            <h4 class="mb-1 mt-0">Set Permission</h4>
            @*<nav aria-label="breadcrumb" class="float-left mt-1">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Admin-Dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="#">User Permission</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Set Permission </li>
                </ol>
            </nav>*@
        </div>
    </div>

    <div id="no-more-tables">
        <div id="no-more-tables">
            <div class="row">
                <div class="col-lg-12">
                    <div class="box">
                        <div class="box-body">
                            <div>
                                <div class="box-body" id="dvInitialInfo">
                                    <div class="form-group">
                                        <div class="row">
                                           
                                            <div class="col-md-6">
                                                <label for="User">User<span class="text-danger">*</span></label>
                                                <div class="form-group">
                                                    @if (Model != null && Model.FK_RoleId != null)
                                                    {
                                                        @Html.DropDownListFor(M => M.FK_UserId, new SelectList(ViewBag.ddlUsers, "Value", "Text"), new { @class = "form-control", @id = "FK_UserId", @placeholder = "Select User", @style = "padding:.4rem 1rem", @disabled = "disabled" })
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(M => M.FK_UserId, new SelectList(ViewBag.ddlUsers, "Value", "Text"), new { @class = "form-control", @id = "FK_UserId", @placeholder = "Select User", @style = "padding:.4rem 1rem" })
                                                    }
                                                </div>
                                            </div>

                                            
                                            <div class="col-md-6">
                                                <label for="Roles">Roles<span class="text-danger">*</span></label>
                                                <div class="form-group">
                                                    @if (Model != null && Model.FK_RoleId != null)
                                                    {
                                                        @Html.DropDownListFor(M => M.FK_RoleId, new SelectList(ViewBag.ddlRoles, "Value", "Text"), new { @class = "form-control", @id = "FK_RoleId", @placeholder = "Select Roles", @style = "padding:.4rem 1rem", @disabled = "disabled" })
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(M => M.FK_RoleId, new SelectList(ViewBag.ddlRoles, "Value", "Text"), new { @class = "form-control", @id = "FK_RoleId", @placeholder = "Select Roles", @style = "padding:.4rem 1rem" })
                                                    }
                                                </div>
                                            </div>


                                            <div class="col-md-12">

                                                @if (Model == null)
                                                {
                                                    <input type="button" style="margin-top:20px;" class="btn btn-primary" name="GetRole" value="Save" id="GetRole" />
                                                }



                                            </div>
                                            @if (Model != null)
                                            {
                                        
                                            <div class="col-md-12" id="tblFormPermission">
                                                @{Html.RenderAction("GetPermissionTblList", new { userId = Model.FK_UserId });}

                                            </div>
                                       
                                            }
                                        </div>
                                        <div class="card-action" style="@(Model!=null && Model.FK_RoleId !=null ? "":"display:none;" ) ">
                                            @if (Model != null)
                                            {
                                                if (Model.FK_RoleId != null)
                                                {
                                                    <input type="submit" class="btn btn-success" name="Update" value="Update" id="Update" />
                                                    <a href="javascript:void(0)" onclick="history.go(0)" class="btn btn-danger">Cancel</a>
                                                }
                                            }
                                            @Html.HiddenFor(M => M.FK_RoleId)
                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>









<script>

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function validate() {
        var FormType = $('#FormName').val();
        if (FormType == "") {
            alert("Please Enter Form Name!");
            $('#FormType').focus();
            return false;
        }
        else {
            return true;
        }
    }
</script>















<script src="~/Content/assests/js/QcrmLib.js"></script>
<script>
    var mdl = [];

    function validate() {
        if ($('#FK_UserId').val() == null && $('#FK_UserId').val() == undefined) {
            alert("Please select User");
            return false;
        }
        else if ($('#FK_RoleId').val() == null && $('#FK_RoleId').val() == undefined) {
            alert("Please select Role");
            return false;
        }
        return true;
    }
    $("#GetRole").click(function () {

        if (validate()) {
            $.ajax({
                type: 'post',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                traditional: true,
                url: '/Admin/userpermission/SetPermissionJsonInsert',
                data: JSON.stringify({ "roleId": $("#FK_RoleId").val(), "userId": $("#FK_UserId").val() }),
                success: function (data) {
                    debugger
                    if (data.code == "1") {
                        alert(data.msg);
                        location.href = "/Set-Permission-List";
                        return false;
                    }
                    else {
                        alert(data.msg);
                        return false;
                    }
                },
                error: function (data) {

                }
            });
        }
    });

    $("#Update").click(function (e) {
        debugger
        if (validate()) {
            $("#tblSetPermission tbody tr[data-checked=checked]").each(function (index, elm) {
                mdl.push({
                    PK_PermissionId: $(elm).find("input[name=PK_PermissionId]").val(),
                    FK_RoleId: $("#FK_RoleId").val(),
                    FK_UserId: $("#FK_UserId").val(),
                    FK_FormTypeId: $(elm).find("input[name=FK_FormTypeId]").val(),
                    FK_FormId: $(elm).find("input[name=FK_FormMasterId]").val(),
                    FormView: $(elm).find("input[name=FormView]").prop("checked"),
                    FormSave: $(elm).find("input[name=FormSave]").prop("checked"),
                    FormUpdate: $(elm).find("input[name=FormUpdate]").prop("checked"),
                    FormDelete: $(elm).find("input[name=FormDelete]").prop("checked"),
                });
            });
            var obj = {
                FormPermissionList: mdl,
                FK_RoleId: $("#FK_RoleId").val(),
                FK_UserId: $("#FK_UserId").val()
            };
            $.ajax({
                type: 'post',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                traditional: true,
                url: '/Admin/userpermission/SetPermissionJsonUpdate',
                data: JSON.stringify({ "roles": obj }),
                success: function (data) {
                    if (data.code == "1") {
                        alert(data.msg);
                        location.href = "/Set-Permission-List";
                        return false;
                    }
                    else {
                        alert(data.msg);
                        return false;
                    }
                },
                error: function (data) {

                }
            });
        }
    });
    $("tbody input:checkbox").change(function (elm) {
        $(this).parents("tr").attr("data-checked", "checked");

    });

    $("#chkSelectAllView,#chkSelectAllSave,#chkSelectAllUpdate,#chkSelectAllDelete").change(function () {
        var chkVal = $(this).prop("checked");
        var targetChk = $(this).data("chktype");
        $("input[name=" + targetChk + "]").prop("checked", chkVal);
        $("tbody tr").attr("data-checked", "checked");
    });

</script>

<script>
    $("#tblSetPermission").DataTable({
        "pageLength": 100,
        'columnDefs': [{
            'targets': [, 3, 4, 5, 6], /* column index */
            'orderable': false, /* true or false */
        }]
    });
</script>


