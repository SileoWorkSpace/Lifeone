@using LifeOne.Models.Manager
@model LifeOne.Models.FranchiseManagement.FEntity.MOrder
@{
    ViewBag.Title = "ViewFranchiseeSupplyOrderStatus";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .modal-footer {
        background: white;
        width: 100%;
    }

    .modal-body {
        position: relative;
        padding: 5px;
    }
</style>
@*@using (Html.BeginForm("ViewFranchiseSupplyOrderStatus", "Admin", FormMethod.Get)*@

<link href="~/Content/dist/css/sweetalert.css" rel="stylesheet" />
@{
    string msg = (string)TempData["msg"];
    string code = Convert.ToString(TempData["code"]);
    if (msg != null)
    {
        if (code.Equals("1"))
        {
            <div class="alert alert-success m-t-30" id="divsuccess">
                <i class="mdi mdi-checkbox-multiple-marked-outline"></i> <strong>Success!</strong> @msg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">×</span> </button>
            </div>

        }
        else
        {
            <div class="alert alert-success m-t-30" id="divUpdate">
                <i class="mdi mdi-checkbox-multiple-marked-outline"></i>  <strong>Error!</strong> @msg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">×</span> </button>
            </div>




        }
    }

}
<div class="container-fluid">
    <div class="row page-titles">
        <div class="ptitle">
            <h4 class="mb-1 mt-0">Repurchase Details</h4>
            <nav aria-label="breadcrumb" class="float-left mt-1">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Admin-Dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="#">Franchisee</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Ordered List</li>
                </ol>
            </nav>
        </div>
        <div class="pbutton">
            <div class="right text-right">
                <span>
                    <a href="#" onclick="fCallPaging(1,1)" data-toggle="tooltip" data-placement="top" title="Download Excel" class="btn btn-success btn-rounded btngreen"><i class="fa fa-file-excel-o"></i></a>
                </span>
                <span>
                    <button type="button" class="btn btn-success btn-rounded btnPdf" id="btnpdf" data-toggle="tooltip" data-placement="top" title="Download PDF"><i class="fa fa-file-pdf-o"></i></button>
                </span>
            </div>
        </div>
    </div>
    @using (Html.BeginForm("ViewFranchiseSupplyOrderStatus", "Admin", FormMethod.Post, new { @style = "height:0;" }))

    {
        <div class="row">

            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        @*@using (Html.BeginForm((String)ViewBag.IsValue, "Admin", FormMethod.Post, new { id = "frmAccount", enctype = "multipart/form-data", Area = "Admin" }))*@


                        <div class="row">
                            <div class="col-md-12 navbar-custom pull-left" style="position:relative">


                                <div class="row">


                                    <div class="col-md-2" style="position:relative">
                                        <div class="form-group" style="padding-left: 10px;">
                                            <label>Franchisee</label>
                                            @Html.HiddenFor(m => m.Page)
                                            @Html.HiddenFor(m => m.IsExport)
                                            @Html.DropDownListFor(m => m.PKFranchiseRegistrationId, new SelectList(ViewBag.Franchise, "Value", "Text"), new { @class = "form-control" })



                                        </div>
                                    </div>

                                    <div class="col-md-2" style="position:relative">
                                        <div class="form-group">
                                            <label>Login Id</label>
                                            @Html.TextBoxFor(m => m.LoginID, new { @class = "form-control", @placeholder = "Enter Login Id" })



                                        </div>
                                    </div>
                                    <div class="col-md-2" style="position:relative">
                                        <div class="form-group label-floating is-empty">
                                            <label class="form-control-placeholder" for="name">Payment Mode</label>
                                            <select id="PayMode" name="PayMode" class="form-control" value="@ViewBag.PaymentMode">
                                                <option value="">Select</option>
                                                <option value="Cash">Cash</option>
                                                <option value="Cheque">Cheque</option>
                                                <option value="IMPS">IMPS</option>
                                                <option value="NEFT">NEFT</option>
                                                <option value="RTGS">RTGS</option>
                                                <option value="Free">Free</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-2" style="position:relative">
                                        <div class="form-group">
                                            <label>From Date</label>
                                            <div id="Datetime" class="input-group date " data-date-format="dd-mm-yyyy">
                                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control", @name = "FromDate", @type = "date" })
                                                @*<input type="date" class="form-control" name="FromDate" id="FromDate" ng-model="FromDateModel" />*@
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-2" style="position:relative">
                                        <div class="form-group">
                                            <label>To Date</label>
                                            <div id="Datetime" class="input-group date " data-date-format="dd-mm-yyyy">
                                                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control", @name = "ToDate", @type = "date" })
                                                @*<input type="date" class="form-control" name="ToDate" ng-model="ToDateModel" />*@
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-2" style="position:relative">
                                        <div class="form-group">
                                            <label></label>
                                            <input type="submit" class="btn btn-success " style="margin-top:1.7em;" value="Submit" onclick="fCallPaging(1,0)">
                                            <input type="submit" class="btn btn-success " style="margin-top:1.5em; display:none;" value="Submit" id="BtnSearch">
                                            @*<input type="submit" class="btn btn-secondary" onClick="window.location.reload();" style="margin-top:-0.5em;" value="Reset">*@
                                            <input type="submit" class="btn btn-secondary" onClick="fclaer();" style="margin-top:1.7em;" value="Reset">
                                        </div>
                                    </div>
                                </div>


                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-12 navbar-custom pull-left" style="position:relative">
                                <div class="col-md-3"></div>





                            </div>
                        </div>

                        <div class="table-responsive" style="height: 462px !important;">
                            <table class="table table-striped mb-0" id="tblBillingOrdered">
                                <thead>
                                    <tr>
                                        <th>#Sn.</th>
                                        <th>Order No</th>
                                        <th>Direct Seller</th>
                                        <th>Login Id</th>
                                        <th>Date</th>
                                        @*<tb>User Type</b></th>*@
                                        <th>Payment Type</th>
                                        <th>Item Qty.</th>
                                        <th>BV</th>
                                        <th>Order Amt.(₹)</th>
                                        <th>Discount Amt.(₹)</th>
                                        <th>Final Amt.(₹)</th>
                                        @*<th>Order Type</th>*@

                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.LstOrder != null && Model.LstOrder.Count > 0)
                                    {
                                        int i = 0;
                                        int page = Model.LstOrder[0].Page ?? 0;
                                        page = (page - 1);


                                        i = ((page) * (Model.LstOrder[0].Size));
                                        foreach (var item in Model.LstOrder)
                                        {
                                            <tr>
                                                <td align="left">@(i = i + 1)</td>
                                                <td align="left"><span><a href="#" style="text-decoration:underline" data-toggle="modal" data-target="#myModal" onclick="ShowItem(@item.PK_RId)">@item.OrderNo</a></span></td>
                                                <td align="left"><span>@item.SupplyToName</span></td>
                                                <td align="left"><span>@item.LoginID</span></td>
                                                <td align="left"><span>@item.ApproveDate</span></td>
                                                @*<td align="left"><span>@item.UserType</span></td>*@
                                                <td align="left"><span>@item.PaymentType</span></td>
                                                <td align="left"><span>@item.ItemQty</span></td>
                                                <td align="left"><span>@item.PointValue</span></td>
                                                <td align="left"><span>@(Convert.ToDecimal(item.Amount) + item.DiscountAmt)</span></td>
                                                <td align="left"><span>@item.DiscountAmt</span></td>
                                                <td align="left"><span>@((Convert.ToDecimal(item.Amount) + item.DiscountAmt) - item.DiscountAmt)</span></td>

                                                @*<td align="left"><span>Box</span></td>*@

                                                <td>
                                                    @if (@item.IsShipped == 1)
                                                    {

                                                        <button type="button" value="View payment" class="btn-xs btn btn-default" onclick="EditDeliveryInformation(@item.PK_RId)"><i class="fa fa-truck text-success" aria-hidden="true"></i></button>

                                                    }
                                                    else
                                                    {
                                                        <button type="button" value="View payment" class="btn-xs btn btn-default" onclick="AddDeliveryInformation(@item.PK_RId)"><i class="fa fa-truck text-success" aria-hidden="true"></i></button>
                                                    }

                                                    <a href="/Admin/Admin/FranchiseCustomerTaxInvoice?OrderId=@item.PK_RId" target="_blank" class="btn-sm btn  btn-info " title="View Invoice"><i class="fa fa-file"></i></a>

                                                    @*<a href="/Admin/Admin/DeleteCustomerOrder?OrderNo=@item.OrderNo" onclick="return confirm('Are you sure to delete this Order No : '+@item.OrderNo+'?')" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></a>*@

                                                    <a href="#" onclick="return fDeleteFranciseOrder(@item.OrderNo)" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></a>


                                                </td>
                                            </tr>
                                        }
                                        <tr>
                                            <td align="left" colspan="7">Total</td>

                                            <td align="left"><span>@Model.LstOrder[0].TotalPV.ToString()</span></td>
                                            <td align="left"><span>&nbsp;</span></td>
                                            <td align="left"><span>&nbsp;</span></td>

                                            <td align="left"><span>@Model.LstOrder[0].TotalAmt</span></td>


                                            <td>&nbsp;</td>
                                        </tr>
                                    }
                                    else
                                    {
                                        @*<tr colspan="11">
                                                <td>No Record Found..</td>
                                            </tr>*@
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <footer class="card-footer bg-white p-2">
                        <div class="d-md-flex align-items-center justify-content-between">

                            @if (Model != null)
                            {
                                if (Model.Pager != null)
                                {
                                    if (Model.Pager.EndPage > 1)
                                    {
                                        <div> <small class="text-muted inline">showing @Model.LstOrder.Count  of @Model.Pager.TotalItems items</small> </div>
                                        <div>
                                            <ul class="pagination pagination-sm m-t-none m-b-none">
                                                @if (Model.Pager.CurrentPage > 1)
                                                {
                                                    <li class="page-item">
                                                        <a class="page-link" onclick="fCallPaging(1,0)" href="#">First</a>

                                                    </li>
                                                    <li class="page-item">

                                                        <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage - 1),0)" href="#">Previous</a>
                                                    </li>
                                                }
                                                @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                                                {
                                                    <li class="page-item @(page == Model.Pager.CurrentPage ? " active" : "" )">


                                                        <span><a class="page-link" onclick="fCallPaging(@page,0)" href="#">@page</a></span>
                                                    </li>
                                                }
                                                @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                                                {
                                                    <li class="page-item">

                                                        <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage + 1),0)" href="#">Next</a>

                                                    </li>
                                                    <li class="page-item">

                                                        <a class="page-link" onclick="fCallPaging(@(Model.Pager.TotalPages),0)" href="#">Last</a>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                }

                            }

                        </div>
                    </footer>
                </div>
            </div>
        
        </div>
    }
    </div>



<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Ordered Details</h4>
            </div>
            <div class="modal-body">
                @*<div id="CustomMessages1"></div>*@
                <div class="row">
                    <div class="col-lg-12">
                        <div class="table-responsive" >
                            <table id="Productdetails" class="table table-striped mb-0">
                                <thead>
                                    <tr>
                                        <th>Product&nbsp;Type</th>
                                        <th>Product&nbsp;Name</th>
                                        @*<th>Req.&nbsp;Qty</th>*@
                                        <th>Total&nbsp;Qty</th>
                                        <th>BV</th>
                                        <th>Total BV</th>
                                        <th>Product&nbsp;Amt</th>

                                        <th>Final&nbsp;Amt</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>                                        
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<button style="display:none" type="button" class="btn btn-info btn-lg hide" id="btnshowpopupdelivery" data-toggle="modal" data-target="#myModaldelivery">Click To View Particular Order</button>

<div id="myModaldelivery" class="modal fade">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            @*<div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"> Add/Update Shipping Information</h4>
                </div>*@

            <div class="row">
                <div class="col-md-9">
                    @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                    <h4 class="modal-header text-left"> Add/Update Shipping Information</h4>
                </div>

            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-sm-4">
                        <label>Doc No</label>
                        <input name="txtDocNo" type="text" id="txtDocNo" class="form-control" onkeypress="return isNumberKey(event)">

                    </div>
                    <div class="col-sm-4">
                        <label>Doc Date</label>
                        <input name="txtDocDate" type="date" id="txtDocDate" class="form-control datepicker-all">

                    </div>
                    <div class="col-sm-4">
                        <label>No. of Carton</label>
                        <input name="txtNoofCarton" type="text" id="txtNoofCarton" maxlength="6" class="form-control" onkeypress="return isNumberKey(event)">

                    </div>
                </div>

                <div class="row">

                    <div class="col-sm-4">
                        <label>Vehical No</label>
                        <input name="txtVehicalNo" type="text" id="txtVehicalNo" class="form-control" onkeypress="return isNumberKey(event)">

                    </div>

                    <div class="col-sm-4">
                        <label>PersonName</label>
                        <input name="txtPersonName" type="text" id="txtPersonName" class="form-control">

                    </div>
                    <div class="col-sm-4">
                        <label>MobileNo</label>
                        <input name="txtMobileNo" type="text" maxlength="10" id="txtMobileNo" class="form-control" onkeypress="return isNumberKey(event)" />


                        <span id="numberText"></span>
                    </div>
                </div>

                <div class="clearfix"></div>
                <div class="row">
                    <div class="col-sm-12">

                        <label>Delivery Address</label>
                        <textarea name="txtDeliAdd" rows="3" cols="100" id="txtDeliAdd" class="form-control"></textarea>

                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <label>State</label>
                        <input name="txtDelState" type="text" id="txtDelState" class="form-control">

                    </div>
                    <div class="col-sm-4">
                        <label>City</label>
                        <input name="txtDelCity" type="text" id="txtDelCity" class="form-control">

                    </div>
                    <div class="col-sm-4">
                        <label>Pin Code</label>
                        <input name="txtDelPinCode" type="text" maxlength="6" id="txtDelPinCode" class="form-control" onkeypress="return isNumberKey(event)">

                    </div>
                </div>


                <div class="row">

                    <div class="col-sm-4">
                        <label>Mode Of Transport</label>
                        <select name="ddlModeOfTransport" id="ddlModeOfTransport" class="form-control">
                            <option value="0">Select</option>
                            <option value="Road">Road</option>
                            <option value="Flight">Flight</option>
                            <option value="Train">Train</option>
                            <option value="Courier">Courier</option>

                        </select>

                    </div>

                    <div class="col-sm-4">
                        <label>Courier Name</label>
                        <input name="txtCourierName" type="text" id="txtCourierName" class="form-control">

                    </div>
                    <div class="col-sm-4">
                        <label>Courier Ref. No</label>
                        <input name="txtRefNo" type="text" id="txtRefNo" class="form-control" onkeypress="return isNumberKey(event)">

                    </div>
                </div>


                <div class="row">
                    <div class="col-sm-4">
                        <label>Freight Charges</label>
                        <input name="txtFreightCharges" type="text" id="txtFreightCharges" class="form-control" onkeypress="return isNumberKey(event)">

                    </div>
                    <div class="col-sm-4">
                        <label>Discount</label>
                        <input name="txtDiscount" type="text" id="txtDiscount" class="form-control" onkeypress="return isNumberKey(event)">

                    </div>
                    <div class="col-sm-4">
                        <label>Electronic Ref No</label>
                        <input name="txtElectronicRefNo" type="text" id="txtElectronicRefNo" class="form-control" onkeypress="return isNumberKey(event)">

                    </div>

                </div>



            </div>
            <div class="modal-footer pull-right">
                <button type="button" class="btn btn-primary" onclick="SaveShippingInformation()">Submit</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<span id="spanRequetId" class="hide" style="display:none">0</span>
}
<script>
    function fCallPaging(val, IsExport) {

        if (val == undefined || val == NaN || val == null || val == "" || val == 0) {
            val = 1;
        }
        $("#IsExport").val(IsExport);
        $("#Page").val(val);
        $('#BtnSearch').trigger('click');

    }

    function fDeleteFranciseOrder(OrderNo) {
        var checkstr = confirm('are you sure you want to delete this?');
        if (checkstr == true) {
            $.ajax({
                url: "/Admin/Admin/DeleteCustomerOrder",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ OrderNo: OrderNo }),
                contentType: "application/json",


                success: function (result) {
                    debugger
                    if (result.Status != undefined && result.Status != '' && result.Status == '1') {
                        var PIndx = $("#Page").val();

                        fCallPaging(PIndx);
                    }
                    else {

                    }
                },
                error: function (err) {
                    alert(err.statusText);
                    return false;
                }
            });
        } else {
            return false;
        }
        //'Are you sure to delete this Order No : '


    }

    function ShowItem(RequestId) {
        debugger;
        var ReqId = RequestId;
        $.ajax({
            url: "/Franchise/FranchiseCustomerOrder/ViewSupplyItemDetail",
            type: "POST",
            dataType: 'json',
            data: JSON.stringify({ RequestId: ReqId }),
            contentType: "application/json",
            success: function (result) {

                if (result != undefined && result != '') {

                    $("#Productdetails tbody").html('');

                    var str = "";
                    var TotalProdAmt = 0;
                    var TotalReqQty = 0;
                    var FinalAmt = 0;
                    var PointValue = 0;
                    var TotalBV = 0;
                    var NetBVPoint = 0;
                    var TotalReqBoxQty = 0;
                    for (var i = 0; i < result.length; i++) {

                        TotalBV = 0;
                        TotalBV = parseFloat(parseInt(result[i].PointValue) * parseInt(result[i].ReqQnty)).toFixed(2);
                        NetBVPoint = parseFloat(parseFloat(NetBVPoint) + parseFloat(TotalBV))
                        if (result[i].IsBox == false) {
                            PointValue = PointValue + parseInt(result[i].PointValue);
                            TotalProdAmt = parseInt(TotalProdAmt) + parseFloat(result[i].Amount);
                            TotalReqQty = parseInt(TotalReqQty) + parseFloat(result[i].ReqQnty);
                            //FinalAmt = parseInt(FinalAmt) + parseFloat(((result[i].Amount) * (result[i].ReqQnty) - result[i].DiscountAmt));
                            FinalAmt = parseInt(FinalAmt) + parseFloat(((result[i].Amount) * (result[i].ReqQnty)));
                            str += "<tr><td align='left' nowrap>" + result[i].ProductType + "</td><td align='left'>" + result[i].ProductName + "</td><td align='left'>" + result[i].ReqQnty + "</td><td align='left'>" + result[i].PointValue + "</td><td align='left'>" + TotalBV + "</td><td align='left'>" + result[i].Amount + "</td><td align='left'>" + (((result[i].Amount) * (result[i].ReqQnty))) + "</td></tr>";

                            //< td align = 'left' > " + (((result[i].Amount) * (result[i].ReqQnty)) - result[i].DiscountAmt) + "</td >
                        }
                        else {
                            PointValue = PointValue + parseInt(result[i].PointValue);
                            TotalProdAmt = parseInt(TotalProdAmt) + parseFloat(result[i].Amount);
                            TotalReqQty = parseInt(TotalReqQty) + parseFloat(result[i].ReqQnty);
                            TotalReqBoxQty = parseInt(TotalReqBoxQty) + parseFloat(result[i].ReqBoxQty);

                            FinalAmt = parseInt(FinalAmt) + parseFloat(((result[i].Amount) * (result[i].ReqQnty)));

                            //FinalAmt = parseInt(FinalAmt) + parseFloat(((result[i].Amount) * (result[i].ReqBoxQty) * (result[i].BoxQty) - result[i].DiscountAmt));

                            str += "<tr><td align='left' nowrap>" + result[i].ProductType + "</td><td align='left'>" + result[i].ProductName + "</td><td align='left'>" + result[i].ReqQnty + "</td><td align='left'>" + result[i].PointValue + "</td><td align='left'>" + TotalBV + "</td><td align='left'>" + result[i].Amount + "</td><td align='left'>" + ((result[i].Amount) * result[i].ReqQnty) + "</td></tr>";
                        }
                    }

                    str += "<tr><th colspan='2'>Total</th><th>" + TotalReqQty + "</th><th></th><th>" + parseFloat(NetBVPoint).toFixed(2) + "</th><th></th><th align='left'>" + parseFloat(FinalAmt) + "</th></tr>";

                    $("#Productdetails tbody").html(str);
                }
            },
            error: function (err) {
                showSnazzyErrorMessage1(err.statusText);
                return false;
            }
        });
    }

    //function ShowItem(RequestId) {
    //    var ReqId = RequestId;
    //    $.ajax({
    //        url: "/Franchise/FranchiseCustomerOrder/ViewSupplyItemDetail",
    //        type: "POST",
    //        dataType: 'json',
    //        data: JSON.stringify({ RequestId: ReqId }),
    //        contentType: "application/json",
    //        success: function (result) {

    //            if (result != undefined && result != '') {

    //                $("#Productdetails tbody").html('');

    //                var str = "";
    //                var TotalProdAmt = 0;
    //                var TotalReqQty = 0;
    //                var FinalAmt = 0;
    //                var PointValue = 0;
    //                for (var i = 0; i < result.length; i++) {
    //                    if (result[i].IsBox == false) {
    //                        PointValue = PointValue + parseInt(result[i].PointValue);
    //                        TotalProdAmt = parseInt(TotalProdAmt) + parseFloat(result[i].Amount);
    //                        TotalReqQty = parseInt(TotalReqQty) + parseFloat(result[i].ReqQnty);
    //                        FinalAmt = parseInt(FinalAmt) + parseFloat(((result[i].Amount) * (result[i].ReqQnty) - result[i].DiscountAmt));

    //                        str += "<tr><td align='left' nowrap>" + result[i].ProductType + "</td><td align='left'>" + result[i].ProductName + "</td><td align='left'>" + result[i].PointValue + "</td><td align='left'>" + result[i].Amount + "</td><td align='left'>--</td><td align='left'>" + result[i].ReqQnty + "</td><td align='left'>" + (((result[i].Amount) * (result[i].ReqQnty)) - result[i].DiscountAmt) + "</td></tr>";
    //                    }
    //                    else {
    //                        PointValue = PointValue + parseInt(result[i].PointValue);
    //                        TotalProdAmt = parseInt(TotalProdAmt) + parseFloat(result[i].Amount);
    //                        TotalReqQty = parseInt(TotalReqQty) + parseFloat(result[i].ReqQnty);
    //                        FinalAmt = parseInt(FinalAmt) + parseFloat(((result[i].Amount) * (result[i].ReqBoxQty) * (result[i].BoxQty) - result[i].DiscountAmt));

    //                        str += "<tr><td align='left' nowrap>" + result[i].ProductType + "</td><td align='left'>" + result[i].ProductName + "</td><td align='left'>" + result[i].PointValue + "</td><td align='left'>" + result[i].Amount + "</td><td align='left'>" + result[i].ReqBoxQty + "</td><td align='left'>" + result[i].ReqQnty + "</td><td align='left'>" + ((result[i].Amount) - result[i].DiscountAmt) + "</td></tr>";
    //                    }
    //                }

    //                str += "<tr><th colspan='2'>Total</th><th>" + PointValue + "</th><th>" + TotalProdAmt + "</th><th></th><th></th><th>" + TotalReqQty + "</th><th></th><th>" + FinalAmt + "</th></tr>";

    //                $("#Productdetails tbody").html(str);
    //            }
    //        },
    //        error: function (err) {
    //            showSnazzyErrorMessage1(err.statusText);
    //            return false;
    //        }
    //    });
    //}

    $('#btnpdf').click(function () {
        debugger;
        var col = [0,11]; // coloms to remove

        var tbl = $('#tblBillingOrdered').clone();
        $('.t').addClass('hide');
        var tablenew = tbl.get(0);

        for (var c = 0; c < col.length; c++) {
            for (var i = 0; i < tablenew.rows.length; i++) {

                var tableRow = tablenew.rows[i];

                for (var j = 0; j < tableRow.cells.length; j++) {
                    if (j == col[c]) {
                        tableRow.cells[j].remove();

                    }
                }
            }
        }


        var table1 =
            tableToJson(tbl.get(0)),
            cellWidth = 27,
            rowCount = 0,
            cellContents,
            leftMargin = 2,
            topMargin = 12,
            topMarginTable = 55,
            headerRowHeight = 13,
            rowHeight = 9,

            l = {
                orientation: 'l',
                unit: 'mm',
                format: 'a4',
                compress: true,
                fontSize: 8,
                lineHeight: 1,
                autoSize: false,
                printHeaders: true
            };
        var doc = new jsPDF(l, '', '', '');
        doc.page = 1; // use this as a counter.

        function footer() {
            doc.text(150, 285, 'page ' + doc.page); //print number bottom right

            doc.page++;
        };

        doc.setProperties({
            title: 'Direct Seller Orders',
            subject: 'This is the subject',
            author: 'author',
            keywords: 'generated, javascript, web 2.0, ajax',
            creator: 'author'
        });

        doc.cellInitialize();

        $.each(table1, function (i, row) {

            rowCount++;

            $.each(row, function (j, cellContent) {

                if (rowCount == 1) {
                    doc.margins = 1;
                    doc.setFont("helvetica");
                    doc.setFontType("bold");
                    doc.setFontSize(9);

                    doc.cell(leftMargin, topMargin, cellWidth, headerRowHeight, cellContent, i)
                }
                else if (rowCount == 2) {
                    doc.margins = 1;
                    doc.setFont("times");
                    doc.setFontType("Times New Roman");  // or for normal font type use ------ doc.setFontType("normal");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);
                }
                else {

                    doc.margins = 1;
                    doc.setFont("courier ");
                    doc.setFontType("Times New Roman ");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);  // 1st=left margin    2nd parameter=top margin,     3rd=row cell width      4th=Row height
                }
            })
        })

        doc.text(150, 285, 'page ' + doc.page); //print number bottom right
        doc.setFontSize(25);
        doc.setFillColor('#DCDCDC');
        doc.rect(1, 0, 400, 10, "F");
        doc.setTextColor(0, 0, 0);
        doc.text(110, 8, "Direct Seller Orders");
        doc.page++;
        doc.save('Direct Seller Orders.pdf');

    });

    function tableToJson(table) {
        var data = [];

        // first row needs to be headers
        var headers = [];
        for (var i = 0; i < table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
        }


        // go through cells
        for (var i = 0; i < table.rows.length; i++) {

            var tableRow = table.rows[i];
            var rowData = {};

            for (var j = 0; j < tableRow.cells.length; j++) {

                rowData[headers[j]] = tableRow.cells[j].textContent.trim() == "" ? "-" : tableRow.cells[j].textContent.trim();

            }

            data.push(rowData);
        }

        return data;
    }
    // createPDF--------------
    function createPDF() {
        var sTable = document.getElementById('tblBillingOrdered').innerHTML;

        var style = "<style>";
        style = style + "table {width: 100%;font: 17px Calibri;}";
        style = style + "table, th, td {border: solid 1px #DDD; border-collapse: collapse;";
        style = style + "padding: 2px 3px;text-align: center;}";
        style = style + "</style>";

        // CREATE A WINDOW OBJECT.
        var win = window.open('', '', 'height=700,width=700');

        win.document.write('<html><head>');
        win.document.write('<title>Direct Seller Orders</title>');   // <title> FOR PDF HEADER.
        win.document.write(style);          // ADD STYLE INSIDE THE HEAD TAG.
        win.document.write('</head>');
        win.document.write('<body>');
        win.document.write(sTable);         // THE TABLE CONTENTS INSIDE THE BODY TAG.
        win.document.write('</body></html>');

        win.document.close(); // CLOSE THE CURRENT WINDOW.

        win.print();    // PRINT THE CONTENTS.
    }

    //function fCallPaging(val) {
    //    if (val == undefined || val == NaN || val == null || val == "" || val == 0) {
    //        val = 1;
    //    }
    //    $("#Page").val(val);
    //    $('#BtnSearch').trigger('click');

    //}
    function fclaer() {
        $("#PKFranchiseRegistrationId").val(0);
        $("#Page").val(1);
        window.location.reload();
    }





    function fGetShippingDetails() {
        debugger;
        $.ajax({
            type: "GET",
            url: "/admin/FranchiseOrderRequest/GetShipingInfroamtion",
            data: { Pk_SupplierId: $('#Pk_RId').val() },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    $('#txtDocNo').val(response.DocNo);
                    $('#txtDocDate').val(response.DocDate);
                    $('#txtNoofCarton').val(response.NoofCarton);
                    $('#txtVehicalNo').val(response.VehicalNo);
                    $('#txtPersonName').val(response.PersonName);
                    $('#txtMobileNo').val(response.MobileNo);
                    $('#txtDeliAdd').val(response.DeliveryAddress);
                    $('#txtDelState').val(response.State);
                    $('#txtDelCity').val(response.City);
                    $('#txtDelPinCode').val(response.PinCode);
                    $('#ddlModeOfTransport').val(response.ModeOfTrip);
                    $('#txtCourierName').val(response.CourierName);
                    $('#txtRefNo').val(response.RefNo);
                    $('#txtFreightCharges').val(response.FreightCharge);
                    $('#txtDiscount').val(response.Discount);
                    $('#txtElectronicRefNo').val(response.ElectronicRefNo);


                }
                else {
                    alert("Something went wrong");
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

    function EditDeliveryInformation(RequestIdvalue) {

        $("#btnshowpopupdelivery").click();
        $("#spanRequetId").text(RequestIdvalue);

        $.ajax({
            type: "POST",
            url: "/Admin/FranchiseOrderRequest/GetEditFranchiseItemInformation",
            data: '{RequestId: "' + JSON.stringify(RequestIdvalue) + '"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (deliveryArr) {
                var i = 0;

                $("#txtDocNo").val(deliveryArr[i].DocNo);
                $("#txtDocDate").val(deliveryArr[i].DocDate);
                $("#txtNoofCarton").val(deliveryArr[i].NoOfCarton);
                $("#ddlModeOfTransport").val(deliveryArr[i].ModeOfTrip);
                $("#txtVehicalNo").val(deliveryArr[i].VehicalNo);

                $("#txtDeliAdd").val(deliveryArr[i].DeliveryAddress);
                $("#txtDelState").val(deliveryArr[i].State);
                $("#txtDelCity").val(deliveryArr[i].City);
                $("#txtDelPinCode").val(deliveryArr[i].PinCode);


                $("#txtCourierName").val(deliveryArr[i].CourierName);
                $("#txtFreightCharges").val(deliveryArr[i].FreightCharge);
                $("#txtDiscount").val(deliveryArr[i].Discount);


                $("#txtPersonName").val(deliveryArr[i].PersonName);
                $("#txtMobileNo").val(deliveryArr[i].MobileNo);
                $("#txtElectronicRefNo").val(deliveryArr[i].ElectronicRefNo);

                $("#txtRefNo").val(deliveryArr[i].RefNo);

            },
            error: function (response) {
                alert(response.d);
            }
        });
    }
    function AddDeliveryInformation(value) {

        $("#btnshowpopupdelivery").click();
        $("#spanRequetId").text(value);
        $("input[type='text']").val('');

    }

    function SaveShippingInformation() {

        if ($("#txtDocNo").val() == "") {
            $("#txtDocNo").focus();
            return false;
        }

        if ($("#txtDocDate").val() == "") {
            $("#txtDocDate").focus();
            return false;
        }


        if ($("#txtNoofCarton").val() == "") {
            $("#txtNoofCarton").focus();
            return false;
        }


        if ($("#ddlModeOfTransport").val() == "") {
            $("#ddlModeOfTransport").focus();
            return false;
        }

        if ($("#txtVehicalNo").val() == "") {
            $("#txtVehicalNo").focus();
            return false;
        }

        if ($("#txtDeliAdd").val() == "") {
            $("#txtDeliAdd").focus();
            return false;
        }

        if ($("#txtDelState").val() == "") {
            $("#txtDelState").focus();
            return false;
        }


        if ($("#txtDelCity").val() == "") {
            $("#txtDelCity").focus();
            return false;
        }


        if ($("#txtCourierName").val() == "") {
            $("#txtCourierName").focus();
            return false;
        }


        if ($("#txtRefNo").val() == "") {
            $("#txtRefNo").focus();
            return false;
        }

        var deliveryArr = {};
        deliveryArr.Fk_Rid = $("#spanRequetId").text();
        deliveryArr.IncoiceId = $("#spanInvoiceid").text();

        deliveryArr.DocNo = $("#txtDocNo").val();
        deliveryArr.DocDate = $("#txtDocDate").val();
        deliveryArr.NoOfCarton = $("#txtNoofCarton").val();
        deliveryArr.ModeOfTrip = $("#ddlModeOfTransport").val();
        deliveryArr.VehicalNo = $("#txtVehicalNo").val();
        deliveryArr.DeliveryAddress = $("#txtDeliAdd").val();
        deliveryArr.State = $("#txtDelState").val();
        deliveryArr.City = $("#txtDelCity").val();
        deliveryArr.PinCode = $("#txtDelPinCode").val();

            deliveryArr.CourierName = $("#txtCourierName").val();
            deliveryArr.RefNo = $("#txtRefNo").val();
            deliveryArr.FreightCharge = $("#txtFreightCharges").val();
            deliveryArr.Discount = $("#txtDiscount").val();
            deliveryArr.PersonName = $("#txtPersonName").val();
            deliveryArr.MobileNo = $("#txtMobileNo").val();
            deliveryArr.ElectronicRefNo = $("#txtElectronicRefNo").val();


            $.ajax({
            type: "POST",
            url: "/Admin/FranchiseOrderRequest/AddShipingInfroamtion",
            data: JSON.stringify({ _param: deliveryArr }),
            //  data: '{param: "' + JSON.stringify(deliveryArr) + '"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (response) {
                //  alert(response);
                alert("Shipping Details Saved Successfully.");
                window.location.reload();
            },
            error: function (response) {
                alert("failed");
            }
        });

    }
    function fEditShippingDetails() {



    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;
    }


   
    function fclaer() {
        $(".fclear").val('');
        $("#Page").val(1);
        $("#IsExport").val(0);
        window.location.reload();
    }

</script>

