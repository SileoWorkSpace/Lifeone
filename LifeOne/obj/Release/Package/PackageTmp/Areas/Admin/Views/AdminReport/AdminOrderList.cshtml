@model LifeOne.Models.AdminManagement.AEntity.OrderList



@{
    ViewBag.Title = "AdminOrderList";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.22/pdfmake.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>

<style>
    .search-box-content {
        display: none;
        padding: 0 15px;
    }

    .btn-default {
        color: black;
    }
    /*   @@media (min-width: 992px) {
        .modal-lg, .modal-xl {
            max-width: 989px;
        }
    }*/
    @@media (min-width: 992px) {
        .modal-lg, .modal-xl {
            max-width: 1258px
        }
    }

    .hide {
        display: none;
    }
</style>
<script type="text/javascript">

    $(document).ready(function () {

        $('#myTable').DataTable({
            "lengthMenu": [[50, 100, 200, 500, -1], [50, 100, 200, 500, "All"]],
        });
    });

</script>
<div class="container-fluid">

    <div class="row page-titles">
        <div class="ptitle">
            <h4 class="mb-1 mt-0">Ordered List</h4>
            @*<nav aria-label="breadcrumb" class="float-left">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Admin-Dashboard">Dashboard</a></li>
                        <li class="breadcrumb-item"><a href="#-">Reports</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Monthly Bonanza Reward</li>
                    </ol>
                </nav>*@
        </div>
        <div class="pbutton">
            <div class="right text-right">
                @*<span>
                        <a class="advance-search" title="Click here for search" data-toggle="tooltip" data-placement="bottom" href="#-">Search</a>
                    </span>*@
                <span>
                    <a href="#" class="btn btn-success btn-rounded btngreen" onclick="fCallPaging(1,1)"><i class="fa fa-file-excel-o" data-toggle="tooltip" data-placement="top" title="Download Excel"></i></a>
                    @*<button class="btn btn-success btn-rounded btnprint" onclick="printDiv('customers')" title="Print"><i class="fa fa-print"></i></button>*@
                    <button class="btn btn-success btn-rounded btnPdf" id="btnpdf" data-toggle="tooltip" data-placement="top" title="Download PDF"><i class="fa fa-file-pdf-o"></i></button>
                    @*<button class="btn btn-success btn-rounded btnprint" data-toggle="tooltip" data-placement="top" title="Print" onclick="printDiv('customers')"><i class="fa fa-print"></i></button>*@
                </span>

            </div>
        </div>
    </div>

    <div class="box">
        @using (Html.BeginForm("AdminOrderList", "AdminReport", FormMethod.Post))
        {
            <div class="box-body">

                <div class="row">
                    <div class="col-md-12">
                        <div class="alert alert-warning" style="color:#727272 !important">
                            <div class="row">
                                <div class="col-12 col-md-2">
                                    <div class="form-group">
                                        @Html.HiddenFor(m => m.Page)
                                        @Html.HiddenFor(m => m.IsExport)

                                        <label>Login Id</label>
                                        <input type="text" name="LoginID" id="LoginID" placeholder="Enter Login Id" class="form-control" value="@ViewBag.LoginId">
                                    </div>
                                </div>

                                <div class="col-12 col-md-2">
                                    <div class="form-group">
                                        <label>From Date</label>
                                        <input type="date" name="Fromdate" id="txtfromdate" placeholder="" class="form-control" value="@ViewBag.Fromdate">
                                    </div>
                                </div>
                                <div class="col-12 col-md-2">
                                    <div class="form-group">
                                        <label>To Date</label>
                                        <input type="date" name="Todate" id="txttodate" placeholder="" class="form-control" value="@ViewBag.Todate">
                                    </div>
                                </div>
                                <div class="col-12 col-md-2">
                                    <div class="form-group">
                                        <label style="display:block;"></label>
                                        <input type="submit" class="btn btn-success " style="margin-top:1.5em;" value="Search" onclick="fCallPaging(1,0)">
                                        <input type="submit" class="btn btn-success " style="margin-top:1.5em;display:none;" value="Search" id="BtnSearch">
                                        <input type="button" class="btn btn-secondary" onClick="window.location.reload();" style="margin-top:1.5em;" value="Reset">
                                    </div>
                                </div>
                                <div class="col-12 col-md-2">
                                </div>
                                @*<div class="col-12 col-md-2">
                                        <div class="form-group" style="margin-top:28px;">
                                            <a href="@Url.Action("ExportToExcelOrderList","AdminReport")" class="btn btn-success btn-rounded btngreen"><i class="fa fa-file-excel-o"></i></a>

                                        </div>
                                    </div>*@
                            </div>
                        </div>
                    </div>

                </div>

                <div class="table-responsive" id="customers">

                    <table id="myTable" class="table  table-hover">
                        <thead>
                            <tr>
                                <th>#Sn.</th>
                                <th>Order No.</th>
                                <th>Direct Seller / Id</th>
                                <th class="text-right">Total Amount</th>
                                <th class="text-right">Total Qty</th>
                                <th>Total DP</th>
                                <th>Total BV</th>
                                <th>Status</th>
                                <th style="min-width:130px;">Order Date</th>
                                <th>Remark</th>
                                @*<th>Repurchase|Upgrade</th>*@
                                <th style="min-width:130px;">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.orderList != null)
                            {
                                int Sno = 1;
                                foreach (var item in ViewBag.orderList as IEnumerable<LifeOne.Models.AdminManagement.AEntity.OrderList>)
                                {
                                    <tr>
                                        <td>@(Sno = Sno + 1)</td>
                                        <td>@item.OrderNo</td>
                                        <td>@item.Name @item.LoginId</td>
                                        <td>@item.TotalAmount</td>
                                        <td>@item.TotalQty</td>
                                        <td>@item.DP</td>
                                        <td>@item.BV</td>
                                        <td>@item.Status</td>
                                        <td>@item.CreationDate</td>
                                        <td>@item.Remark</td>
                                        @*<td>
                                                @if (@item.RepurchaseStatus == "Yes")
                                                {
                                                    <span class="badge badge-success">@item.RepurchaseStatus</span>
                                                }
                                                @if (@item.RepurchaseStatus == "No")
                                                {
                                                    <span class="badge badge-danger">@item.RepurchaseStatus</span>
                                                }

                                                |

                                                @if (@item.UpgradeStatus == "Yes")
                                                {
                                                    <span class="badge badge-success">@item.UpgradeStatus</span>
                                                }
                                                @if (@item.UpgradeStatus == "No")
                                                {
                                                    <span class="badge badge-danger">@item.UpgradeStatus</span>
                                                }


                                            </td>*@
                                        <td>
                                            <a href="javascript:void(0);" title="Delete Order" onclick="return DeleteOrder(@item.pk_orderid);"><i class="fa fa-trash" aria-hidden="true"></i></a>
                                            &nbsp;
                                            <a href="/Home/PrintInvoiceOld?OrderNo=@item.pk_orderid" target="_blank" title="Print Invoice"><i class="fa fa-print" aria-hidden="true"></i></a>
                                        </td>
                                    </tr>



                                }

                            }


                        </tbody>
                    </table>
                </div>
                <footer class="card-footer bg-white p-2">
                    <div class="d-md-flex align-items-center justify-content-between">

                        @if (Model != null)
                        {
                            if (Model.Pager != null)
                            {
                                if (Model.Pager.EndPage > 1)
                                {
                                    <div> <small class="text-muted inline">showing @Model.orderLists.Count of @Model.Pager.TotalItems items</small> </div>
                                    <div>
                                        <ul class="pagination pagination-sm m-t-none m-b-none">
                                            @if (Model.Pager.CurrentPage > 1)
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" onclick="fCallPaging(1,0)" href="#">First</a>

                                                </li>
                                                <li class="page-item">

                                                    <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage - 1),0)" href="#">Previous</a>
                                                </li>
                                            }
                                            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                                            {
                                                <li class="page-item @(page == Model.Pager.CurrentPage ? " active" : "" )">


                                                    <span><a class="page-link" onclick="fCallPaging(@page,0)" href="#">@page</a></span>
                                                </li>
                                            }
                                            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                                            {
                                                <li class="page-item">

                                                    <a class="page-link" onclick="fCallPaging(@(Model.Pager.CurrentPage + 1),0)" href="#">Next</a>

                                                </li>
                                                <li class="page-item">

                                                    <a class="page-link" onclick="fCallPaging(@(Model.Pager.TotalPages),0)" href="#">Last</a>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                }
                            }

                        }

                    </div>
                </footer>
            </div>
        }

        <!-- /.box-body -->
    </div>
</div>
<script type="text/javascript">
    function fCallPaging(val, IsExport) {

        if (val == undefined || val == NaN || val == null || val == "" || val == 0) {
            val = 1;
        }
        $("#IsExport").val(IsExport);
        $("#Page").val(val);
        $('#BtnSearch').trigger('click');

    }
    function printDiv(divName) {
        var printContents = document.getElementById(divName).innerHTML;
        var originalContents = document.body.innerHTML;
        document.body.innerHTML = printContents;
        window.print();
        document.body.innerHTML = originalContents;
    }

    function DeleteOrder(OrderNo) {

        if (confirm('Are sure Delete Order.?') == true) {

            $.ajax({

                url: '/Admin/AdminReport/DeleteOrder',
                data: { OrderNo: OrderNo },
                dataType: 'JSON',
                containtType: 'application/json;charset=utf-8',
                success: function (data) {
                    if (data.Code == "1") {

                        alert(data.Remark);
                        window.location.href = "/Admin-OrderList";
                    }
                    else {
                        alert(data.Remark);
                    }

                },
                error: function (error) { }

            });
        }


    }

    //Paging

    function fclaer() {
        $(".fclear").val('');
        $("#Page").val(1);
        $("#IsExport").val(0);
        window.location.reload();
    }


    //DownLoad PDF

    $('#btnpdf').click(function () {
        debugger;
        var col = [0,11]; // coloms to remove

        var tbl = $('#myTable').clone();
        var tablenew = tbl.get(0);

        for (var c = 0; c < col.length; c++) {
            for (var i = 0; i < tablenew.rows.length; i++) {

                var tableRow = tablenew.rows[i];

                for (var j = 0; j < tableRow.cells.length; j++) {
                    if (j == col[c]) {
                        tableRow.cells[j].remove();

                    }
                }
            }
        }


        var table1 =
            tableToJson(tbl.get(0)),
            cellWidth = 26,
            rowCount = 0,
            cellContents,
            leftMargin = 2,
            topMargin = 12,
            topMarginTable = 55,
            headerRowHeight = 13,
            rowHeight = 9,

            l = {
                orientation: 'l',
                unit: 'mm',
                format: 'a4',
                compress: true,
                fontSize: 8,
                lineHeight: 1,
                autoSize: false,
                printHeaders: true
            };
        var doc = new jsPDF(l, '', '', '');
        doc.page = 1; // use this as a counter.

        function footer() {
            doc.text(150, 285, 'page ' + doc.page); //print number bottom right

            doc.page++;
        };

        doc.setProperties({
            title: 'Ordered List',
            subject: 'This is the subject',
            author: 'author',
            keywords: 'generated, javascript, web 2.0, ajax',
            creator: 'author'
        });

        doc.cellInitialize();

        $.each(table1, function (i, row) {

            rowCount++;

            $.each(row, function (j, cellContent) {

                if (rowCount == 1) {
                    doc.margins = 1;
                    doc.setFont("helvetica");
                    doc.setFontType("bold");
                    doc.setFontSize(9);

                    doc.cell(leftMargin, topMargin, cellWidth, headerRowHeight, cellContent, i)
                }
                else if (rowCount == 2) {
                    doc.margins = 1;
                    doc.setFont("times");
                    doc.setFontType("Times New Roman");  // or for normal font type use ------ doc.setFontType("normal");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);
                }
                else {

                    doc.margins = 1;
                    doc.setFont("courier ");
                    doc.setFontType("Times New Roman ");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);  // 1st=left margin    2nd parameter=top margin,     3rd=row cell width      4th=Row height
                }
            })
        })

        doc.text(150, 285, 'page ' + doc.page); //print number bottom right
        doc.setFontSize(25);
        doc.setFillColor('#DCDCDC');
        doc.rect(1, 0, 400, 10, "F");
        doc.setTextColor(0, 0, 0);
        doc.text(110, 8, "Ordered List");
        doc.page++;
        doc.save('Ordered List.pdf');

    });

    function tableToJson(table) {
        var data = [];

        // first row needs to be headers
        var headers = [];
        for (var i = 0; i < table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
        }


        // go through cells
        for (var i = 0; i < table.rows.length; i++) {

            var tableRow = table.rows[i];
            var rowData = {};

            for (var j = 0; j < tableRow.cells.length; j++) {

                rowData[headers[j]] = tableRow.cells[j].textContent.trim() == "" ? "-" : tableRow.cells[j].textContent.trim();

            }

            data.push(rowData);
        }

        return data;
    }

    // createPDF--------------
    function createPDF() {
        var sTable = document.getElementById('myTable').innerHTML;

        var style = "<style>";
        style = style + "table {width: 100%;font: 17px Calibri;}";
        style = style + "table, th, td {border: solid 1px #DDD; border-collapse: collapse;";
        style = style + "padding: 2px 3px;text-align: center;}";
        style = style + "</style>";

        // CREATE A WINDOW OBJECT.
        var win = window.open('', '', 'height=700,width=700');

        win.document.write('<html><head>');
        win.document.write('<title>Ordered List</title>');   // <title> FOR PDF HEADER.
        win.document.write(style);          // ADD STYLE INSIDE THE HEAD TAG.
        win.document.write('</head>');
        win.document.write('<body>');
        win.document.write('<body>');
        win.document.write(sTable);         // THE TABLE CONTENTS INSIDE THE BODY TAG.
        win.document.write('</body></html>');

        win.document.close(); // CLOSE THE CURRENT WINDOW.

        win.print();    // PRINT THE CONTENTS.
    }
</script>