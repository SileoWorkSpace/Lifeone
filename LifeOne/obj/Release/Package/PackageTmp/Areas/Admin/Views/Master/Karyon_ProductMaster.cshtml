@model LifeOne.Models.AdminManagement.AEntity.MAdminProductMaster
@{
    ViewBag.Title = "Karyon_ProductMaster";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<style>
    .card-body.em .row .col-md-6 {
        margin-bottom: 10px;
    }
    /* The container */
    .container2 {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 15px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default radio button */
        .container2 input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    /* Create a custom radio button */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
        border-radius: 50%;
    }

    /* On mouse-over, add a grey background color */
    .container2:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the radio button is checked, add a blue background */
    .container2 input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the indicator (the dot/circle - hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the indicator (dot/circle) when checked */
    .container2 input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the indicator (dot/circle) */
    .container2 .checkmark:after {
        top: 9px;
        left: 9px;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: white;
    }

    .dv_Orbit {
        display: none;
    }

    .hide {
        display: none;
    }
</style>
@{
    string msg = (string)TempData["msg"];
    string code = (string)TempData["code"];
    if (msg != null)
    {
        if (code.Equals("1"))
        {
            <div class="alert alert-success m-t-30 msgdiv" id="divsuccess">
                <i class="mdi mdi-checkbox-multiple-marked-outline"></i> <strong>Success!</strong> @msg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">×</span> </button>
            </div>

        }
        else
        {
            <div class="alert alert-success m-t-30 msgdiv" id="divUpdate">
                <i class="mdi mdi-checkbox-multiple-marked-outline"></i>  <strong>Error!</strong> @msg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">×</span> </button>
            </div>




        }
    }
}
<br />

@*@using (Html.BeginForm("ProductMaster", "ProductMaster", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()*@

<div class="registration-form  ml-auto mr-auto no-float" ng-app="My-App" ng-controller="My-Ctrl">
    <div class="container" style="background-color:#fff; padding:20px;border-radius:10px;">
        <div class="row">
            <div class="card">
                <div class="card-body em">
                    <div class="col-md-12">
                        <div class="mb-30">
                            <h2 class="nonecase-font txt-grey">Karyon Product Master</h2>
                        </div>
                        <hr />
                    </div>

                    <div class="col-md-12">
                        <form name="ProductMasterForm" novalidate>
                            <div class="row">
                                <div class="col-md-3">
                                    <label>Product Name<span style="color:red;">*</span></label>
                                    <input type="text" ng-model="Product.ProductName" name="ProductName" id="ProductName" class="form-control" required />
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.ProductName.$error.required || ProductMasterForm.ProductName.invalid">Please Fill ProductName</span>
                                </div>

                                <div class="col-md-3">
                                    <label>Product SKU<span style="color:red;">*</span></label>
                                    <input type="text" ng-model="Product.ProductSKU" name="ProductSKU" id="ProductSKU" class="form-control" required />
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.ProductSKU.$error.required || ProductMasterForm.ProductSKU.invalid">Please Fill ProductSKU</span>
                                </div>

                                <div class="col-md-3">
                                    <label>MRP<span style="color:red;">*</span></label>
                                    <input type="text" ng-model="Product.MRP" name="MRP" id="MRP" class="form-control" onkeypress="return isNumberKey(event)" required />
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.MRP.$error.required || ProductMasterForm.MRP.invalid">Please Fill MRP</span>

                                </div>
                                <div class="col-md-3">
                                    <label>Sale Price<span style="color:red;">*</span></label>
                                    <input type="text" ng-model="Product.SalesPrice" name="SalesPrice" id="SalesPrice" class="form-control" onkeypress="return isNumberKey(event)" required />
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.SalesPrice.$error.required || ProductMasterForm.SalesPrice.invalid">Please Fill Sales Price</span>

                                </div>

                                <div class="col-md-3">
                                    <label>Unit<span style="color:red;">*</span></label>
                                    @Html.DropDownListFor(m => m.Fk_UnitId, new SelectList(ViewBag.ddUnit, "Value", "Text"), new { @class = "form-control" })

                                </div>
                                <div class="col-md-3  ">
                                    <label>Orbit Type<span class="text-danger"></span></label>
                                    <select class="form-control" id="FK_OrbitType" name="FK_OrbitType" ng-model="Product.FK_OrbitType" required>
                                        <option ng-repeat="v in OrbitList" value="{{v.Value}}">{{v.Text}}</option>
                                    </select>
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.FK_OrbitType.$error.required || ProductMasterForm.FK_OrbitType.invalid">Please Select Orbit Type</span>
                                </div>

                                <div class="col-md-3  ">
                                    <label>GST<span class="text-danger"></span></label>
                                    <input type="text" ng-model="Product.GST" name="IGST" id="IGST" class="form-control" onkeypress="return isNumberKey(event)" required />
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.IGST.$error.required || ProductMasterForm.IGST.invalid">Please Fill GST</span>
                                </div>

                                <div class="col-md-12  form-group">
                                    <label>Product Description<span style="color:red;">*</span></label>
                                    <textarea ng-model="Product.ProductDescription" name="ProductDescription" id="ProductDescription" class="form-control" required></textarea>
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.ProductDescription.$error.required || ProductMasterForm.ProductDescription.invalid">Please Fill Product Description</span>

                                </div>

                                <div class="col-md-3  form-group">
                                    <label>Product Image<span style="color:red;">*</span></label>
                                    <input type="file" name="Image" id="Image" class="form-control" onchange="uploadProfle(this)" />
                                    <span id="ImagePath" class="hide"></span>
                                    <img src="" id="productImage" style=" width: 112px; height: 118px;"/>
                                </div>
                            </div>
                            <br />
                            <hr />
                            <div class="row" ng-repeat="v in AddProductOptions">
                                <div class="col-md-2">
                                    <label>Size<span style="color:red;">*</span></label>
                                    <input type="text" ng-model="v.Size" name="Size{{$index+1}}" id="Size{{$index+1}}" onkeypress="return isNumberKey(event)" class="form-control" maxlength="6" required />
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.Size{{$index+1}}.$error.required || ProductMasterForm.Size{{$index+1}}.invalid">Please Fill Size</span>
                                </div>

                                <div class="col-md-2">
                                    <label>Price<span style="color:red;">*</span></label>
                                    <input type="text" ng-model="v.Price" name="Price{{$index+1}}" id="Price{{$index+1}}" onkeypress="return isNumberKey(event)" class="form-control" maxlength="5" required />
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.Price{{$index+1}}.$error.required || ProductMasterForm.Price{{$index+1}}.invalid">Please Fill Price</span>
                                </div>
                                <div class="col-md-2">
                                    <label>BoxSize<span style="color:red;">*</span></label>
                                    <input type="text" ng-model="v.BoxSize" name="BoxSize{{$index+1}}" id="BoxSize{{$index+1}}" onkeypress="return isNumberKey(event)" class="form-control" maxlength="2" required />
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.BoxSize{{$index+1}}.$error.required || ProductMasterForm.BoxSize{{$index+1}}.invalid">Please Fill BoxSize</span>
                                </div>
                                <div class="col-md-2">
                                    <label>DP<span style="color:red;">*</span></label>
                                    <input type="text" ng-model="v.DP" name="DP{{$index+1}}" id="DP{{$index+1}}" onkeypress="return isNumberKey(event)" class="form-control" maxlength="5" required />
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.DP{{$index+1}}.$error.required || ProductMasterForm.DP{{$index+1}}.invalid">Please Fill DP</span>
                                </div>
                                <div class="col-md-2">
                                    <label>BV<span style="color:red;">*</span></label>
                                    <input type="text" ng-model="v.PV" name="PV{{$index+1}}" id="PV{{$index+1}}" onkeypress="return isNumberKey(event)" class="form-control" maxlength="5" required />
                                    <span class="text text-danger" ng-show="ProductMasterFormSubmitted && ProductMasterForm.PV{{$index+1}}.$error.required || ProductMasterForm.PV{{$index+1}}.invalid">Please Fill PV</span>
                                </div>

                                <div class="col-md-2 ">
                                    <button class="btn btn-sm btn-success" type="button" ng-click="AddRow()" style="margin-top:10px">ADD</button>
                                    <button class="btn btn-sm btn-danger" type="button" ng-click="RemoveRow($index+1)" style="margin-top:10px">Remove</button>
                                </div>
                            </div>
                            <br />
                        </form>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:10px">
                                <div class="text-center" style="margin-left:50px">
                                    @{
                                        var Button = "";
                                        if (Model == null)
                                        {
                                            Button = "Save";
                                        }

                                        else if (Model != null)
                                        {

                                            if (string.IsNullOrEmpty(Model.Pk_ProductId) || Model.Pk_ProductId == "0")
                                            {
                                                Button = "Save";
                                            }
                                            else
                                            {
                                                Button = "UpDate";
                                            }
                                        }
                                        @*<button type="button" value="@Button" class="btn btn-success" onclick="return validate();" name="@Button">@Button</button>
                                            < input type="submit" value="@Button" class="btn btn-success"   name="@Button" />*@

                                        <button type="button" class="btn btn-success" ng-click="SaveProduct(ProductMasterForm);ProductMasterFormSubmitted=true">{{btnValue}}</button>
                                    }

                                    <input type="submit" class="btn btn-success" id="idfinalsubmit" name="Save" style="display:none" />
                                    <a href="/Product-List" class="btn btn-danger"> Cancel</a>
                                </div>
                            </div>

                        </div>

                    </div>
                    <br />

                </div>
                @Html.HiddenFor(m => m.Pk_ProductId)

            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/angular.min.js"></script>

<script>
var app = angular.module('My-App', []);
    app.controller('My-Ctrl', function ($scope, $http) {
        var pID = localStorage.getItem("EditProductID");

        $scope.AddProductOptions = [];


        $scope.BindOrbit = function () {
            $http({
                url: '/Admin/ManageAssociateOrdered/BindOrbit',
                method: 'post'
            }).then(function (response) {
                debugger
                $scope.OrbitList = response.data;
            });
        }

        $scope.AddRow = function () {
            $scope.AddProductOptions.push({ Size: '', Price: '', BoxSize: '', DP: '', PV: '' });
        }

        $scope.RemoveRow = function (indx) {
            if ($scope.AddProductOptions.length > 1) {
                $scope.AddProductOptions.splice((indx - 1), 1);
            }
        }

        $scope.SaveProduct = function (ProductMasterFormValue) {
            debugger
            if (ProductMasterFormValue.$valid) {
                $scope.Product.Unit = $('#Fk_UnitId option:selected').text();
                $scope.Product.ProductImage = $('#ImagePath').text();
                if ($scope.Product.Unit != '--Select--' && $scope.Product.FK_OrbitType != '0') {
                    var obj = {
                        ProductDetails: $scope.Product,
                        ProductOptionsList: $scope.AddProductOptions
                    };

                    $http({
                        url: '/Admin/Master/Karyon_ProductMaster',
                        method: 'post',
                        data: obj
                    }).then(function (response) {
                        window.location.href = '/Product-List';
                    })
                }
                else {
                    alert("Please select mandatory fields");
                    return false;
                }
            }
            else {
                $scope.invalid = true;
                return false;
            }
        }

        $scope.EditProductDetail = function (id) {
            $http({
                url: '/Admin/Master/GetKaryon_ProductDetail?id=' + id,
                method: 'post',
            }).then(function (response) {
                debugger
                localStorage.setItem("EditProductID", null);
                if (response.data != null) {
                    $scope.Product = response.data.ProductDetails;
                    $scope.Product.FK_OrbitType = $scope.Product.FK_OrbitType.toString();
                    $('#productImage').attr('src', $scope.Product.ProductImage);
                    angular.forEach(response.data.ProductOptionsList, function (value, key) {
                        $scope.AddProductOptions.push({ Size: value.Size, Price: value.Price, BoxSize: value.BoxSize, DP: value.DP, PV: value.PV });
                    });
                    $scope.AddProductOptions.push();
                }
            })
        }
        if (pID == "null" || pID == null || pID == undefined || pID == '') {
            $scope.AddProductOptions.push({ Size: '', Price: '', BoxSize: '', DP: '', PV: '' });
            $scope.btnValue = "Save";
        }
        else {
            $scope.EditProductDetail(pID);
            $scope.btnValue = "Update";
        }


        $scope.BindOrbit();
    });
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;
    }

    function uploadProfle(documentType) {
        debugger
        var formData = new FormData();
        formData.append('image', documentType.files[0]);
        $.ajax({
            url: '/Admin/Master/UploadProduct',
            type: "post",
            data: formData,
            processData: false,  // tell jQuery not to process the data
            contentType: false,
            success: function (response) {
                $('#ImagePath').text(response);
                $('#productImage').attr('src', response);
            },
            error: function (er) {
                alert("An Error Occured");
                return false;
            }
        });

    }

</script>

