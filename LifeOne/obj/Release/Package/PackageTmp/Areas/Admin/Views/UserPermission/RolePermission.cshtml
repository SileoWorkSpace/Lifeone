@using LifeOne.Models.AdminManagement.AEntity;
@model LifeOne.Models.AdminManagement.AEntity.RolePermissionModel
@{
    ViewBag.Title = "RolePermission";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container-fluid">
    <div class="row page-titles">
        <div class="ptitle">
            <h4 class="mb-1 mt-0">Role Master</h4>
            @*<nav aria-label="breadcrumb" class="float-left mt-1">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Admin-Dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="#">User Permission</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Role Master </li>
                </ol>
            </nav>*@
        </div>
    </div>

    <div id="no-more-tables">
        <div id="no-more-tables">
            <div class="row">
                <div class="col-lg-12 col-md-offset-4">
                    <div class="box">
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-6 col-lg-2">
                                    <div class="form-group">
                                        <label for="password">Roles<span class="text-danger">*</span></label>
                                        @if (Model != null && Model.FK_RoleId != null)
                                        {
                                            @Html.DropDownListFor(M => M.FK_RoleId, new SelectList(ViewBag.ddlRoles, "Value", "Text"), new { @class = "form-control", @id = "FK_RoleId", @placeholder = "Select Roles", @style = "padding:.4rem 1rem", @disabled = "disabled" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(M => M.FK_RoleId, new SelectList(ViewBag.ddlRoles, "Value", "Text"), new { @class = "form-control", @id = "FK_RoleId", @placeholder = "Select Roles", @style = "padding:.4rem 1rem" })
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 col-lg-12">
                                    <table class="table table-hover" id="tblRolePermission">
                                        <thead>
                                            <tr class="hdr">
                                                <th align="left" scope="col" style="background:#ebf4fb;">S. No.</th>
                                                <th align="left" scope="col" style="background:#ebf4fb;">Form Type</th>
                                                <th align="left" scope="col" style="background:#ebf4fb;">Form Name</th>
                                                <th align="left" scope="col" style="background:#ebf4fb;"><span>View</span> &nbsp;<input type="checkbox" id="chkSelectAllView" data-chktype="FormView" /></th>
                                                <th align="left" scope="col" style="background:#ebf4fb;"><span>Save</span> &nbsp;<input type="checkbox" id="chkSelectAllSave" data-chktype="FormSave" /></th>
                                                <th align="left" scope="col" style="background:#ebf4fb;"><span>Update</span> &nbsp;<input type="checkbox" id="chkSelectAllUpdate" data-chktype="FormUpdate" /></th>
                                                <th align="left" scope="col" style="background:#ebf4fb;"><span>Delete</span> &nbsp;<input type="checkbox" id="chkSelectAllDelete" data-chktype="FormDelete" /></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (ViewBag.RolePermissionFormList != null)
                                            {
                                                int SrNo = 1;
                                                foreach (var row in ((List<RolePermissionModel>)ViewBag.RolePermissionFormList))
                                                {
                                                    <tr>
                                                        <td>
                                                            @(SrNo++)
                                                            <input type="hidden" name="rolePermissionId" value="@(Model != null && Model.RolePermissionList.Where(x => x.FK_FormTypeId == row.FK_FormTypeId && x.FK_FormMasterId == row.FK_FormMasterId).FirstOrDefault() != null ? Model.RolePermissionList.Where(x => x.FK_FormTypeId == row.FK_FormTypeId && x.FK_FormMasterId == row.FK_FormMasterId).FirstOrDefault().PK_RolePermissionId :"")" />
                                                        </td>
                                                        <td>
                                                            @row.FormType
                                                            <input type="hidden" name="FK_FormTypeId" value="@row.FK_FormTypeId" />
                                                        </td>
                                                        <td>
                                                            @row.FormName
                                                            <input type="hidden" name="FK_FormMasterId" value="@row.FK_FormMasterId" />
                                                        </td>
                                                        @if (Model != null)
                                                        {
                                                            <td>
                                                                <input type="checkbox" name="FormView" @(Model.RolePermissionList.Exists(x => x.FK_FormTypeId == row.FK_FormTypeId && x.FK_FormMasterId == row.FK_FormMasterId && x.FormView) ? "checked" : "") />
                                                            </td>
                                                            <td>
                                                                <input type="checkbox" name="FormSave" @(Model.RolePermissionList.Exists(x => x.FK_FormTypeId == row.FK_FormTypeId && x.FK_FormMasterId == row.FK_FormMasterId && x.FormSave) ? "checked" : "") />
                                                            </td>
                                                            <td>
                                                                <input type="checkbox" name="FormUpdate" @(Model.RolePermissionList.Exists(x => x.FK_FormTypeId == row.FK_FormTypeId && x.FK_FormMasterId == row.FK_FormMasterId && x.FormUpdate) ? "checked" : "") />
                                                            </td>
                                                            <td>
                                                                <input type="checkbox" name="FormDelete" @(Model.RolePermissionList.Exists(x => x.FK_FormTypeId == row.FK_FormTypeId && x.FK_FormMasterId == row.FK_FormMasterId && x.FormDelete) ? "checked" : "") />
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td>
                                                                <input type="checkbox" name="FormView" @(row.FormView ? "checked" : "") />
                                                            </td>
                                                            <td>
                                                                <input type="checkbox" name="FormSave" @(row.FormSave ? "checked" : "") />
                                                            </td>
                                                            <td>
                                                                <input type="checkbox" name="FormUpdate" @(row.FormUpdate ? "checked" : "") />
                                                            </td>
                                                            <td>
                                                                <input type="checkbox" name="FormDelete" @(row.FormDelete ? "checked" : "") />
                                                            </td>
                                                        }
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                    <div class="card-action">
                                        @*@if (Model != null)
                                        {
                                            if (Model.FK_RoleId != null)
                                            {
                                                <input type="submit" class="btn btn-success" name="Update" value="Update" id="Update" onclick="return validate();" />
                                                <a href="/UserPermission/RolePermissionList" class="btn btn-danger">Cancel</a>
                                            }
                                        }
                                        else
                                        {
                                            <input type="submit" class="btn btn-success" name="Save" value="Save" id="btnFinalSave" onclick="return validate();" />
                                            <a href="/UserPermission/RolePermissionList" class="btn btn-danger">Cancel</a>
                                        }*@

                                        <input type="submit" class="btn btn-success" name="Save" value="Save" id="btnFinalSave" onclick="return validate();" />
                                        <a href="/UserPermission/RolePermissionList" class="btn btn-danger">Cancel</a>

                                        @Html.HiddenFor(M => M.FK_RoleId)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Content/assests/js/QcrmLib.js"></script>
<script>




    $(function () {
        var mdl = [];
        $("#btnFinalSave").click(function () {
            if ($("#FK_RoleId").val() == undefined || $("#FK_RoleId").val() == '' || $("#FK_RoleId").val() == null) {
                alert("Please select Role");
                return false;
            }

            $("#tblRolePermission tbody tr").each(function (index, elm) {

                mdl.push({
                    FK_RoleId: $("#FK_RoleId").val(),
                    FK_FormTypeId: $(elm).find("input[name=FK_FormTypeId]").val(),
                    FK_FormMasterId: $(elm).find("input[name=FK_FormMasterId]").val(),
                    FormView: $(elm).find("input[name=FormView]").prop("checked"),
                    FormSave: $(elm).find("input[name=FormSave]").prop("checked"),
                    FormUpdate: $(elm).find("input[name=FormUpdate]").prop("checked"),
                    FormDelete: $(elm).find("input[name=FormDelete]").prop("checked"),
                    FK_UserId:window.location.search.substring(1).split('&')[0].split('=')[1]
                });
            });
            var role = {
                FK_RoleId: $("#FK_RoleId").val(), RolePermissionList: mdl
            };
            $.ajax({
                type: 'post',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                traditional: true,
                url: '/admin/userpermission/rolepermissionjsoninsert',
                data: JSON.stringify({ "roles": role }),
                success: function (data) {
                    if (data.code == "1") {
                        alert(data.msg);
                        mdl = [];
                        location.href = "/Role-Permission-List";
                        return false;
                    }
                    else {
                        mdl = [];
                        alert(data.msg);
                        return false;
                    }
                },
                error: function (error) {
                    mdl = [];
                    alert('something went wrong !!');
                }
            });
        });

        $("#Update").click(function () {
            $("#tblRolePermission tbody tr[data-checked=checked]").each(function (index, elm) {
                mdl.push({
                    PK_RolePermissionId: $(elm).find("input[name=rolePermissionId]").val(),
                    FK_RoleId: $("#FK_RoleId").val(),
                    FK_FormTypeId: $(elm).find("input[name=FK_FormTypeId]").val(),
                    FK_FormMasterId: $(elm).find("input[name=FK_FormMasterId]").val(),
                    FormView: $(elm).find("input[name=FormView]").prop("checked"),
                    FormSave: $(elm).find("input[name=FormSave]").prop("checked"),
                    FormUpdate: $(elm).find("input[name=FormUpdate]").prop("checked"),
                    FormDelete: $(elm).find("input[name=FormDelete]").prop("checked"),
                });
            });
            var role = {
                FK_RoleId: $("#FK_RoleId").val(), RolePermissionList: mdl
            };
            $.ajax({
                type: 'post',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                traditional: true,
                url: '/admin/userpermission/RolePermissionJsonUpdate',
                data: JSON.stringify({ "roles": role }),
                success: function (data) {
                    if (data.code == "1") {
                        alert(data.msg);
                        mdl = [];
                        location.href = "/Role-Permission-List";
                        return false;
                    }
                    else {
                        mdl = [];
                        alert(data.msg);
                        return false;
                    }
                },
                error: function (error) {
                    mdl = [];
                    alert('something went wrong !!');
                }
            });
        });

        $("tbody input:checkbox").change(function (elm) {
            $(this).parents("tr").attr("data-checked", "checked");
        });

        $("#chkSelectAllView,#chkSelectAllSave,#chkSelectAllUpdate,#chkSelectAllDelete").change(function () {
            var chkVal = $(this).prop("checked");
            var targetChk = $(this).data("chktype");
            $("input[name=" + targetChk + "]").prop("checked", chkVal);
            $("tbody tr").attr("data-checked", "checked");
        });

    });
</script>


<script>
    $("#tblRolePermission").DataTable({
        "pageLength": 100,
        'columnDefs': [{
            'targets': [, 3, 4, 5, 6], /* column index */
            'orderable': false, /* true or false */
        }]
    });
</script>



