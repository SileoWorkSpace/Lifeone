@using LifeOne.Models.Manager;
@model LifeOne.Models.FranchiseManagement.FEntity.MFranchiseorderRequest
@{
    ViewBag.Title = "UpgradePackage";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



<link href="~/Content/admin-assets/libs/select2/select2.min.css" rel="stylesheet" />
<script src="~/Content/plugins/jQuery/jQuery-2.1.4.min.js"></script>
<style>

    .list-inline > li {
        display: inline-block;
        padding-right: 15px;
        padding-left: 5px;
    }

    .dv_Orbit {
        display: none;
    }

    .boxhide {
        display: none;
    }

    .hide {
        display: none;
    }
</style>
<div class="container-fluid">
    <div class="row page-titles">
        <div class="ptitle">
            <h4 class="mb-1 mt-0">Package Upgrade</h4>
            <nav aria-label="breadcrumb" class="float-left mt-1">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="#">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="#">Package Upgrade</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Package Upgrade</li>
                </ol>
            </nav>
        </div>
    </div>


    <div id="no-more-tables">
        <div class="row">
            <div class="col-lg-12">
                <div class="box">
                    <div class="box-body">

                        <div class="show">
                            <div class="row">
                                <div class="col-md-6 col-lg-4">
                                    <div class="form-group">
                                        <label for="CustomerMobileNo">Member LoginId.<span class="text-danger"></span></label>
                                        @Html.TextBoxFor(m => m.CustomerMobile, new { @class = "form-control", @onchange = "GetCustomerDetails()" })
                                        <span id="spCustomerName" style="color:green;font-weight:bold"></span>
                                        @Html.HiddenFor(m => m.CustomerId)
                                    </div>
                                </div>
                                <div class="col-md-6 col-lg-4">
                                    <div class="form-group" style="margin-top: 35px;display:none;" id="divmemberDetail">
                                        <ul class="list-inline well well-sm " style="font-size:15px;">
                                            <li><b>Order For:</b> </li>
                                            <li><i class="fa fa-user"></i> <span id="custName"></span></li>
                                            <li><i class="fa fa-mobile"></i> <span id="custMob"></span></li>
                                            <li><i class="fa fa-envelope"></i> <span id="custEmail"></span></li>

                                        </ul>

                                    </div>
                                </div>


                                
                            </div>
                            <div class="row">
                                <div class="col-md-6 col-lg-4">
                                    <div class="form-group" style="margin-top: 35px;display:none;" id="divcurrentPackage">
                                        <ul class="list-inline well well-sm " style="font-size:15px;">
                                            <li><b>Current Package Name</b> </li>
                                            <li>
                                                <i class="fa family-holiday-package"></i> <span id="lblCPackage"></span> ( <i class="fa fa-rupee"></i> <span id="lblPrice"></span>)

                                                BV
                                                <i class="fa fa-rupee"></i> <span id="lblbv"></span>
                                            </li>


                                        </ul>

                                    </div>
                                </div>


                            </div>
                        </div>
                
                        <div class="row" id="divpackage" style="display:none;">
                            <div class="col-sm-6 col-md-4 col-lg-2">
                                <div class="form-group">
                                    <label for="Product">Package Name<span class="text-danger"></span></label>

                                    <select class="form-control" id="ddlBindPackage">
                                        
                                    </select>
                                   
                                </div>
                            </div>

                            <div class="col-sm-6 col-md-4 col-lg-2">
                                <label style="visibility:hidden;">btn</label>
                                <div>
                                    <input type="button" value="Upgrade" class="btn btn-success" onclick="UpgradePackage()">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-12" id="divItem" style="display:none;">
                <div class="box">
                    <div class="box-body">
                        <div class="text-xs-center">
                            <div class="row">
                                <div class="col-md-12" id="replacetarget">
                                    <div>
                                        <div class="box-body">
                                            <table class="table " id="TmpProdgrd">
                                                <thead>
                                                    <tr>
                                                        <th>Sn</th>
                                                        <th>Item Name</th>

                                                        <th>Price(₹)</th>

                                                        <th>DP</th>
                                                        <th>Quantity</th>
                                                        <th>BV</th>
                                                        <th>SUB Total</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="TmpProdgrd1">
                                                    <tr>
                                                        <td colspan="8">no records founds..</td>
                                                    </tr>
                                                </tbody>
                                                <tfoot>
                                                    <tr><td></td><td><h2>Total:</h2></td><td>price</td><td>DP</td><td>QTY</td><td>BV</td><td>SUB TOTAL</td></tr>
                                                </tfoot>
                                            </table>


                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="box box-warning">
                                <div class="box-body">
                                    <div class="row">
                                        <div class="col-sm-9 col-xs-12">
                                            <div class="form-group">
                                                <label>Remark</label>
                                                @Html.TextAreaFor(m => m.PaymentRemark, new { @class = "form-control", @rows = "4", @col = "4" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3 col-xs-12">
                                            <div class="form-group">
                                                <label>Payment Mode</label>
                                                <select id="PaymentMode" name="PaymentMode" class="form-control">
                                                    <option value="0">Payment Mode</option>
                                                    <option value="Cash">Cash</option>
                                                    @*<option value="Wallet">Wallet</option>*@
                                                    <option value="NEFT">NEFT</option>
                                                    <option value="RTGS">RTGS</option>
                                                    <option value="IMPS">IMPS</option>
                                                </select>
                                                <input type="hidden" id="hdnTotQty" name="hdnTotQty">
                                            </div>
                                            <div class="form-group">
                                                <button class="btn btn-success btn-block waves-effect waves-light" type="button" onclick="return AdminOrderBilling()" value="Submit Request">Submit Request</button>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row" style="display:none;" id="divwalletbalnce">
                                        <div class="col-md-8">
                                            <div class="row showewalletdiv " id="divShowWallet">
                                                <div class="col-md-12" style="padding-bottom: 13px;font-size: 17px;font-weight: bold;">
                                                    Current Wallet Balance : <span id="spanbindwalletamt" style="color:red"><b>0.00</b> </span>
                                                    <span style="font-size:17px;font-weight: bold;color:red" id="custommessage"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div style="display:none;" id="divpaymenttype">
                                        <div class="row">
                                            <div class="col-sm-6 col-md-4 col-lg-3">
                                                <div class="form-group">
                                                    <label>Cheque/DD No./Bank Transaction No.</label>
                                                    @Html.TextBoxFor(m => m.ChequeDDNo, new { @class = "form-control", @maxlength = "30" })
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-md-4 col-lg-3">
                                                <div class="form-group">
                                                    <label>Cheque/DD Date/Transaction Date</label>
                                                    @Html.TextBoxFor(m => m.ChequeDDDate, new { @class = "form-control", @maxlength = "30", @type = "date" })
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-md-4 col-lg-3">
                                                <div class="form-group">
                                                    <label>Bank Name</label>
                                                    @Html.TextBoxFor(m => m.BankName, new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="col-sm-6 col-md-4 col-lg-3" style="display:none;" id="divpaymenttypeSlip">
                                                <div class="form-group">
                                                    <label>Payment Slip</label>
                                                    @Html.TextBoxFor(m => m.PaymentSlip, new { @type = "file", @class = "form-control", onchange = "UploadFile(this,'PaymentSlip','ManageFranchise')" })
                                                    @Html.HiddenFor(m => m.HdnPaymentSlip)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="TotalProductAmount" />

</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
<script>


    $(".select").select2({
        allowClear: false
    });
</script>

<script>
    function rdbBoxTypeChecked() {
        $('.dv_Orbit').css('display', 'none');
        if ($('input[type=radio]:checked').val() == "Box") {
            //$('.dv_Orbit').css('display', 'block');
            BindOrbit();

        }
    }

    function CheckProduct() {
        $('.dv_Orbit').css('display', 'none');
        $('.boxhide').css('display', 'none');
        $('#dvPointVal').css('display', '');
        //if ($('#IsBox').prop('checked') && $('#PrdId').val() != "0") {
        var _prdId = $('#PrdId').val();
        $.ajax({
            url: "/Admin/ManageAssociateOrdered/CheckProduct",
            type: "POST",
            dataType: 'json',
            data: JSON.stringify({ prdId: _prdId }),
            contentType: "application/json",
            success: function (result) {
                if (result != null) {
                    if (result.Code == 1) {
                        // $('.dv_Orbit').css('display', 'block');
                        $('.boxhide').css('display', 'inline-block');
                        $('#dvPointVal').css('display', 'none');
                        $('#BoxQty').val(result.BoxQty);
                        $('#BoxPV').val(result.BoxPV);
                        $('#spBoxQty').text(result.BoxQty);
                        $('#spBoxPV').text(result.BoxPV);
                    }
                    else {
                        alert(result.Remark);
                        showSnazzyErrorMessage(result.Remark)
                        $('#IsBox').prop('checked', '');
                    }
                }

            },
            error: function (err) {
                showSnazzyErrorMessage(err.statusText);
                return false;
            }
        });
        // }
    }

    function BindOrbit() {
        $('.dv_Orbit').css('display', 'block');
        $('#FK_OrbitType').html('');
        $.ajax({
            url: "/Admin/ManageAssociateOrdered/BindOrbit",
            type: "POST",
            dataType: 'json',
            contentType: "application/json",
            success: function (result) {
                if (result != null) {
                    var htmlText = "";
                    for (var i = 0; i < result.length; i++) {
                        htmlText += "<option value=" + result[i].Value + ">" + result[i].Text + "</option>"
                    }
                    $('#FK_OrbitType').html(htmlText);
                    var _OrbitId = ''
                    if (_OrbitId != "" && _OrbitId != "0") {
                        $('#FK_OrbitType').val(_OrbitId);
                    }
                }

            },
            error: function (err) {
                showSnazzyErrorMessage(err.statusText);
                return false;
            }
        });
    }


    $(document).ready(function () {
        if (sessionStorage.getItem("customerRequestId") == null) {
            sessionStorage.setItem("customerRequestId", "0")
        }
        if (sessionStorage.getItem("customerId") == null) {
            $('#CustomerId').val('0');
        }
        else {
            $('#CustomerId').val(sessionStorage.getItem("customerId"));

        }

        if (sessionStorage.getItem("customerName") == null) {

            $('#custName').text('--');
        }
        else {
            $('#custName').text(sessionStorage.getItem("customerName"));
            $('#custMob').text(sessionStorage.getItem("CustomerMobile"));
            $('#custEmail').text(sessionStorage.getItem("CustomerEmail"));
        }

        GetOrderTemp();
    })

    function calculateDueAmt() {
        var total = $('#TotalProductAmount').val();
        var dueAmt = $('#txtDueAmt').val();
        var finalTotal = parseFloat(total) - parseFloat(dueAmt);
        $('#txtSubTotal').text(finalTotal);
        $('#txtFinalTotal').text(finalTotal);
    }

    function GetCustomerDetails() {
        var _mobile = $('#CustomerMobile').val();
        if (_mobile != "") {
            $.ajax({
                url: "/Admin/ManageAssociateOrdered/CustomerDetailforUpgradePackage",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ CustomerMobile: _mobile }),
                contentType: "application/json",
                success: function (result) {

                    if (result != null) {
                        if (result.Code == 1) {
                            $('#divmemberDetail').show();
                            $('#CustomerId').val(result.CustomerId);
                            $('#spCustomerName').text(result.CustomerName);

                            $('#custName').text(result.CustomerName);
                            $('#custMob').text(result.CustomerMobile);
                            $('#custEmail').text(result.CustomerMail);
                            $('#divcurrentPackage').show();

                            $('#lblCPackage').text(result.PackageName);
                            $('#lblPrice').text(result.PackageAmount);
                            $('#lblbv').text(result.BP);


                            $('#divpackage').show();
                            $('#divItem').hide();

                            $('#ddlBindPackage').empty();
                            $('#ddlBindPackage').append('<option value="0">--SELECT---</option>')
                            for (var i = 0; i < result.PackageList.length; i++) {

                            $('#ddlBindPackage').append('<option value=' + result.PackageList[i].Value + '>' + result.PackageList[i].Text + '</option>')


                            }


                        }
                        else {
                            alert(result.Remark);
                            $('#CustomerMobile').val('');
                            $('#CustomerMobile').focus();
                            $('#CustomerId').val('');
                            $('#spCustomerName').text('');

                            $('#custName').text('');
                            $('#custMob').text('');
                            $('#custEmail').text('');
                            $('#divmemberDetail').hide();
                            $('#divpackage').hide();
                            $('#divItem').hide();
                        }
                    }

                },
                error: function (err) {
                    showSnazzyErrorMessage(err.statusText);
                    return false;
                }
            });
        }
    }

    function BindProduct() {
        var _catId = $('#CategoryId').val()
        if (_catId != undefined && _catId != "") {
            $.ajax({
                url: "/Admin/ManageAssociateOrdered/BindProduct",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ CategoryId: _catId }),
                contentType: "application/json",
                success: function (result) {
                    if (result != null) {
                        var htmlText = "";
                        for (var i = 0; i < result.length; i++) {
                            htmlText += "<option value=" + result[i].Value + ">" + result[i].Text + "</option>"
                        }
                        $('#PrdId').html(htmlText)
                    }

                },
                error: function (err) {
                    showSnazzyErrorMessage(err.statusText);
                    return false;
                }
            });
        }
    }
    var Sno = 1;
    var Sno1 = 1;
    var Price = 0;
    var dp = 0;
    var bv = 0;
    var STotal = 0;
    function GetProductDetails() {

        var _prId = $('#PrdId').val()
        if (_prId != undefined && _prId != "" && _prId != "0" && IsValidate() == true) {

            $.ajax({
                url: "/Admin/ManageAssociateOrdered/GetProductDetails",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ PrdId: _prId }),
                contentType: "application/json",
                success: function (result) {
                    if (result != null) {
                        $('#TmpProdgrd1').empty();

                        for (var i = 0; i < result.length; i++) {


                            Price += parseFloat(result[i].Price);
                            dp += parseFloat(result[i].DP);
                            bv += parseFloat(result[i].BP);
                            STotal += parseFloat(result[i].SubTotal);

                            $('#TmpProdgrd1').append('<tr><td>' + Sno++ + '</td><td>' + result[i].ProductName + '</td><td>' + result[i].Price + '</td><td>' + result[i].DP + '</td><td><input type="text" value=' + result[i].qty + ' id="txtqty" onchange="CalclateSubTotal(' + Sno1++ + ');"></td><td>' + result[i].BP + '</td><td>' + result[i].SubTotal + '</td></tr>');


                        }
                        SumTotalFooter();
                       
                    }

                },
                error: function (err) {
                    showSnazzyErrorMessage(err.statusText);
                    return false;
                }
            });
        }

    }

    function IsValidate() {
       
        if ($('#CustomerMobile').val() == '') {

            alert('Please Enter LoginId');
            $('#CustomerMobile').focus();
            return false;
        }
        if ($('#CustomerId').val() == 0 || $('#CustomerId').val() == '' || $('#CustomerId').val() == undefined) {

            alert('Please Enter LoginId');
            $('#CustomerMobile').focus();
            return false;
        }
        return true;

    }

    function Cleartext() {
        $('#PrdId').val(0);
        $('#CategoryId').val(0);
        $('#Amount').val('');
        $('#PointValue').val('');
        $('#Quantity').val('');
        $('#TotalAmt').val('');
        $('#AvailableStock').val('');
        $('#DiscountAmt').val('');
    }




    function AddItem() {
        var catId = $('#CategoryId').val();
        var reqId = sessionStorage.getItem("customerRequestId");
        var CustomerId = sessionStorage.getItem("customerId");
        var prdId = $('#PrdId').val();
        var amount = $('#Amount').val();
        var pV = $('#PointValue').val();
        var quantity = $('#Quantity').val();
        var totalAmt = $('#TotalAmt').val();
        var discountAmt = $('#DiscountAmt').val();
        var AvailStock = $('#AvailableStock').val();
        var IsBox = $('#IsBox').prop('checked');
        var _boxQty = $('#BoxQty').val();
        var _BoxPV = $('#BoxPV').val();

        if (catId == "" || catId == "0") {

            showSnazzyErrorMessage("Please select Product Category")
            return false;
        }
        else if (prdId == "" || prdId == "0") {

            showSnazzyErrorMessage("Please select Product");
            return false;
        }
        else if (quantity == "") {

            showSnazzyErrorMessage("Please enter Quantity");
            return false;
        }
        else if (parseInt(AvailStock) < parseInt(quantity)) {
            showSnazzyErrorMessage("Insufficient Stock");
            return false;
        }
        else {

            $.ajax({
                url: "/Admin/ManageAssociateOrdered/AddProduct",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ CustomerId: CustomerId, CategoryId: catId, PrdId: prdId, Amount: amount, PointValue: pV, Quantity: quantity, TotalAmt: totalAmt, ReqId: reqId, DiscountAmt: discountAmt, AvailableStock: AvailStock, IsBox: IsBox, BoxQty: _boxQty, BoxPV: _BoxPV }),
                contentType: "application/json",
                async: false,
                success: function (result) {
                    if (result != null) {
                        if (result.Code == 1) {
                            $('#RequestId').val(result.RequestId);
                            sessionStorage.setItem("customerRequestId", result.RequestId);
                            GetOrderTemp();
                            showSnazzySuccessMessage("Item Added Successfully.");
                            Cleartext();
                        }
                        else {
                            showSnazzyErrorMessage(result.Remark);
                        }
                    }
                },
                error: function (err) {
                    alert(err.statusText);
                    return false;
                }
            });
        }
    }

    function GetOrderTemp() {

        var reqId = 0;
        var CustomerId = 0;
        if (sessionStorage.getItem("customerRequestId") != 0) {
            reqId = sessionStorage.getItem("customerRequestId");
            CustomerId = sessionStorage.getItem("customerId");
        }

        var reqId = sessionStorage.getItem("customerRequestId");
        $.ajax({
            url: "/Admin/ManageAssociateOrdered/GetOrderTemp",
            type: "POST",
            dataType: 'json',
            data: JSON.stringify({ RequestId: reqId, CustomerId: CustomerId }),
            contentType: "application/json",
            async: false,
            success: function (result) {
                if (result != null) {
                    var html = "";
                    var html1 = ""
                    var TotalItemAmt = 0;
                    var TotalPv = 0;
                    var FinalAmount = 0;
                    var ItemAmt = 0;
                    var TotalDiscount = 0;
                    var TotalQty = 0;
                    var TotalPvSum = 0;




                    for (var i = 0; i < result.length; i++) {
                        if (result[i].BoxType == "False") {
                            ItemAmt = ItemAmt + parseFloat(result[i].Amount);
                            TotalDiscount = TotalDiscount + parseFloat(result[i].DiscountAmt);
                            TotalItemAmt = TotalItemAmt + (parseFloat(result[i].Amount) * parseFloat(result[i].Quantity)) - parseFloat(result[i].DiscountAmt);
                            FinalAmount = (parseFloat(result[i].Amount) * parseFloat(result[i].Quantity)) - parseFloat(result[i].DiscountAmt);
                            TotalPv = TotalPv + parseFloat(result[i].PointValue);
                            TotalQty = TotalQty + parseInt(result[i].Quantity);
                            TotalPvSum = TotalPvSum + (parseInt(result[i].PointValue) * parseInt(result[i].Quantity));


                            html += "<tr>"

                            html += "<td>" + (i + 1) + "</td><td>" + result[i].ProductName + "</td><td id='tdProdType'>Single</td><td id='tdAvlStock'>" + result[i].AvailableStock + "</td ><td style='display:none'>--</td><td> " + result[i].Quantity + " </td><td id='tdPrice'>" + result[i].Amount + "</td><td id='tdPV'>" + result[i].PointValue + "</td><td>" + (parseInt(result[i].PointValue) * parseInt(result[i].Quantity)) + "</td><td id='tdAmt'>" + FinalAmount + "</td><td><a id='btn_del' title='Delete' data-toggle='tooltip' class='btn btn-danger btn-sm' onclick='DeleteProduct(" + result[i].PK_KeyId + ");'><i class='fa fa-trash'></i></a></td></tr>";
                        }
                        else {
                            ItemAmt = ItemAmt + parseFloat(result[i].Amount);
                            TotalDiscount = TotalDiscount + parseFloat(result[i].DiscountAmt);
                            TotalItemAmt = TotalItemAmt + (parseFloat(result[i].Amount) * (parseFloat(result[i].ReqBoxQty) * parseFloat(result[i].BoxQty))) - parseFloat(result[i].DiscountAmt);
                            FinalAmount = (parseFloat(result[i].Amount) * (parseFloat(result[i].ReqBoxQty) * parseFloat(result[i].BoxQty))) - parseFloat(result[i].DiscountAmt);
                            TotalPv = TotalPv + parseFloat(result[i].BoxPV);
                            TotalQty = TotalQty + parseInt(result[i].Quantity);
                            TotalPvSum = TotalPvSum + (parseInt(result[i].BoxPV) * parseInt(result[i].ReqBoxQty));


                            html += "<tr>"
                            html += "<td>" + (i + 1) + "</td><td style='display:none' id='tdBoxQty'>" + result[i].BoxQty + "</td><td>" + result[i].ProductName + "</td><td id='tdProdType'>Box</td><td  id='tdAvlStock'>" + result[i].AvailableStock + "</td><td style='display:none'>" + result[i].BoxQty + "</td><td>" + result[i].Quantity + " </td><td id='tdPrice'>" + result[i].Amount + "</td><td id='tdPV'>" + result[i].BoxPV + "</td><td>" + (parseInt(result[i].BoxPV) * parseInt(result[i].ReqBoxQty)) + "</td><td id='tdAmt'>" + FinalAmount + "</td><td><a id='btn_del' title='Delete' data-toggle='tooltip' class='btn btn-danger btn-sm' onclick='DeleteProduct(" + result[i].PK_KeyId + ");'><i class='fa fa-trash'></i></a></td></tr>";
                        }
                    }
                    html1 += ""
                    $('#TmpProdgrd tbody').html('');
                    $('#TmpProdgrd tfoot').html('');
                    $('#TmpProdgrd tbody').append(html);
                    $('#TmpProdgrd tfoot').append(html1)
                    $('#TotalProductAmount').val(TotalItemAmt)   //Use For Final Save
                    $('#txtSubTotal').text(TotalItemAmt);
                    $('#txtFinalTotal').text(TotalItemAmt);
                    $('#grdSummary').removeClass('hide');
                }

            },
            error: function (err) {
                alert(err.statusText);
                return false;
            }
        });
    }

    function BindUpdatedFigureAmt(obj, Id, ProdId) {
        var qty = parseInt(obj.value);
        var ReqQty = qty;
        if (parseInt(ReqQty) <= 0) {
            showSnazzyErrorMessage("Quantity can not be Zero");
            $(obj).val('0')
        }
        var prodType = $(obj).parent().parent().find('[id=tdProdType]').text();
        var avlStock = $(obj).parent().parent().find('[id=tdAvlStock]').text();
        var prodAmt = $(obj).parent().parent().find('[id=tdPrice]').text();
        var totalPV = parseInt($(obj).parent().parent().find('[id=tdPV]').text()) * qty;
        var Amt = parseFloat(prodAmt) * qty;
        var _ReqId = sessionStorage.getItem("customerRequestId");
        if (prodType == "Box") {
            var BoxQty = $(obj).parent().parent().find('[id=tdBoxQty]').text();
            qty = qty * parseInt(BoxQty);
        }
        if (parseInt(avlStock) < qty) {
            showSnazzyErrorMessage("Quantity can not be greater than from current quantity");
            $(obj).val('0')

            $.ajax({
                url: "/Admin/ManageAssociateOrdered/BindUpdatedFigureAmtCustomer",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ ReqId: _ReqId, PK_KeyId: Id, Quantity: 0, TotalPv: totalPV, TotalAmt: Amt, PrdId: ProdId, reqQty: 0 }),
                contentType: "application/json",
                success: function (result) {
                    if (result != null && result.Code == 1)
                        GetOrderTemp();
                    else
                        showSnazzyErrorMessage(result.Remark);
                },
                error: function (err) {
                    showSnazzyErrorMessage(err.statusText);
                    return false;
                }
            });
            //return false;
        }
        if (obj.value != "0") {
            $.ajax({
                url: "/Admin/ManageAssociateOrdered/BindUpdatedFigureAmtCustomer",
                type: "POST",
                dataType: 'json',
                data: JSON.stringify({ ReqId: _ReqId, PK_KeyId: Id, Quantity: qty, TotalPv: totalPV, TotalAmt: Amt, PrdId: ProdId, reqQty: ReqQty }),
                contentType: "application/json",
                success: function (result) {
                    if (result != null && result.Code == 1)
                        GetOrderTemp();
                    else
                        showSnazzyErrorMessage(result.Remark);
                },
                error: function (err) {
                    showSnazzyErrorMessage(err.statusText);
                    return false;
                }
            });
        }
    }

    function UpdateSubTotal() {

        var Discount = 0;
        var Qty = $('#Quantity').val();
        var Amount = $('#Amount').val();
        var TotalAmt = (parseInt(Qty) == NaN ? 0 : parseInt(Qty)) * (parseFloat(Amount));
        var boxQty = $('#spBoxQty').text();
        if ($('#DiscountAmt').val() != "" && $('#DiscountAmt').val() != undefined) {
            Discount = parseFloat($('#DiscountAmt').val());
            if (Discount > TotalAmt) {
                $('#DiscountAmt').val('0')
                showSnazzyErrorMessage('Discount Amount can not be Greater than Total Amount !');
                return false
            }
        }

        if ($('#IsBox').prop('checked')) {
            var TotalAmt = ((parseInt(Qty) * parseInt(boxQty)) * (parseFloat(Amount)) - Discount);
            $('#TotalAmt').val(TotalAmt);
        }
        else {
            var TotalAmt = ((parseInt(Qty) == NaN ? 0 : parseInt(Qty)) * (parseFloat(Amount)) - Discount);
            $('#TotalAmt').val(TotalAmt);
        }

    }

    $('#PaymentMode').on('change', function () {

        if ($('#PaymentMode').val() == "Cash" || $('#PaymentMode').val() == "0") {

            $('#divpaymenttype').css('display', 'none');
            $('#divpaymenttypeSlip').css('display', 'none');
            $('#divwalletbalnce').css('display', 'none');
        }
        else if ($("#PaymentMode").val() == "Wallet") {

            $('#divwalletbalnce').css('display', 'block');


            $("#divShowWallet").show();


            var model = {
                Fk_MemId: sessionStorage.getItem("customerId")
            }
            $.ajax({
                type: 'POST',
                url: 'CustomermemberWalletBalance',
                data: JSON.stringify(model),
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                async: false,
                success: function (data) {
                    if (data == null || parseFloat(data.Balance) == parseFloat("0.00")) {
                        $("#custommessage").append("<span>Insufficient wallet balance.</span>");
                    }
                    else {
                        $("#spanbindwalletamt").text(data.Balance);
                        $(".showewalletdiv").fadeIn();
                        $(".showewalletdiv").fadeOut();
                        $(".showewalletdiv").fadeIn();
                        $(".showewalletdiv").fadeOut();
                        $(".showewalletdiv").fadeIn();
                    }
                },
                error: function (err) {
                    alert(err.statusText);
                    $("#spanbindwalletamt").text("0.00");
                    $(".showewalletdiv").addClass("hide");
                }
            });

            $("#divShowWallet").show();
            $('#divpaymenttype').css('display', 'none');
            $('#divpaymenttypeSlip').css('display', 'none');
        }
        else {

            $('#divpaymenttype').css('display', 'block');
            $('#divpaymenttypeSlip').css('display', 'block');
            $('#divwalletbalnce').css('display', 'none');
        }
        //else {
        //    $('#divpaymenttype').css('display', 'block');
        //    $('#divpaymenttypeSlip').css('display', 'block');
        //}
    })

    function DeleteProduct(Id) {
        if (confirm("Are you sure want to delete this Item ?")) {
            if (Id != null && Id != undefined && Id != "0") {
                $.ajax({
                    url: "/Admin/ManageAssociateOrdered/DeleteProductTemp",
                    type: "POST",
                    dataType: 'json',
                    data: JSON.stringify({ PK_KeyId: Id }),
                    contentType: "application/json",
                    success: function (result) {
                        if (result != null) {
                            if (result.Code == 2) {
                                showSnazzySuccessMessage(result.Remark);
                                GetOrderTemp();
                            }
                        }

                    },
                    error: function (err) {
                        showSnazzyErrorMessage(err.statusText);
                        return false;
                    }
                });
            }
        }
    }

    function Validate1() {
        if (sessionStorage.getItem("customerRequestId") == "" || sessionStorage.getItem("customerRequestId") == "0") {
            showSnazzyErrorMessage('Some internal error !');
            return false
        }
        //if ($('#TotalProductAmount').val() == undefined || $('#TotalProductAmount').val() == null) {
        //    showSnazzyErrorMessage('Some internal problem');
        //    return false
        //}
        if ($('#PaymentMode').val() == "0") {
            showSnazzyErrorMessage('Please select Payment Mode!');
            return false
        }
        if ($('#PaymentMode').val() != "Cash" && $('#PaymentMode').val() != "0") {
            if ($('#ChequeDDNo').val() == "") {
                showSnazzyErrorMessage('Please enter Cheque/DD No/Bank Transaction Number !');
                return false
            }
            else if ($('#ChequeDDDate').val() == undefined || $('#ChequeDDDate').val() == "") {
                showSnazzyErrorMessage('Please enter Cheque/DD/Bank Date !');
                return false
            }
            else if ($('#BankName').val() == undefined || $('#BankName').val() == "") {
                showSnazzyErrorMessage('Please enter Bank Name !');
                return false
            }
        }

        if ($('#CustomerId').val() == "" || $('#CustomerId').val() == "0") {
            showSnazzyErrorMessage('Some internal error !');
            return false
        }


        var _totalItemAmt = $('#TotalProductAmount').val();
        var PayMode = $('#PaymentMode').val();
        var _hdnReceipt = $('#HdnPaymentSlip').val();
        var _BankName = $('#BankName').val();
        var _TranNo = $('#ChequeDDNo').val();
        var _TranDate = $('#ChequeDDDate').val();
        var _Remark = $('#PaymentRemark').val();
        var _ToId = $('#CustomerId').val();
        var _txtDueAmt = $('#txtDueAmt').val();
        var _ReqId = sessionStorage.getItem("customerRequestId");

        $.ajax({
            url: "/Admin/ManageAssociateOrdered/SaveProduct",
            type: "POST",
            dataType: 'json',
            data: JSON.stringify({ ReqId: _ReqId, TotalItemAmt: _totalItemAmt, PaymentMode: PayMode, ChequeDDNo: _TranNo, BankName: _BankName, HdnPaymentSlip: _hdnReceipt, ChequeDDDate: _TranDate, PaymentRemark: _Remark, CustomerId: _ToId, DueAmt: _txtDueAmt }),
            contentType: "application/json",
            success: function (result) {
                if (result != null) {
                    if (result.Code == 1) {
                        showSnazzySuccessMessage(result.Remark);
                        window.location.href = "/OrderForCustomer";
                    }
                }
            },
            error: function (err) {
                alert(err.statusText);
                return false;
            }
        });
    }

    function UploadFile(obj, subdir, type) {
        var Id = $(obj).attr("Id");
        var data = new FormData();
        var files = $("#" + Id).get(0).files;

        if (files.length > 0) {
            data.append("file", files[0]);
            data.append("subdir", subdir);
        }
        else {
            showSnazzyErrorMessage('Please select file to upload.');
            return false;
        }
        var extension = $("#" + Id).val().split('.').pop().toUpperCase();
        if (extension != "PNG" && extension != "JPG" && extension != "JPEG" && extension != "BMP") {
            showSnazzyErrorMessage('Invalid image file format.Only jpg,jpeg,png,bmp files are allow');
            return false;
        }
        $.ajax({
            url: '/Common/Uploadfile',
            type: "POST",
            processData: false,
            data: data,
            dataType: 'json',
            contentType: false,
            success: function (response) {
                if (response != null || response != '') {
                    if (response.Result == "success") {
                        $("#" + Id + "Path").val("");
                        $("#HdnPaymentSlip").val(response.Path);
                        //$("#divpreview").show();
                        //$("#divpreview").empty();
                        //$('#imgStudent').attr('src', '');
                        //$("#divpreview").append('<img id="imgStudent" class="m-t-20" src="' + response.Path.replace('~', '') + '" height="40px" width="40px"/>');
                        showSnazzySuccessMessage(response.Msg)
                    }
                    else
                        showSnazzyErrorMessage(response.Msg);
                }

            },
            error: function (er) {
                showSnazzyErrorMessage('An error occured');
            }
        });

    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;
    }

    function isAlphabets(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 32) {
            return true;
        }
        return false;
    }











    function UpgradePackage() {


        if (IsValidate() == true) {

       
     

        $.ajax({
            type: 'POST',
            url: '/Admin/ManageAssociateOrdered/AdminUpgradeOrderBilling',
            data: { fk_memid: $('#CustomerId').val(), PackageId: $('#ddlBindPackage option:selected').val() },
            dataType: 'JSON',
            containtType: 'application/json;charset=utf-8',
            success: function (data) {
                if (data != null) {
                    if (data.Code == "1") {
                        alert(data.Message);
                        window.location.href = "/Admin-PackageUpgrade";
                    }
                    else {
                        alert(data.Message);
                    }

                }

            },
            error: function (error) { },






        });

        }
    }
    function IsValidate() {

        if ($('#ddlBindPackage option:selected').val() == "0") {


            alert('Please Select Package Name');
            $('#ddlBindPackage').focus();
            return false;
        }
        return true;
    }


















    function AdminOrderBilling() {

        var OrderDetails = [];
        $('#TmpProdgrd1').find('tr').each(function () {

            OrderDetails.push({
                productname: $(this).find('td').eq(1).html(),
                quatity: $(this).find('td').eq(4).find('input[type=text]').val(),
                image: '',
                price: $(this).find('td').eq(2).html(),
                DP: $(this).find('td').eq(3).html(),
                BV: $(this).find('td').eq(5).html()

            });


        });

        //var model = {
        //    Fk_MemId: $('#CustomerId').val(),
        //    TransactionNo:$('#ChequeDDNo').val(),
        //    TotalAmount:0,
        //    Amount:0,
        //    Paymentmode: $('#PaymentMode option:selected').val(),
        //    BankName: $('#BankName').val(),
        //    ReceiptImage: $('#HdnPaymentSlip').val(),
        //    ShippingAddress:'NA',
        //    BillingAddress:'NA',
        //    OrderDetails: OrderDetails
        //}
        var model = {};

        model.Fk_MemId = $('#CustomerId').val();
       

        $.ajax({
            type: 'POST',
            url: '/Admin/ManageAssociateOrdered/AdminUpgradeOrderBilling',
            data: { "fk_memid": $('#CustomerId').val(), TransactionNo: $('#ChequeDDNo').val(), Paymentmode: $('#PaymentMode option:selected').val(), BankName: $('#BankName').val(), ReceiptImage: $('#HdnPaymentSlip').val(), Remark: $('#PaymentRemark').val(), OrderDetails: OrderDetails },
            dataType: 'JSON',
            containtType: 'application/json;charset=utf-8',
            success: function (data) {
                if (data != null) {
                    if (data.Code == "1") {
                        alert(data.Message);
                        window.location.href = "/Admin-PackageUpgrade";
                    }
                    else {
                        alert(data.Message);
                    }

                }

            },
            error: function (error) { },






        });


    }

    function CalclateSubTotal(id) {


        $('#TmpProdgrd1').find('tr').each(function () {

            if (parseInt($(this).find('td').eq(0).html()) == parseInt(id)) {

                var qty = parseInt($(this).find('td').eq(4).find('input[type=text]').val());
                var SubT = parseFloat($(this).find('td').eq(3).html()) * qty;
                $(this).find('td').eq(6).html(SubT);
            }

        });

        SumTotalFooter();

    }

    function SumTotalFooter() {
        var Price = 0;
        var dp = 0;
        var bv = 0;
        var STotal = 0;

        $('#TmpProdgrd1').find('tr').each(function () {



            Price += parseInt($(this).find('td').eq(2).html());
            dp += parseFloat($(this).find('td').eq(3).html());
            bv += parseFloat($(this).find('td').eq(5).html());
            STotal += parseFloat($(this).find('td').eq(6).html());


        });

        $('#TmpProdgrd tfoot').empty();
        $('#TmpProdgrd tfoot').append('<tr><td></td><td><b>TOTAL</b></td><td>' + Price + '</td><td>' + dp + '</td><td></td><td>' + bv + '</td><td>' + STotal + '</td></tr>');

    }

</script>

