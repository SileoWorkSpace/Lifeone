@model LifeOne.Models.Reports

@{
    ViewBag.Title = "HomeAddress";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    input {
        -webkit-appearance: auto;
    }


</style>


<div class="page-header" style="background-image: url(/Content/NewAssests/images/page-header/contact-us.jpg) ">
    <h1 class="page-title font-weight-bold text-capitalize ls-l">Home Address</h1>
    <nav class="breadcrumb-nav">
        <ul class="breadcrumb">
            <li><a href="/Home/Index"><i class="d-icon-home"></i> <i class="bi bi-chevron-right"></i></a></li>
            <li>Home Address</li>
        </ul>
    </nav>
</div>
@using (Html.BeginForm("HomeAddress", "Home", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="registration-form  ml-auto my-5 mr-auto no-float">
        <div class="container">
            <div class="row">
                <div class="card mb-5">
                    <div class="card-body em">
                        <div class="col-md-12">
                            <div class="mb-30">
                                <h5 class="nonecase-font txt-grey">Address</h5>
                            </div>
                            <hr />
                        </div>
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-3 mb-2">
                                    <label>Name<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                </div>

                                <div class="col-md-3 mb-2">
                                    <label>Mobile<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control", @onkeypress = "return isNumberKey(event)", @MaxLength = "10" })
                                </div>
                                <div class="col-md-3 form-group  mb-2" id="dv_PV">
                                    <label>Address<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                                </div>
                                <div class="col-md-3  mb-2">
                                    <label>Land Mark<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.Landmark, new { @class = "form-control" })

                                </div>
                                <div class="col-md-3 form-group">
                                    <label>Pin Code<span style="color:red;">*</span></label>
                                    @*<input type="text" id="Pincode" onchange="GetDistrictCityStateDetailsByPincode()" name="PinCode" class="form-control" onkeypress="return isNumberKey(event)" />*@
                                    @Html.TextBoxFor(m => m.PinCode, new { @class = "form-control", @id = "Pincode", @onkeypress = "return isNumberKey(event)", @onchange = "GetDistrictCityStateDetailsByPincode()", @MaxLength = "6" })
                                </div>

                                <div class="col-md-3  mb-2">
                                    <label>City<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.City, new { @class = "form-control", @readonly = "readonly" })
                                    @*<select id="DistrictName" class="form-control city-name" name="City" onchange="BindDistrictDetail()"><option value="">--Select City--</option></select>*@
                                    @Html.HiddenFor(m => m.DistrictId)
                                </div>
                                <div class="col-md-3 mb-2">
                                    <label>State<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.State, new { @class = "form-control", @readonly = "readonly" })
                                    @Html.HiddenFor(m => m.StateId)

                                </div>
                                <div class="col-md-3 mb-2">
                                    <label>Address Type<span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.AddressType, new { @class = "form-control" })

                                </div>

                                <div class="col-md-3 mb-2">
                                    @if (Model.IsDefault == true)
                                    {
                                        @Html.CheckBoxFor(m => m.IsDefault, new { @type = "checkbox", @id = "IsDefault", @checked = "checked" })
                                        @*<input type="checkbox" id="IsDefault" name="IsDefault" checked />*@
                                    }
                                    else
                                    {
                                        @*<input type="checkbox" id="IsDefault" name="IsDefault" />*@
                                        @Html.CheckBoxFor(m => m.IsDefault, new { @type = "checkbox", @id = "IsDefault" })
                                    }
                                    <label>Default Address<span style="color:red;">*</span></label>

                                </div>

                            </div>
                            <br />

                            <div class="row">
                                <div class="col-md-12" style="margin-top:10px">
                                    <div class="text-center" style="margin-left:50px">
                                        @{
                                            var Button = "";
                                            if (Model == null)
                                            {
                                                Button = "Save";
                                            }

                                            else if (Model != null)
                                            {

                                                if (string.IsNullOrEmpty(Model.Pk_AddressId) || Model.Pk_AddressId == "0")
                                                {
                                                    Button = "Save";
                                                }
                                                else
                                                {
                                                    Button = "Update";
                                                }
                                            }
                                            <button type="submit" value="@Button" class="btn btn-primary btn-sm px-11" onclick="return validate();" name="@Button">@Button</button>

                                        }

                                        <a href="/Home/GetAddress" class=" btn btn-danger btn-hover-bg-primary btn-sm btn-hover-border-primary px-11"> Cancel</a>
                                    </div>
                                </div>

                            </div>

                        </div>
                        <br />

                    </div>
                    @Html.HiddenFor(m => m.Pk_AddressId)

                </div>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    function validate() {
        var Name = $('#Name').val();
        var MobileNo = $('#MobileNo').val();
        var Address = $('#Address').val();
        var Landmark = $('#Landmark').val();
        var State = $('#State').val();
        var City = $('#City').val();
        var PinCode = $('#Pincode').val();
        var AddressType = $('#AddressType').val();


        if (Name == null || Name == "") {
            alert("Please Enter Name");
            $("#Name").focus();
            return false;
        }
        else if (MobileNo == null || MobileNo == "") {
            alert("Please Enter Mobile Number");
            $("#MobileNo").focus();
            return false;
        }
        else if (MobileNo.length != 10) {
            alert("Please Enter  Valid Mobile Number");
            $("#MobileNo").focus();
            return false;
        }
        else if (Address == null || Address == "") {
            alert("Please Enter Address");
            $("#Address").focus();
            return false;
        }
        else if (Landmark == null || Landmark == "") {
            alert("Please Enter Land mark ");
            $("#Landmark").focus();
            return false;
        }
        else if (PinCode == null || PinCode == "") {
            alert("Please Enter PinCode");
            $("#Pincode").focus();
            return false;
        }
        else if (PinCode.length != 6) {
            alert("Please Enter Valid Pincode");
            $("#Pincode").focus();
            return false;
        }
        else if (State == null || State == "") {
            alert("Please Enter State");
            return false;
        }
        else if (City == null || City == "") {
            alert("Please Enter City");
            return false;
        }
        else if (AddressType == null || AddressType == "") {
            alert("Please Enter Address Type");
            $("#AddressType").focus();
            return false;
        }
        else {
            $('#idfinalsubmit').click();
        }
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;
    }
    function fcheckbox() {
        if ($('#IsDefault').val() == "1") {
            $('#IsDefault').attr('checked', true);
        }
    }

    function GetDistrictCityStateDetailsByPincode() {
        // Show loader
        $('#loader').show();
        $("#overlayer").show();

        if ($('#Pincode').val() == "" || $('#Pincode').val() == 0) {
            // If Pincode is empty or 0, clear City and State fields
            $('#City').val('');
            $('#State').val('');
            // Hide loader
            $('#loader').hide();
            $("#overlayer").hide();
            return false;
        }

        $.ajax({
            url: '/Home/GetLocationByPin',
            type: "POST",
            data: JSON.stringify({ "pin": $('#Pincode').val() }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (response) {
                if (response != null && response.length > 0) {
                    // Set City and State based on response
                    $("#City").val(response[0].District);
                    $("#State").val(response[0].State);
                } else {
                    // If response is empty or null, show warning
                    swal('', "Data does not exist", 'warning');
                }
            },
            error: function (er) {
                // Show error message
                swal('', "An Error Occurred", 'error');
            },
            complete: function () {
                // Hide loader regardless of success or error
                $('#loader').hide();
                $("#overlayer").hide();
            }
        });
    }


    //function GetDistrictCityStateDetailsByPincode() {
    //    debugger;
    //    if ($('#Pincode').val() == "" || $('#Pincode').val() == 0) {
    //        //swal('', "Please Enter Pincode", 'warning');
    //        $('#City').val('');
    //        $('#State').val('');
    //        return false;
    //    }
    //    $.ajax({
    //        url: '/Admin/FranchiseMaster/GetLocationByPin',
    //        type: "POST",
    //        data: JSON.stringify({ "pin": $('#Pincode').val() }),
    //        dataType: 'json',
    //        contentType: 'application/json',
    //        success: function (response) {
    //            if (response != null || response != '') {

    //                    $("#City").val(response[0].District);
    //                    $("#State").val(response[0].State);
    //            }
    //            else {
    //                swal('', "data does not exists", 'warning');
    //                return false;
    //            }
    //        },
    //        error: function (er) {
    //            swal('', "An Error Occured", 'error');
    //            return false;
    //        }
    //    });
    //}

    function BindDistrictDetail() {
        var data = JSON.parse(window.sessionStorage.getItem("regDistrictDetail"));
        var district = $("#Pincode").val();
        if (data != null) {
            sessionStorage.clear();
            $.each(data, function (i, item) {
                if (item.District == district) {
                    $("#City").val(item.State);
                    $("#State").val(item.State);
                    $("#Tehsil").val(item.DistrictDetail[0].Taluka);
                    $("#Zone").val(item.DistrictDetail[0].Zone);
                    $('#CountryId').val(1);
                }

            });

        }

    }
</script>
