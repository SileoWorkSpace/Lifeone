@model LifeOne.Models.HomeManagement.HEntity.UploadImageVideo
@{
    ViewBag.Title = "Video";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .gallery {
        display: flex;
        grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));
        grid-gap: 2rem;
        padding: 40px 0px 40px 0px;
        overflow: auto;
    }

    .gallery__item {
        box-shadow: 0 .1875rem .625rem rgba(0, 0, 0, 0.4);
        overflow: hidden;
        width:350px;
        height:250px;
    }

    .gallery__item {
        position: relative; /* To position the title absolutely inside the figure */
        overflow: hidden; /* Ensures content doesn't spill out */
    }

    .gallery__image {
        display: block;
        width: 100%;
        height: auto;
    }

    .gallery__image__caption {
        position: absolute;
        bottom: 0; /* Position at the bottom of the image */
        left: 0; /* Align to the left edge */
        width: 100%; /* Make the caption span the entire width of the image */
        padding: 0.5rem; /* Add padding for spacing */
        background-color: rgba(0, 0, 0, 0.6); /* Semi-transparent background */
        color: #fff; /* White text */
        text-align: center; /* Center the text */
        font-size: 14px; /* Adjust font size */
        box-sizing: border-box; /* Ensure padding is included in width */
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .gallery__image {
        display: block;
        object-fit: cover;
        transition: transform .3s ease-in-out, opacity .3s ease-in-out;
        height: 100%;
        width: 100%;
    }

        .gallery__image:hover {
            cursor: pointer;
            opacity: .7;
            transform: scale(1.15);
        }

            .gallery__image:hover + .gallery__image__caption {
                display: block;
            }



    .gallery__navigation--next,
    .gallery__navigation--prev,
    .gallery__navigation--close {
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: transparent;
        border: 0;
        cursor: pointer;
        font-size: 0;
        height: 42px;
        opacity: .5;
        overflow: hidden;
        padding: 0;
        transition: opacity .2s ease-in-out;
        width: 42px;
    }

        .gallery__navigation--next:hover,
        .gallery__navigation--prev:hover,
        .gallery__navigation--close:hover {
            opacity: 1;
        }

        .gallery__navigation--next::before,
        .gallery__navigation--prev::before {
            display: flex;
            content: "";
            border: solid #fff;
            border-width: 0 .25rem .25rem 0;
            padding: .5rem;
        }

    .gallery__navigation--next {
        right: 1.5rem;
        transform: rotate(-45deg);
    }

    .gallery__navigation--prev {
        left: 1.5rem;
        transform: rotate(135deg);
    }

    .gallery__navigation--close {
        top: 2rem;
        right: 2rem;
    }

        .gallery__navigation--close::before {
            position: absolute;
            left: 1rem;
            background-color: #fff;
            content: " ";
            height: 33px;
            transform: rotate(45deg);
            width: 2px;
        }

        .gallery__navigation--close::after {
            position: absolute;
            left: 1rem;
            background-color: #fff;
            content: " ";
            height: 33px;
            transform: rotate(-45deg);
            width: 2px;
        }

    .gallery__modal {
        position: fixed;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: rgba(0, 0, 0, 0.7);
        height: 100%;
        inset: 0;
        overflow-y: scroll;
        width: 100%;
        z-index: 999;
    }

        .gallery__modal img {
            display: block;
            margin: auto;
            max-width: 90%;
            max-height: 90%;
        }

        .gallery__modal[aria-hidden="true"] {
            display: none;
        }

        .gallery__modal[aria-hidden="false"] {
            display: flex;
        }

    .noscroll {
        overflow: hidden;
    }
</style>
<main class="main">
    <div class="page-header" style="background-image: url(/Content/NewAssests/images/page-header/contact-us.jpg) ">
        <h1 class="page-title font-weight-bold text-capitalize ls-l">Video Gallery</h1>
        <nav class="breadcrumb-nav">
            <ul class="breadcrumb">
                <li><a href="/Home/Index"><i class="d-icon-home"></i> <i class="bi bi-chevron-right"></i></a></li>
                <li>Video</li>
            </ul>
        </nav>
    </div>
    <section>
        <div class="container gallery">
            @{
                if (Model != null)
                {
                    if (Model.dtDetails != null)
                    {
                        for (int i = 0; i < Model.dtDetails.Rows.Count; i++)
                        {
                            <figure class="gallery__item">
                                <iframe width="100%" height="250" src="@Model.dtDetails.Rows[i]["Videolink"].ToString()" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
                            </figure>
                        }
                    }
                }
            }
            @*<figure class="gallery__item">
                    <iframe width="100%" height="250" src="https://www.youtube.com/embed/fD4xBhaBhAE?si=Nj5dNDuAGX2K7hp0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
                    <figcaption class="gallery__image__caption">A tent in the snowy mountains</figcaption>
                </figure>*@
        </div>
    </section>
</main>
<script>
    // Floating caption
    const imgContent = document.querySelectorAll('.gallery__image__caption');
    var x, y;

    function showImgContent(e) {
        for (var i = 0; i < imgContent.length; i++) {
            x = e.pageX;
            y = e.pageY;
           /* imgContent[i].style.transform = `translate(${x}px, ${y}px)`;*/
        }
    };

    document.addEventListener('mousemove', showImgContent);


    // Lightbox modal
    const body = document.body;
    const items = document.querySelectorAll(".gallery__item");
    const modal = document.createElement("section");
    const modalImg = document.createElement("img");
    const modalPrev = createButton(prevItem);
    const modalNext = createButton(nextItem);
    const modalClose = createButton(closeModal);
    let currentItem = 0;
    let modalInstance;

    modal.classList.add("gallery__modal");
    modalPrev.classList.add("gallery__navigation--prev");
    modalNext.classList.add("gallery__navigation--next");
    modalClose.classList.add("gallery__navigation--close");

    function createButton(action) {
        const button = document.createElement("button");
        button.addEventListener("click", action);
        return button;
    }

    function prevItem() {
        currentItem = (currentItem - 1 + items.length) % items.length;
        showModal();
    }

    function nextItem() {
        currentItem = (currentItem + 1) % items.length;
        showModal();
    }

    function closeModal() {
        modal.remove();
    }

    function showModal() {
        modalImg.image = items[currentItem].querySelector("img");
        modalImg.src = modalImg.image.src;
        modalImg.alt = modalImg.image.alt;
        modal.append(modalImg, modalPrev, modalNext, modalClose);
        document.body.appendChild(modal);
    }

    items.forEach(function (image) {
        image.addEventListener('click', function () {
            /* Detect the image class name */
            var overlayOpen = this.className === 'gallery__item';

            /**
             * Storing a reference to the opening image
             */
            if (overlayOpen) {
                modalInstance = this;
            }

            /**
             * Toggle the aria-hidden state on the overlay and the
             * no-scroll class on the body
             */
            modal.setAttribute('aria-hidden', !overlayOpen);
            body.classList.toggle('noscroll', overlayOpen);

            /**
             * Run the function that creates the modal content
             * and that appends it to the body
             */
            showModal();

            /**
             * On some mobile browser when the overlay was previously
             * opened and scrolled, if you open it again it doesn't
             * reset its scrollTop property
             */
            modal.scrollTop = 0;

            /**
             * Forcing focus for Assistive technologies.
             * Note that:
             * - if the modal has just a phrase and a button move the
             *   focus on the button,
             * - if the modal has a long text inside (e.g. a privacy
             *   statement) move the focus on the first heading inside
             *   the modal,
             * - otherwise just focus the modal.
             *
             * When you close the overlay restore the focus on the
             * button that opened the modal.
             */
            if (overlayOpen) {
                modal.focus();
            } else {
                modalInstance.focus();
                modalInstance = null;
            }
        }, false);
    });

    /**
     * Attach class `noscroll` to the body to prevent background scrolling
     * and set `aria` attributes for accessible devices
     */
    document.body.addEventListener('keyup', (ev) => {
        if (ev.key === "Escape" && modal.getAttribute('aria-hidden') === 'false') {
            modal.setAttribute('aria-hidden', 'true');
            body.classList.toggle('noscroll', false);
            modalInstance.focus();
            modalInstance = null;
        }
    })
</script>




